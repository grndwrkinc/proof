Index: autodescription.php
===================================================================
--- autodescription.php	(revision 1475679)
+++ autodescription.php	(working copy)
@@ -3,7 +3,7 @@
  * Plugin Name: The SEO Framework
  * Plugin URI: https://wordpress.org/plugins/autodescription/
  * Description: An automated, advanced, accessible, unbranded and extremely fast SEO solution for any WordPress website.
- * Version: 2.6.6.2
+ * Version: 2.7.0
  * Author: Sybre Waaijer
  * Author URI: https://cyberwire.nl/
  * License: GPLv3
@@ -11,6 +11,8 @@
  * Domain Path: /language
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * The SEO Framework plugin
  * Copyright (C) 2015 - 2016 Sybre Waaijer, CyberWire (https://cyberwire.nl/)
@@ -34,6 +36,8 @@
 	//		define( 'THE_SEO_FRAMEWORK_DEBUG', true );
 	//		define( 'THE_SEO_FRAMEWORK_DEBUG_HIDDEN', true );
 	//		define( 'THE_SEO_FRAMEWORK_DISABLE_TRANSIENTS', true );
+	//		update_option( 'the_seo_framework_upgraded_db_version', '0' );
+	//		add_filter( 'the_seo_framework_use_object_cache', '__return_false' );
 	//}
 //}},0);
 
@@ -42,9 +46,15 @@
  * Not many caching plugins use CDN in dashboard. What a shame. Firefox does cache.
  * @since 1.0.0
  */
-define( 'THE_SEO_FRAMEWORK_VERSION', '2.6.6.2' );
+define( 'THE_SEO_FRAMEWORK_VERSION', '2.7.0' );
 
 /**
+ * Plugin Database version for lightweight version comparing.
+ * @since 2.7.0
+ */
+define( 'THE_SEO_FRAMEWORK_DB_VERSION', '2701' );
+
+/**
  * Plugin options filter.
  * @since 2.2.2
  */
@@ -57,6 +67,18 @@
 define( 'THE_SEO_FRAMEWORK_NETWORK_OPTIONS', (string) apply_filters( 'the_seo_framework_network_settings', 'autodescription-network-settings' ) );
 
 /**
+ * Plugin term options filter.
+ * @since 2.7.0
+ */
+define( 'THE_SEO_FRAMEWORK_TERM_OPTIONS', (string) apply_filters( 'the_seo_framework_term_options', 'autodescription-term-settings' ) );
+
+/**
+ * Plugin term options filter.
+ * @since 2.7.0
+ */
+define( 'THE_SEO_FRAMEWORK_USER_OPTIONS', (string) apply_filters( 'the_seo_framework_user_options', 'autodescription-user-settings' ) );
+
+/**
  * The plugin map url.
  * Used for calling browser files.
  * @since 2.2.2
@@ -83,16 +105,22 @@
 define( 'THE_SEO_FRAMEWORK_PLUGIN_BASE_FILE', __FILE__ );
 
 /**
+ * The plugin views map absolute path.
+ * @since 2.7.0
+ */
+define( 'THE_SEO_FRAMEWORK_DIR_PATH_VIEWS', THE_SEO_FRAMEWORK_DIR_PATH . 'inc/views/' );
+
+/**
  * The plugin class map absolute path.
  * @since 2.2.9
  */
-define( 'THE_SEO_FRAMEWORK_DIR_PATH_CLASS', THE_SEO_FRAMEWORK_DIR_PATH . '/inc/classes/' );
+define( 'THE_SEO_FRAMEWORK_DIR_PATH_CLASS', THE_SEO_FRAMEWORK_DIR_PATH . 'inc/classes/' );
 
 /**
  * The plugin function map absolute path.
  * @since 2.2.9
  */
-define( 'THE_SEO_FRAMEWORK_DIR_PATH_FUNCT', THE_SEO_FRAMEWORK_DIR_PATH . '/inc/functions/' );
+define( 'THE_SEO_FRAMEWORK_DIR_PATH_FUNCT', THE_SEO_FRAMEWORK_DIR_PATH . 'inc/functions/' );
 
 add_action( 'plugins_loaded', 'the_seo_framework_locale_init', 10 );
 /**
@@ -109,15 +137,14 @@
  * @since 1.0.0
  * @uses THE_SEO_FRAMEWORK_DIR_PATH
  */
-require_once( THE_SEO_FRAMEWORK_DIR_PATH . '/load.class.php' );
+require_once( THE_SEO_FRAMEWORK_DIR_PATH . 'load.class.php' );
 
 //* Load deprecated functions.
-//require_once( THE_SEO_FRAMEWORK_DIR_PATH . 'inc/deprecated/deprecated.php' );
+require_once( THE_SEO_FRAMEWORK_DIR_PATH . 'inc/deprecated/deprecated.php' );
 
 /**
  * FLush permalinks on activation/deactivation.
- * Calls functions statically.
- * @since 2.2.9
+ * @since 2.6.6
  */
 register_activation_hook( THE_SEO_FRAMEWORK_PLUGIN_BASE_FILE, 'the_seo_framework_flush_rewrite_rules_activation' );
 register_deactivation_hook( THE_SEO_FRAMEWORK_PLUGIN_BASE_FILE, 'the_seo_framework_flush_rewrite_rules_deactivation' );
Index: inc/classes/admin-init.class.php
===================================================================
--- inc/classes/admin-init.class.php	(nonexistent)
+++ inc/classes/admin-init.class.php	(working copy)
@@ -0,0 +1,453 @@
+<?php
+/**
+ * The SEO Framework plugin
+ * Copyright (C) 2015 - 2016 Sybre Waaijer, CyberWire (https://cyberwire.nl/)
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 3 as published
+ * by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+defined( 'ABSPATH' ) or die;
+
+/**
+ * Class AutoDescription_Admin_Init
+ *
+ * Initializes the plugin for the wp-admin screens.
+ * Enqueues CSS and Javascript.
+ *
+ * @since 2.1.6
+ */
+class AutoDescription_Admin_Init extends AutoDescription_Init {
+
+	/**
+	 * The page base file.
+	 *
+	 * @since 2.5.2.2
+	 *
+	 * @var string Holds Admin page base file.
+	 */
+	protected $page_base_file;
+
+	/**
+	 * JavaScript name identifier to be used with enqueuing.
+	 *
+	 * @since 2.5.2.2
+	 *
+	 * @var string JavaScript name identifier.
+	 */
+	public $js_name = 'autodescription';
+
+	/**
+	 * CSS script name identifier to be used with enqueuing.
+	 *
+	 * @since 2.6.0
+	 *
+	 * @var string CSS name identifier.
+	 */
+	public $css_name = 'autodescription';
+
+	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
+	 * Constructor. Loads parent constructor, registers script names and adds actions.
+	 */
+	public function __construct() {
+		parent::__construct();
+
+		//* Enqueues admin scripts.
+		add_action( 'admin_enqueue_scripts', array( $this, 'enqueue_admin_scripts' ), 0, 1 );
+
+		//* Admin AJAX for counter options.
+		add_action( 'wp_ajax_the_seo_framework_update_counter', array( $this, 'wp_ajax_update_counter_type' ) );
+
+	}
+
+	/**
+	 * Enqueues scripts in the admin area on the supported screens.
+	 *
+	 * @since 2.3.3
+	 *
+	 * @param string $hook The current page hook.
+	 */
+	public function enqueue_admin_scripts( $hook ) {
+
+		$enqueue_hooks = array(
+			'edit.php',
+			'post.php',
+			'post-new.php',
+			'edit-tags.php',
+			'term.php',
+		);
+
+		/**
+		 * Check hook first.
+		 * @since 2.3.9
+		 */
+		if ( isset( $hook ) && $hook && in_array( $hook, $enqueue_hooks, true ) ) {
+			/**
+			 * @uses $this->post_type_supports_custom_seo()
+			 * @since 2.3.9
+			 */
+			if ( $this->post_type_supports_custom_seo() )
+				$this->init_admin_scripts();
+		}
+	}
+
+	/**
+	 * Registers admin scripts and styles.
+	 *
+	 * @since 2.6.0
+	 */
+	public function init_admin_scripts( $direct = false ) {
+
+		if ( $direct ) {
+			$this->enqueue_admin_css( $this->page_base_file );
+			$this->enqueue_admin_javascript( $this->page_base_file );
+		} else {
+			add_action( 'admin_enqueue_scripts', array( $this, 'enqueue_admin_css' ), 1 );
+			add_action( 'admin_enqueue_scripts', array( $this, 'enqueue_admin_javascript' ), 1 );
+		}
+
+	}
+
+	/**
+	 * Enqueues scripts.
+	 *
+	 * @since 2.0.2
+	 *
+	 * @param string $hook The current page hook.
+	 */
+	public function enqueue_admin_javascript( $hook ) {
+
+		/**
+		 * Put hook and js name in class vars.
+		 * @since 2.5.2.2
+		 */
+		$this->page_base_file = $this->page_base_file ? $this->page_base_file : $hook;
+
+		//* Register the script.
+		$this->register_admin_javascript();
+
+		wp_enqueue_script( $this->js_name );
+
+		/**
+		 * Localize JavaScript.
+		 * @since 2.5.2.2
+		 */
+		add_action( 'admin_footer', array( $this, 'localize_admin_javascript' ) );
+
+	}
+
+	/**
+	 * Registers admin CSS.
+	 *
+	 * @since 2.6.0
+	 * @staticvar bool $registered : Prevents Re-registering of the style.
+	 * @access private
+	 */
+	public function register_admin_javascript() {
+
+		static $registered = null;
+
+		if ( isset( $registered ) )
+			return;
+
+		$suffix = $this->script_debug ? '' : '.min';
+
+		wp_register_script( $this->js_name, THE_SEO_FRAMEWORK_DIR_URL . "lib/js/autodescription{$suffix}.js", array( 'jquery' ), THE_SEO_FRAMEWORK_VERSION, true );
+
+		$registered = true;
+
+	}
+
+	/**
+	 * Localizes admin javascript.
+	 *
+	 * @since 2.5.2.2
+	 * @staticvar bool $localized : Prevents Re-registering of the l10n.
+	 * @access private
+	 */
+	public function localize_admin_javascript() {
+
+		static $localized = null;
+
+		if ( isset( $localized ) )
+			return;
+
+		$strings = $this->get_javascript_l10n();
+
+		wp_localize_script( $this->js_name, 'autodescriptionL10n', $strings );
+
+		$localized = true;
+
+	}
+
+	/**
+	 * Generate Javascript Localization.
+	 *
+	 * @since 2.6.0
+	 * @staticvar array $strings : The l10n strings.
+	 * @since 2.7.0 Added AJAX nonce: 'autodescription-ajax-nonce'
+	 *
+	 * @return array $strings The l10n strings.
+	 */
+	protected function get_javascript_l10n() {
+
+		static $strings = null;
+
+		if ( isset( $strings ) )
+			return $strings;
+
+		$blog_name = $this->get_blogname();
+		$description = $this->get_blogdescription();
+		$title = '';
+		$additions = '';
+
+		$tagline = (bool) $this->get_option( 'homepage_tagline' );
+		$home_tagline = $this->get_option( 'homepage_title_tagline' );
+		$title_location = $this->get_option( 'title_location' );
+		$title_add_additions = $this->add_title_additions();
+		$counter_type = (int) $this->get_user_option( 0, 'counter_type', 3 );
+
+		//* Enunciate the lenghts of Titles and Descriptions.
+		$good = __( 'Good', 'autodescription' );
+		$okay = __( 'Okay', 'autodescription' );
+		$bad = __( 'Bad', 'autodescription' );
+		$unknown = __( 'Unknown', 'autodescription' );
+
+		$title_separator = $this->get_separator( 'title' );
+		$description_separator = $this->get_separator( 'description' );
+
+		$isrtl = (bool) is_rtl();
+		$ishome = false;
+
+		if ( isset( $this->page_base_file ) && $this->page_base_file ) {
+			// We're somewhere within default WordPress pages.
+			$post_id = $this->get_the_real_ID();
+
+			if ( $this->is_static_frontpage( $post_id ) ) {
+				$title = $blog_name;
+				$title_location = $this->get_option( 'home_title_location' );
+				$ishome = true;
+
+				if ( $tagline ) {
+					$additions = $home_tagline ? $home_tagline : $description;
+				} else {
+					$additions = '';
+				}
+			} elseif ( $post_id ) {
+				//* We're on post.php
+				$generated_doctitle_args = array(
+					'term_id' => $post_id,
+					'notagline' => true,
+					'get_custom_field' => false,
+				);
+
+				$title = $this->title( '', '', '', $generated_doctitle_args );
+
+				if ( $title_add_additions ) {
+					$additions = $blog_name;
+					$tagline = true;
+				} else {
+					$additions = '';
+					$tagline = false;
+				}
+			} elseif ( $this->is_archive() ) {
+				//* Category or Tag.
+				global $current_screen;
+
+				if ( isset( $current_screen->taxonomy ) ) {
+
+					$term_id = $this->get_admin_term_id();
+
+					if ( $term_id ) {
+						$generated_doctitle_args = array(
+							'term_id' => $term_id,
+							'taxonomy' => $current_screen->taxonomy,
+							'notagline' => true,
+							'get_custom_field' => false,
+						);
+
+						$title = $this->title( '', '', '', $generated_doctitle_args );
+						$additions = $title_add_additions ? $blog_name : '';
+					}
+				}
+			} else {
+				//* We're in a special place.
+				// Can't fetch title.
+				$title = '';
+				$additions = $title_add_additions ? $blog_name : '';
+			}
+		} else {
+			// We're on our SEO settings pages.
+			if ( $this->has_page_on_front() ) {
+				// Home is a page.
+				$inpost_title = $this->get_custom_field( '_genesis_title', get_option( 'page_on_front' ) );
+			} else {
+				// Home is a blog.
+				$inpost_title = '';
+			}
+			$title = $inpost_title ? $inpost_title : $blog_name;
+			$additions = $home_tagline ? $home_tagline : $description;
+		}
+
+		$nonce = wp_create_nonce( 'autodescription-ajax-nonce' );
+
+		return $strings = array(
+			'saveAlert' => esc_html__( 'The changes you made will be lost if you navigate away from this page.', 'autodescription' ),
+			'confirmReset' => esc_html__( 'Are you sure you want to reset all SEO settings to their defaults?', 'autodescription' ),
+			'siteTitle' => esc_html( $title ),
+			'titleAdditions' => esc_html( $additions ),
+			'blogDescription' => esc_html( $description ),
+			'titleTagline' => $tagline,
+			'titleSeparator' => esc_html( $title_separator ),
+			'titleLocation' => esc_html( $title_location ),
+			'descriptionSeparator' => esc_html( $description_separator ),
+			'isRTL' => $isrtl,
+			'isHome' => $ishome,
+			'counterType' => absint( $counter_type ),
+			'good' => esc_html( $good ),
+			'okay' => esc_html( $okay ),
+			'bad' => esc_html( $bad ),
+			'unknown' => esc_html( $unknown ),
+			'nonce' => $nonce,
+		);
+	}
+
+	/**
+	 * CSS for the AutoDescription Bar
+	 *
+	 * @since 2.1.9
+	 *
+	 * @param $hook the current page
+	 *
+	 * @todo get_network_option
+	 * @priority low 3.0.0
+	 */
+	public function enqueue_admin_css( $hook ) {
+
+		/**
+		 * Put hook and js name in class vars.
+		 * @since 2.5.2.2
+		 */
+		$this->page_base_file = $this->page_base_file ? $this->page_base_file : $hook;
+
+		//* Register the script.
+		$this->register_admin_css();
+
+		wp_enqueue_style( $this->css_name );
+
+	}
+
+	/**
+	 * Registers Admin CSS.
+	 *
+	 * @since 2.6.0
+	 * @staticvar bool $registered : Prevents Re-registering of the style.
+	 * @access private
+	 */
+	protected function register_admin_css() {
+
+		static $registered = null;
+
+		if ( isset( $registered ) )
+			return;
+
+		$rtl = is_rtl() ? '-rtl' : '';
+		$suffix = $this->script_debug ? '' : '.min';
+		$registered = true;
+
+		wp_register_style( $this->css_name, THE_SEO_FRAMEWORK_DIR_URL . "lib/css/autodescription{$rtl}{$suffix}.css", array(), THE_SEO_FRAMEWORK_VERSION, 'all' );
+
+	}
+
+	/**
+	 * Redirect the user to an admin page, and add query args to the URL string
+	 * for alerts, etc.
+	 *
+	 * @since 2.2.2
+	 *
+	 * @param string $page			Menu slug.
+	 * @param array  $query_args 	Optional. Associative array of query string arguments
+	 * 								(key => value). Default is an empty array.
+	 * @return null Return early if first argument is false.
+	 */
+	public function admin_redirect( $page, array $query_args = array() ) {
+
+		if ( empty( $page ) )
+			return;
+
+		$url = html_entity_decode( menu_page_url( $page, 0 ) );
+
+		foreach ( $query_args as $key => $value ) {
+			if ( empty( $key ) || empty( $value ) )
+				unset( $query_args[ $key ] );
+		}
+
+		$url = add_query_arg( $query_args, $url );
+
+		wp_safe_redirect( esc_url_raw( $url ), 302 );
+		exit;
+	}
+
+	/**
+	 * Handles counter option update on AJAX request.
+	 *
+	 * @since 2.6.0
+	 * @access private
+	 */
+	public function wp_ajax_update_counter_type() {
+
+		if ( $this->is_admin() && defined( 'DOING_AJAX' ) && DOING_AJAX ) {
+
+			//* If current user isn't allowed to edit posts, don't do anything and kill PHP.
+			if ( ! current_user_can( 'publish_posts' ) )
+				exit;
+
+			check_ajax_referer( 'autodescription-ajax-nonce', 'nonce' );
+
+			/**
+			 * Count up, reset to 0 if needed. We have 4 options: 0, 1, 2, 3
+			 * $_POST['val'] already contains updated number.
+			 */
+			$value = isset( $_POST['val'] ) ? intval( $_POST['val'] ) : $this->get_user_option( 0, 'counter_type', 3 ) + 1;
+			$value = absint( $value );
+
+			if ( $value > 3 )
+				$value = 0;
+
+			//* Update the option and get results of action.
+			$type = $this->update_user_option( 0, 'counter_type', $value ) ? 'success' : 'error';
+
+			$results = array(
+				'type' => $type,
+				'value' => $value,
+			);
+
+			//* Encode and echo results. Requires JSON decode within JS.
+			echo json_encode( $results );
+
+			//* Kill PHP.
+			exit;
+		}
+	}
+}
Index: inc/classes/adminpages.class.php
===================================================================
--- inc/classes/adminpages.class.php	(revision 1475679)
+++ inc/classes/adminpages.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Siteoptions
  *
@@ -37,22 +39,13 @@
 	/**
 	 * Name of the page hook when the menu is registered.
 	 *
-	 * @since 2.2.2
+	 * @since 2.7.0
 	 *
 	 * @var string Page hook
 	 */
-	public $pagehook;
+	public $seo_settings_page_hook;
 
 	/**
-	 * Name of the network page hook when the menu is registered.
-	 *
-	 * @since 2.2.2
-	 *
-	 * @var string Page hook
-	 */
-	public $network_pagehook;
-
-	/**
 	 * Load the options.
 	 *
 	 * @since 2.6.0
@@ -62,8 +55,20 @@
 	public $load_options;
 
 	/**
-	 * Constructor, load parent constructor and set up variables.
+	 * Unserializing instances of this class is forbidden.
 	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
+	 * Constructor. Loads parent constructor, does actions and sets up variables.
+	 */
 	public function __construct() {
 		parent::__construct();
 
@@ -73,19 +78,23 @@
 		*/
 		$this->load_options = (bool) apply_filters( 'the_seo_framework_load_options', true );
 
-		if ( $this->load_options ) {
+		add_action( 'init', array( $this, 'init_admin_actions' ), 0 );
+	}
+
+	/**
+	 * Initializes Admin Menu actions.
+	 *
+	 * @since 2.7.0
+	 */
+	public function init_admin_actions() {
+
+		if ( $this->load_options && $this->is_admin() ) {
+			// Enqueue i18n defaults.
 			add_action( 'admin_init', array( $this, 'enqueue_page_defaults' ), 1 );
 
-			// Add menu links and register $this->pagehook
+			// Add menu links and register $this->seo_settings_page_hook
 			add_action( 'admin_menu', array( $this, 'add_menu_link' ) );
 
-			/**
-			 * Add specific Multisite options
-			 * @TODO
-			 * @priority low 3.0.0
-			 */
-			// if ( is_multisite() ) add_action( 'network_admin_menu', array( $this, 'add_network_menu_link' ) );
-
 			//* Load the page content
 			add_action( 'admin_init', array( $this, 'settings_init' ) );
 
@@ -111,12 +120,12 @@
 		$this->page_defaults = (array) apply_filters(
 			'the_seo_framework_admin_page_defaults',
 			array(
-				'save_button_text'		=> __( 'Save Settings', 'autodescription' ),
-				'reset_button_text'		=> __( 'Reset Settings', 'autodescription' ),
-				'saved_notice_text'		=> __( 'Settings are saved.', 'autodescription' ),
-				'reset_notice_text'		=> __( 'Settings are reset.', 'autodescription' ),
-				'error_notice_text'		=> __( 'Error saving settings.', 'autodescription' ),
-				'plugin_update_text'	=> __( 'New SEO Settings have been updated.', 'autodescription' ),
+				'save_button_text'   => esc_html__( 'Save Settings', 'autodescription' ),
+				'reset_button_text'  => esc_html__( 'Reset Settings', 'autodescription' ),
+				'saved_notice_text'  => esc_html__( 'Settings are saved.', 'autodescription' ),
+				'reset_notice_text'  => esc_html__( 'Settings are reset.', 'autodescription' ),
+				'error_notice_text'  => esc_html__( 'Error saving settings.', 'autodescription' ),
+				'plugin_update_text' => esc_html__( 'New SEO Settings have been updated.', 'autodescription' ),
 			)
 		);
 
@@ -132,18 +141,18 @@
 	public function add_menu_link() {
 
 		$menu = array(
-			'pagetitle'		=> __( 'SEO Settings', 'autodescription' ),
-			'menutitle'		=> __( 'SEO', 'autodescription' ),
-			'capability'	=> $this->settings_capability(),
-			'menu_slug'		=> 'autodescription-settings',
-			'callback'		=> array( $this, 'admin' ),
-			'icon'			=> 'dashicons-search',
-			'position'		=> '90.9001',
+			'page_title' => esc_html__( 'SEO Settings', 'autodescription' ),
+			'menu_title' => esc_html__( 'SEO', 'autodescription' ),
+			'capability' => $this->settings_capability(),
+			'menu_slug'  => $this->seo_settings_page_slug,
+			'callback'   => array( $this, 'admin' ),
+			'icon'       => 'dashicons-search',
+			'position'   => '90.9001',
 		);
 
-		$this->pagehook = add_menu_page(
-			$menu['pagetitle'],
-			$menu['menutitle'],
+		$this->seo_settings_page_hook = add_menu_page(
+			$menu['page_title'],
+			$menu['menu_title'],
 			$menu['capability'],
 			$menu['menu_slug'],
 			$menu['callback'],
@@ -151,55 +160,24 @@
 			$menu['position']
 		);
 
-		//* Enqueue styles
-		add_action( 'admin_print_styles-' . $this->pagehook, array( $this, 'enqueue_admin_css' ), 11 );
-
-		//* Enqueue scripts
-		add_action( 'admin_print_scripts-' . $this->pagehook, array( $this, 'enqueue_admin_javascript' ), 11 );
-
-	}
-
-	/**
-	 * Adds menu links under "settings" in the wp-admin dashboard
-	 *
-	 * Applies `autodescription_settings_capability` filters.
-	 * This filter changes the minimum role for viewing and editing the plugin's settings.
-	 *
-	 * @since 2.2.2
-	 * @return void
-	 *
-	 * @TODO Everything.
-	 * @priority low 3.0.0
-	 */
-	public function add_network_menu_link() {
-
-		$menu = array(
-			'pagetitle'		=> __( 'Network SEO Settings', 'autodescription' ),
-			'menutitle'		=> __( 'Network SEO', 'autodescription' ),
-
-			'capability'	=> 'manage_network',
-
-			'menu_slug'		=> 'autodescription-network-settings',
-			'callback'		=> array( $this, 'network_admin' ),
-			'icon'			=> 'dashicons-search',
-			'position'		=> '99.9001',
-		);
-
-		$this->network_pagehook = add_menu_page(
-			$menu['pagetitle'],
-			$menu['menutitle'],
+		/**
+		 * Simply copy the previous, but rename the submenu entry.
+		 * The function add_submenu_page() takes care of the duplications.
+		 */
+		add_submenu_page(
+			$menu['menu_slug'],
+			$menu['page_title'],
+			$menu['page_title'],
 			$menu['capability'],
 			$menu['menu_slug'],
-			$menu['callback'],
-			$menu['icon'],
-			$menu['position']
+			$menu['callback']
 		);
 
-		// Enqueue styles
-		add_action( 'admin_print_styles-' . $this->network_pagehook, array( $this, 'enqueue_admin_css' ), 11 );
+		//* Enqueue styles
+		add_action( 'admin_print_styles-' . $this->seo_settings_page_hook, array( $this, 'enqueue_admin_css' ), 11 );
 
-		// Enqueue scripts
-		add_action( 'admin_print_scripts-' . $this->network_pagehook, array( $this, 'enqueue_admin_javascript' ), 11 );
+		//* Enqueue scripts
+		add_action( 'admin_print_scripts-' . $this->seo_settings_page_hook, array( $this, 'enqueue_admin_javascript' ), 11 );
 
 	}
 
@@ -210,8 +188,8 @@
 	 */
 	public function settings_init() {
 
-		add_action( $this->pagehook . '_settings_page_boxes', array( $this, 'do_metaboxes' ) );
-		add_action( 'load-' . $this->pagehook, array( $this, 'metaboxes' ) );
+		add_action( $this->seo_settings_page_hook . '_settings_page_boxes', array( $this, 'do_metaboxes' ) );
+		add_action( 'load-' . $this->seo_settings_page_hook, array( $this, 'metaboxes' ) );
 
 	}
 
@@ -229,19 +207,19 @@
 		<div class="metabox-holder columns-2">
 			<div class="postbox-container-1">
 				<?php
-				do_action( 'the_seo_framework_before_siteadmin_metaboxes', $this->pagehook );
+				do_action( 'the_seo_framework_before_siteadmin_metaboxes', $this->seo_settings_page_hook );
 
-				do_meta_boxes( $this->pagehook, 'main', null );
+				do_meta_boxes( $this->seo_settings_page_hook, 'main', null );
 
-				if ( isset( $wp_meta_boxes[$this->pagehook]['main_extra'] ) )
-					do_meta_boxes( $this->pagehook, 'main_extra', null );
+				if ( isset( $wp_meta_boxes[ $this->seo_settings_page_hook ]['main_extra'] ) )
+					do_meta_boxes( $this->seo_settings_page_hook, 'main_extra', null );
 
-				do_action( 'the_seo_framework_after_siteadmin_metaboxes', $this->pagehook );
+				do_action( 'the_seo_framework_after_siteadmin_metaboxes', $this->seo_settings_page_hook );
 				?>
 			</div>
 			<div class="postbox-container-2">
 				<?php
-				do_action( 'the_seo_framework_before_siteadmin_metaboxes_side', $this->pagehook );
+				do_action( 'the_seo_framework_before_siteadmin_metaboxes_side', $this->seo_settings_page_hook );
 
 				/**
 				 * @TODO fill this in
@@ -248,7 +226,7 @@
 				 * @priority low 2.9.0
 				 */
 
-				do_action( 'the_seo_framework_after_siteadmin_metaboxes_side', $this->pagehook );
+				do_action( 'the_seo_framework_after_siteadmin_metaboxes_side', $this->seo_settings_page_hook );
 				?>
 			</div>
 		</div>
@@ -279,25 +257,26 @@
 		 *
 		 * @since 2.2.4
 		 */
-		$title 			= (bool) apply_filters( 'the_seo_framework_title_metabox', true );
-		$description 	= (bool) apply_filters( 'the_seo_framework_description_metabox', true );
-		$robots 		= (bool) apply_filters( 'the_seo_framework_robots_metabox', true );
-		$home 			= (bool) apply_filters( 'the_seo_framework_home_metabox', true );
-		$social 		= (bool) apply_filters( 'the_seo_framework_social_metabox', true );
-		$knowledge 		= (bool) apply_filters( 'the_seo_framework_knowledge_metabox', true );
-		$schema 		= (bool) apply_filters( 'the_seo_framework_schema_metabox', true );
-		$webmaster 		= (bool) apply_filters( 'the_seo_framework_webmaster_metabox', true );
-		$sitemap 		= (bool) apply_filters( 'the_seo_framework_sitemap_metabox', true );
-		$feed 			= (bool) apply_filters( 'the_seo_framework_feed_metabox', true );
+		$title       = (bool) apply_filters( 'the_seo_framework_title_metabox', true );
+		$description = (bool) apply_filters( 'the_seo_framework_description_metabox', true );
+		$robots      = (bool) apply_filters( 'the_seo_framework_robots_metabox', true );
+		$home        = (bool) apply_filters( 'the_seo_framework_home_metabox', true );
+		$social      = (bool) apply_filters( 'the_seo_framework_social_metabox', true );
+		$knowledge   = (bool) apply_filters( 'the_seo_framework_knowledge_metabox', true );
+		$schema      = (bool) apply_filters( 'the_seo_framework_schema_metabox', true );
+		$webmaster   = (bool) apply_filters( 'the_seo_framework_webmaster_metabox', true );
+		$sitemap     = (bool) apply_filters( 'the_seo_framework_sitemap_metabox', true );
+		$feed        = (bool) apply_filters( 'the_seo_framework_feed_metabox', true );
 
 		//* Title Meta Box
 		if ( $title )
 			add_meta_box(
 				'autodescription-title-settings',
-				__( 'Title Settings', 'autodescription' ),
+				esc_html__( 'Title Settings', 'autodescription' ),
 				array( $this, 'title_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Description Meta Box
@@ -304,10 +283,11 @@
 		if ( $description )
 			add_meta_box(
 				'autodescription-description-settings',
-				__( 'Description Meta Settings', 'autodescription' ),
+				esc_html__( 'Description Meta Settings', 'autodescription' ),
 				array( $this, 'description_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Home Page Meta Box
@@ -314,10 +294,11 @@
 		if ( $home )
 			add_meta_box(
 				'autodescription-homepage-settings',
-				__( 'Home Page Settings', 'autodescription' ),
+				esc_html__( 'Home Page Settings', 'autodescription' ),
 				array( $this, 'homepage_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Social Meta Box
@@ -324,10 +305,11 @@
 		if ( $social )
 			add_meta_box(
 				'autodescription-social-settings',
-				__( 'Social Meta Settings', 'autodescription' ),
+				esc_html__( 'Social Meta Settings', 'autodescription' ),
 				array( $this, 'social_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Knowledge Graph Meta Box
@@ -334,10 +316,11 @@
 		if ( $knowledge )
 			add_meta_box(
 				'autodescription-knowledgegraph-settings',
-				__( 'Knowledge Graph Settings', 'autodescription' ),
+				esc_html__( 'Knowledge Graph Settings', 'autodescription' ),
 				array( $this, 'knowledge_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Title Meta Box
@@ -344,10 +327,11 @@
 		if ( $schema )
 			add_meta_box(
 				'autodescription-schema-settings',
-				__( 'Schema Settings', 'autodescription' ),
+				esc_html__( 'Schema Settings', 'autodescription' ),
 				array( $this, 'schema_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Robots Meta Box
@@ -354,10 +338,11 @@
 		if ( $robots )
 			add_meta_box(
 				'autodescription-robots-settings',
-				__( 'Robots Meta Settings', 'autodescription' ),
+				esc_html__( 'Robots Meta Settings', 'autodescription' ),
 				array( $this, 'robots_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Webmaster Meta Box
@@ -364,10 +349,11 @@
 		if ( $webmaster )
 			add_meta_box(
 				'autodescription-webmaster-settings',
-				__( 'Webmaster Meta Settings', 'autodescription' ),
+				esc_html__( 'Webmaster Meta Settings', 'autodescription' ),
 				array( $this, 'webmaster_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Sitemaps Meta Box
@@ -374,10 +360,11 @@
 		if ( $sitemap )
 			add_meta_box(
 				'autodescription-sitemap-settings',
-				__( 'Sitemap Settings', 'autodescription' ),
+				esc_html__( 'Sitemap Settings', 'autodescription' ),
 				array( $this, 'sitemaps_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 		//* Feed Meta Box
@@ -384,10 +371,11 @@
 		if ( $feed )
 			add_meta_box(
 				'autodescription-feed-settings',
-				__( 'Feed Settings', 'autodescription' ),
+				esc_html__( 'Feed Settings', 'autodescription' ),
 				array( $this, 'feed_metabox' ),
-				$this->pagehook,
-				'main'
+				$this->seo_settings_page_hook,
+				'main',
+				array()
 			);
 
 	}
@@ -401,7 +389,7 @@
 	public function admin() {
 
 		?>
-		<div class="wrap autodescription-metaboxes">
+		<div class="wrap tsf-metaboxes">
 		<form method="post" action="options.php">
 
 			<?php wp_nonce_field( 'closedpostboxes', 'closedpostboxesnonce', false ); ?>
@@ -408,9 +396,9 @@
 			<?php wp_nonce_field( 'meta-box-order', 'meta-box-order-nonce', false ); ?>
 			<?php settings_fields( $this->settings_field ); ?>
 
-			<div class="top-wrap">
+			<div class="tsf-top-wrap">
 				<h1><?php echo esc_html( get_admin_page_title() ); ?></h1>
-				<p class="top-buttons">
+				<p class="tsf-top-buttons">
 					<?php
 					submit_button( $this->page_defaults['save_button_text'], 'primary', 'submit', false, array( 'id' => '' ) );
 					submit_button( $this->page_defaults['reset_button_text'], 'secondary autodescription-js-confirm-reset', $this->get_field_name( 'reset' ), false, array( 'id' => '' ) );
@@ -418,9 +406,9 @@
 				</p>
 			</div>
 
-			<?php do_action( "{$this->pagehook}_settings_page_boxes", $this->pagehook ); ?>
+			<?php do_action( "{$this->seo_settings_page_hook}_settings_page_boxes", $this->seo_settings_page_hook ); ?>
 
-			<div class="bottom-buttons">
+			<div class="tsf-bottom-buttons">
 				<?php
 				submit_button( $this->page_defaults['save_button_text'], 'primary', 'submit', false, array( 'id' => '' ) );
 				submit_button( $this->page_defaults['reset_button_text'], 'secondary autodescription-js-confirm-reset', $this->get_field_name( 'reset' ), false, array( 'id' => '' ) );
@@ -435,7 +423,7 @@
 				// close postboxes that should be closed
 				$('.if-js-closed').removeClass('if-js-closed').addClass('closed');
 				// postboxes setup
-				postboxes.add_postbox_toggles('<?php echo $this->pagehook; ?>');
+				postboxes.add_postbox_toggles('<?php echo esc_js( $this->seo_settings_page_hook ); ?>');
 			});
 			//]]>
 		</script>
@@ -444,55 +432,6 @@
 	}
 
 	/**
-	 * Use this as the settings admin callback to create an admin page with sortable metaboxes.
-	 * Create a 'settings_boxes' method to add metaboxes.
-	 *
-	 * @since 2.2.2
-	 */
-	public function network_admin() {
-
-		?>
-		<div class="wrap autodescription-metaboxes">
-		<form method="post" action="options.php">
-
-			<?php wp_nonce_field( 'closedpostboxes', 'closedpostboxesnonce', false ); ?>
-			<?php wp_nonce_field( 'meta-box-order', 'meta-box-order-nonce', false ); ?>
-			<?php settings_fields( $this->network_settings_field ); ?>
-
-			<h1><?php echo esc_html( get_admin_page_title() ); ?></h1>
-			<p class="top-buttons">
-				<?php
-				submit_button( $this->page_defaults['save_button_text'], 'primary', 'submit', false, array( 'id' => '' ) );
-				submit_button( $this->page_defaults['reset_button_text'], 'secondary autodescription-js-confirm-reset', $this->get_field_name( 'reset' ), false, array( 'id' => '' ) );
-				?>
-			</p>
-
-			<?php do_action( "{$this->network_pagehook}_settings_page_boxes", $this->network_pagehook ); ?>
-
-			<div class="bottom-buttons">
-				<?php
-				submit_button( $this->page_defaults['save_button_text'], 'primary', 'submit', false, array( 'id' => '' ) );
-				submit_button( $this->page_defaults['reset_button_text'], 'secondary autodescription-js-confirm-reset', $this->get_field_name( 'reset' ), false, array( 'id' => '' ) );
-				?>
-			</div>
-		</form>
-		</div>
-		<?php // Add postbox listeners ?>
-		<script type="text/javascript">
-			//<![CDATA[
-			jQuery(document).ready( function ($) {
-				// close postboxes that should be closed
-				$('.if-js-closed').removeClass('if-js-closed').addClass('closed');
-				// postboxes setup
-				postboxes.add_postbox_toggles('<?php echo $this->network_pagehook; ?>');
-			});
-			//]]>
-		</script>
-		<?php
-
-	}
-
-	/**
 	 * Display notices on the save or reset of settings.
 	 *
 	 * @since 2.2.2
@@ -501,17 +440,17 @@
 	 */
 	public function notices() {
 
-		if ( false === $this->is_seo_settings_page() )
+		if ( false === $this->is_seo_settings_page( true ) )
 			return;
 
 		if ( isset( $_REQUEST['settings-updated'] ) && 'true' === $_REQUEST['settings-updated'] )
-			echo $this->generate_dismissible_notice( $this->page_defaults['saved_notice_text'], 'updated' );
+			$this->do_dismissible_notice( $this->page_defaults['saved_notice_text'], 'updated' );
 		elseif ( isset( $_REQUEST['reset'] ) && 'true' === $_REQUEST['reset'] )
-			echo $this->generate_dismissible_notice( $this->page_defaults['reset_notice_text'], 'warning' );
+			$this->do_dismissible_notice( $this->page_defaults['reset_notice_text'], 'warning' );
 		elseif ( isset( $_REQUEST['error'] ) && 'true' === $_REQUEST['error'] )
-			echo $this->generate_dismissible_notice( $this->page_defaults['error_notice_text'], 'error' );
+			$this->do_dismissible_notice( $this->page_defaults['error_notice_text'], 'error' );
 		elseif ( isset( $_REQUEST['seo-updated'] ) && 'true' === $_REQUEST['seo-updated'] )
-			echo $this->generate_dismissible_notice( $this->page_defaults['plugin_update_text'], 'updated' );
+			$this->do_dismissible_notice( $this->page_defaults['plugin_update_text'], 'updated' );
 
 	}
 
@@ -534,13 +473,12 @@
 	 * Echo constructed name attributes in form fields.
 	 *
 	 * @since 2.2.2
-	 *
 	 * @uses $this->get_field_name() Construct name attributes for use in form fields.
 	 *
 	 * @param string $name Field name base
 	 */
 	public function field_name( $name ) {
-		echo $this->get_field_name( $name );
+		echo esc_attr( $this->get_field_name( $name ) );
 	}
 
 	/**
@@ -559,7 +497,6 @@
 	 * Echo constructed id attributes in form fields.
 	 *
 	 * @since 2.2.2
-	 *
 	 * @uses $this->get_field_id() Constructs id attributes for use in form fields.
 	 *
 	 * @param string $id Field id base
@@ -569,7 +506,7 @@
 	public function field_id( $id, $echo = true ) {
 
 		if ( $echo ) {
-			echo $this->get_field_id( $id );
+			echo esc_attr( $this->get_field_id( $id ) );
 		} else {
 			return $this->get_field_id( $id );
 		}
@@ -578,7 +515,6 @@
 	/**
 	 * Helper function that returns a setting value from this form's settings
 	 * field for use in form fields.
-	 *
 	 * Fetches blog option.
 	 *
 	 * @since 2.2.2
@@ -591,31 +527,15 @@
 	}
 
 	/**
-	 * Helper function that returns a setting value from this form's settings
-	 * field for use in form fields.
+	 * Echo a setting value from this form's settings field for use in form fields.
 	 *
-	 * Fetches network option.
-	 *
 	 * @since 2.2.2
-	 *
-	 * @param string $key Field key
-	 * @return string Field value
-	 */
-	public function get_field_value_network( $key ) {
-		return $this->get_site_option( $key, $this->settings_field );
-	}
-
-	/**
-	 * Echo a setting value from this form's settings field for use in form fields.
-	 *
 	 * @uses $this->get_field_value() Constructs value attributes for use in form fields.
 	 *
-	 * @since 2.2.2
-	 *
 	 * @param string $key Field key
 	 */
 	public function field_value( $key ) {
-		echo $this->get_field_value( $key );
+		echo esc_attr( $this->get_field_value( $key ) );
 	}
 
 	/**
@@ -623,9 +543,8 @@
 	 *
 	 * @since 2.6.0
 	 *
-	 * @param string $input The input to wrap.
+	 * @param string $input The input to wrap. Should already be escaped.
 	 * @param bool $echo Whether to echo or return.
-	 *
 	 * @return Wrapped $input.
 	 */
 	public function wrap_fields( $input = '', $echo = false ) {
@@ -633,10 +552,11 @@
 		if ( is_array( $input ) )
 			$input = implode( "\r\n", $input );
 
-		if ( $echo )
-			echo '<div class="theseoframework-fields">' . "\r\n" . $input . "\r\n" . '</div>';
-		else
-			return '<div class="theseoframework-fields">' . "\r\n" . $input . "\r\n" . '</div>';
+		if ( $echo ) {
+			echo '<div class="tsf-fields">' . "\r\n" . $input . "\r\n" . '</div>';
+		} else {
+			return '<div class="tsf-fields">' . "\r\n" . $input . "\r\n" . '</div>';
+		}
 	}
 
 	/**
@@ -643,18 +563,22 @@
 	 * Return a chechbox wrapper.
 	 *
 	 * @since 2.6.0
+	 * @since 2.7.0 Added escape parameter. Defaults to true.
 	 *
 	 * @param string $field_id The option ID. Must be within the Autodescription settings.
-	 * @param string $label The checkbox description label
+	 * @param string $label The checkbox description label.
 	 * @param string $description Addition description to place beneath the checkbox.
-	 *
+	 * @param bool $escape Whether to escape the label and description.
 	 * @return HTML checkbox output.
 	 */
-	public function make_checkbox( $field_id = '', $label = '', $description = '' ) {
+	public function make_checkbox( $field_id = '', $label = '', $description = '', $escape = true ) {
 
-		$description = $description ? '<p class="description theseoframework-option-spacer">' . $description . '</p>' : '';
+		$description = $escape ? esc_html( $description ) : $description;
+		$label = $escape ? esc_html( $label ) : $label;
 
-		$output = '<span class="toblock">'
+		$description = $description ? '<p class="description tsf-option-spacer">' . $description . '</p>' : '';
+
+		$output = '<span class="tsf-toblock">'
 					. '<label for="' . $this->get_field_id( $field_id ) . '">'
 						. '<input '
 							. 'type="checkbox" '
@@ -681,20 +605,22 @@
 	 * @param string $description The descriptive on-hover title.
 	 * @param string $link The non-escaped link.
 	 * @param bool $echo Whether to echo or return.
-	 *
-	 * @return HTML checkbox output.
+	 * @return HTML checkbox output if $echo is false.
 	 */
 	public function make_info( $description = '', $link = '', $echo = true ) {
 
-		if ( $link )
+		if ( $link ) {
 			$output = '<a href="' . esc_url( $link ) . '" target="_blank" title="' . esc_attr( $description ) . '">[?]</a>';
-		else
+		} else {
 			$output = '<span title="' . esc_attr( $description ) . '">[?]</span>';
+		}
 
-		if ( $echo )
+		if ( $echo ) {
+			//* Already escaped.
 			echo $output;
-		else
+		} else {
 			return $output;
+		}
 	}
 
 	/**
@@ -704,11 +630,11 @@
 	 */
 	public function load_assets() {
 		//* Hook scripts method
-		add_action( "load-{$this->pagehook}", array( $this, 'metabox_scripts' ) );
+		add_action( "load-{$this->seo_settings_page_hook}", array( $this, 'metabox_scripts' ) );
 	}
 
 	/**
-	 * Include the necessary sortable metabox scripts.
+	 * Includes the necessary sortable metabox scripts.
 	 *
 	 * @since 2.2.2
 	 */
@@ -738,13 +664,14 @@
 		$default = $this->get_default_settings( $key, $setting );
 
 		if ( 1 === $default )
-			$class = 'seoframework-default-selected';
+			$class = 'tsf-default-selected';
 
 		if ( $echo ) {
-			if ( $wrap )
-				printf( 'class="%s"', $class );
-			else
-				echo $class;
+			if ( $wrap ) {
+				printf( 'class="%s"', esc_attr( $class ) );
+			} else {
+				echo esc_attr( $class );
+			}
 		} else {
 			if ( $wrap )
 				return sprintf( 'class="%s"', $class );
@@ -756,16 +683,12 @@
 	/**
 	 * Returns the HTML class wrap for warning Checkbox options.
 	 *
-	 * This function does nothing special. But is merely a simple wrapper.
-	 * Just like code_wrap.
+	 * @since 2.3.4
 	 *
 	 * @param string $key required The option name which returns boolean.
 	 * @param string $setting optional The settings field
 	 * @param bool $wrap optional output class="" or just the class name.
 	 * @param bool $echo optional echo or return the output.
-	 *
-	 * @since 2.3.4
-	 *
 	 * @return string Empty on echo or The class with an optional wrapper.
 	 */
 	public function is_warning_checked( $key, $setting = '', $wrap = true, $echo = true ) {
@@ -775,13 +698,13 @@
 		$warned = $this->get_warned_settings( $key, $setting );
 
 		if ( 1 === $warned )
-			$class = 'seoframework-warning-selected';
+			$class = 'tsf-warning-selected';
 
 		if ( $echo ) {
 			if ( $wrap ) {
-				printf( 'class="%s"', $class );
+				printf( 'class="%s"', esc_attr( $class ) );
 			} else {
-				echo $class;
+				echo esc_attr( $class );
 			}
 		} else {
 			if ( $wrap )
@@ -826,24 +749,23 @@
 
 		if ( '' !== $default && '' !== $warned ) {
 			$class = $default . ' ' . $warned;
-		} else if ( '' !== $default ) {
+		} elseif ( '' !== $default ) {
 			$class = $default;
-		} else if ( '' !== $warned ) {
+		} elseif ( '' !== $warned ) {
 			$class = $warned;
 		}
 
 		if ( $echo ) {
 			if ( $wrap ) {
-				printf( 'class="%s"', $class );
+				printf( 'class="%s"', esc_attr( $class ) );
 			} else {
-				echo $class;
+				echo esc_attr( $class );
 			}
 		} else {
-			if ( $wrap ) {
+			if ( $wrap )
 				return sprintf( 'class="%s"', $class );
-			} else {
-				return $class;
-			}
+
+			return $class;
 		}
 	}
 
@@ -850,17 +772,16 @@
 	/**
 	 * Returns the HTML class wrap for default radio options.
 	 *
+	 * @since 2.2.5
+	 *
+	 * @TODO use this
+	 * @priority low 2.8.0+
+	 *
 	 * @param string $key required The option name which returns boolean.
 	 * @param string $value required The option value which returns boolean.
 	 * @param string $setting optional The settings field
 	 * @param bool $wrap optional output class="" or just the class name.
 	 * @param bool $echo optional echo or return the output.
-	 *
-	 * @since 2.2.5
-	 *
-	 * @TODO use this
-	 * @priority low 2.8.0+
-	 *
 	 * @return string|null the default selected class.
 	 */
 	public function is_default_radio( $key, $value, $setting = '', $wrap = true, $echo = true ) {
@@ -870,13 +791,13 @@
 		$default = $this->get_default_settings( $key, $setting );
 
 		if ( $value === $default )
-			$class = 'seoframework-default-selected';
+			$class = 'tsf-default-selected';
 
 		if ( $echo ) {
 			if ( $wrap ) {
-				echo sprintf( 'class="%s"', $class );
+				echo sprintf( 'class="%s"', esc_attr( $class ) );
 			} else {
-				echo $class;
+				echo esc_attr( $class );
 			}
 		} else {
 			if ( $wrap )
@@ -885,5 +806,4 @@
 			return $class;
 		}
 	}
-
 }
Index: inc/classes/compat.class.php
===================================================================
--- inc/classes/compat.class.php	(revision 1475679)
+++ inc/classes/compat.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Compat
  *
@@ -26,6 +28,18 @@
 class AutoDescription_Compat extends AutoDescription_Debug {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -41,6 +55,9 @@
 		//* Jetpack compat.
 		add_action( 'init', array( $this, 'jetpack_compat' ) );
 
+		//* BuddyPress compat.
+		add_action( 'init', array( $this, 'buddypress_compat' ) );
+
 	}
 
 	/**
@@ -47,6 +64,7 @@
 	 * Adds Genesis SEO compatibility.
 	 *
 	 * @since 2.6.0
+	 * @access private
 	 */
 	public function genesis_compat() {
 
@@ -64,6 +82,7 @@
 	 * Removes the Genesis SEO meta boxes on the SEO Settings page
 	 *
 	 * @since 2.2.4
+	 * @access private
 	 *
 	 * @param array $plugins, overwritten as this filter will fire the
 	 * detection, regardless of other SEO plugins.
@@ -85,7 +104,12 @@
 	/**
 	 * Adds compatibility with various JetPack modules.
 	 *
+	 * Recently, JetPack made sure this filter doesn't run when The SEO Framework
+	 * is active as they've added their own compatibility check towards this plugin.
+	 * Let's wait until everyone has updated before removing this.
+	 *
 	 * @since 2.6.0
+	 * @access private
 	 */
 	public function jetpack_compat() {
 
@@ -93,8 +117,21 @@
 			//* Disable Jetpack Publicize's Open Graph.
 			add_filter( 'jetpack_enable_open_graph', '__return_false', 99 );
 		}
-
 	}
 
+	/**
+	 * Removes canonical URL from BuddyPress. Regardless of The SEO Framework settings.
+	 *
+	 * @since 2.7.0
+	 * @access private
+	 */
+	public function buddypress_compat() {
 
+		//* Nothing to do on admin.
+		if ( $this->is_admin() )
+			return;
+
+		remove_action( 'wp_head', '_bp_maybe_remove_rel_canonical', 8 );
+
+	}
 }
Index: inc/classes/core.class.php
===================================================================
--- inc/classes/core.class.php	(revision 1475679)
+++ inc/classes/core.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Core
  *
@@ -26,6 +28,47 @@
 class AutoDescription_Core {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Cloning of this class is forbidden.
+	 */
+	private function __clone() { }
+
+	/**
+	 * __get() deprecation handler.
+	 * @since 2.7.0
+	 * @return mixed $var The object variable.
+	 */
+	public function __get( $name ) {
+
+		switch ( $name ) :
+			case 'pagehook' :
+				$this->_deprecated_function( 'the_seo_framework()->' . esc_html( $name ), '2.7.0', 'the_seo_framework()->seo_settings_page_hook' );
+				return $this->seo_settings_page_hook;
+				break;
+
+			default:
+				break;
+		endswitch;
+
+		//* Invoke default error.
+		return $this->$name;
+	}
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 * @return void
+	 */
+	public function __call( $name, $arguments ) {
+		$_this = the_seo_framework();
+		$_this->_inaccessible_p_or_m( 'the_seo_framework()->' . esc_html( $name ) . '()' );
+		return;
+	}
+
+	/**
 	 * Constructor. Loads actions and filters.
 	 * Latest Class. Doesn't have parent.
 	 */
@@ -42,6 +85,38 @@
 	}
 
 	/**
+	 * Fetches files based on input to reduce memory overhead.
+	 * Passes on input vars.
+	 *
+	 * @param string $view The file name.
+	 * @param array $args The arguments to be supplied within the file name.
+	 * 		Each array key is converted to a variable with its value attached.
+	 * @param string $instance The instance suffix to call back upon.
+	 *
+	 * @credits Akismet For some code.
+	 */
+	protected function get_view( $view, array $args = array(), $instance = 'main' ) {
+
+		foreach ( $args as $key => $val )
+			$$key = $val;
+
+		$file = THE_SEO_FRAMEWORK_DIR_PATH_VIEWS . $view . '.php';
+
+		include( $file );
+	}
+
+	/**
+	 * Fetches view instance for switch.
+	 *
+	 * @param string $base The instance basename (namespace).
+	 * @param string $instance The instance suffix to call back upon.
+	 * @return string The file instance case.
+	 */
+	protected function get_view_instance( $base, $instance = 'main' ) {
+		return $base . '_' . str_replace( '-', '_', $instance );
+	}
+
+	/**
 	 * Proportionate dimensions based on Width and Height.
 	 * AKA Aspect Ratio.
 	 *
@@ -63,7 +138,7 @@
 	}
 
 	/**
-	 * Adds post type support
+	 * Adds post type support for The SEO Framework.
 	 *
 	 * Applies filters the_seo_framework_supported_post_types : The supported post types.
 	 * @since 2.3.1
@@ -72,16 +147,14 @@
 	 */
 	public function post_type_support() {
 
-		/**
-		 * Added product post type.
-		 *
-		 * @since 2.3.1
-		 */
 		$defaults = array(
-			'post', 'page',
+			'post',
+			'page',
 			'product',
-			'forum', 'topic',
-			'jetpack-testimonial', 'jetpack-portfolio',
+			'forum',
+			'topic',
+			'jetpack-testimonial',
+			'jetpack-portfolio',
 		);
 
 		$post_types = (array) apply_filters( 'the_seo_framework_supported_post_types', $defaults );
@@ -102,14 +175,14 @@
 	 */
 	public function plugin_action_links( $links = array() ) {
 
-		$framework_links = array();
+		$tsf_links = array();
 
 		if ( $this->load_options )
-			$framework_links['settings'] = '<a href="' . esc_url( admin_url( 'admin.php?page=' . $this->page_id ) ) . '">' . __( 'SEO Settings', 'autodescription' ) . '</a>';
+			$tsf_links['settings'] = '<a href="' . esc_url( admin_url( 'admin.php?page=' . $this->seo_settings_page_slug ) ) . '">' . esc_html__( 'SEO Settings', 'autodescription' ) . '</a>';
 
-		$framework_links['home'] = '<a href="'. esc_url( 'https://theseoframework.com/' ) . '" target="_blank">' . _x( 'Plugin Home', 'As in: The Plugin Home Page', 'autodescription' ) . '</a>';
+		$tsf_links['home'] = '<a href="' . esc_url( 'https://theseoframework.com/' ) . '" target="_blank">' . esc_html_x( 'Plugin Home', 'As in: The Plugin Home Page', 'autodescription' ) . '</a>';
 
-		return array_merge( $framework_links, $links );
+		return array_merge( $tsf_links, $links );
 	}
 
 	/**
@@ -130,23 +203,35 @@
 	}
 
 	/**
-	 * Generate dismissible notice.
+	 * Generates dismissible notice.
+	 * Also loads scripts and styles if out of The SEO Framework's context.
 	 *
-	 * @param $message The notice message.
-	 * @param $type The notice type : 'updated', 'error', 'warning'
+	 * @since 2.6.0
 	 *
-	 * @since 2.6.0
+	 * @param string $message The notice message. Expected to be escaped if $escape is false.
+	 * @param string $type The notice type : 'updated', 'error', 'warning'. Expected to be escaped.
+	 * @param bool $a11y Whether to add an accessibility icon.
+	 * @param bool $escape Whether to escape the whole output.
+	 * @return string The dismissible error notice.
 	 */
-	public function generate_dismissible_notice( $message = '', $type = 'updated' ) {
+	public function generate_dismissible_notice( $message = '', $type = 'updated', $a11y = true, $escape = true ) {
 
 		if ( empty( $message ) )
 			return '';
 
+		if ( $escape )
+			$message = esc_html( $message );
+
+		//* Make sure the scripts are loaded.
+		$this->init_admin_scripts( true );
+
 		if ( 'warning' === $type )
 			$type = 'notice-warning';
 
-		$notice = '<div class="notice ' . $type . ' seo-notice"><p>';
-		$notice .= '<a class="hide-if-no-js autodescription-dismiss" title="' . __( 'Dismiss', 'AutoDescription' ) . '"></a>';
+		$a11y = $a11y ? 'tsf-show-icon' : '';
+
+		$notice = '<div class="notice ' . esc_attr( $type ) . ' tsf-notice ' . $a11y . '"><p>';
+		$notice .= '<a class="hide-if-no-js tsf-dismiss" title="' . esc_attr__( 'Dismiss', 'AutoDescription' ) . '"></a>';
 		$notice .= '<strong>' . $message . '</strong>';
 		$notice .= '</p></div>';
 
@@ -154,29 +239,39 @@
 	}
 
 	/**
+	 * Echos generated dismissible notice.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param $message The notice message. Expected to be escaped if $escape is false.
+	 * @param $type The notice type : 'updated', 'error', 'warning'. Expected to be escaped.
+	 * @param bool $a11y Whether to add an accessibility icon.
+	 * @param bool $escape Whether to escape the whole output.
+	 */
+	public function do_dismissible_notice( $message = '', $type = 'updated', $a11y = true, $escape = true ) {
+		echo $this->generate_dismissible_notice( $message, $type, $a11y, $escape );
+	}
+
+	/**
 	 * Mark up content with code tags.
-	 *
 	 * Escapes all HTML, so `<` gets changed to `&lt;` and displays correctly.
 	 *
 	 * @since 2.0.0
 	 *
 	 * @param string $content Content to be wrapped in code tags.
-	 *
 	 * @return string Content wrapped in code tags.
 	 */
 	public function code_wrap( $content ) {
-		return '<code>' . esc_html( $content ) . '</code>';
+		return $this->code_wrap_noesc( esc_html( $content ) );
 	}
 
 	/**
 	 * Mark up content with code tags.
-	 *
 	 * Escapes no HTML.
 	 *
 	 * @since 2.2.2
 	 *
 	 * @param string $content Content to be wrapped in code tags.
-	 *
 	 * @return string Content wrapped in code tags.
 	 */
 	public function code_wrap_noesc( $content ) {
@@ -184,6 +279,34 @@
 	}
 
 	/**
+	 * Mark up content in description wrap.
+	 * Escapes all HTML, so `<` gets changed to `&lt;` and displays correctly.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param string $content Content to be wrapped in the description wrap.
+	 * @param bool $block Whether to wrap the content in <p> tags.
+	 * @return string Content wrapped int he description wrap.
+	 */
+	public function description( $content, $block = true ) {
+		$this->description_noesc( esc_html( $content ), $block );
+	}
+
+	/**
+	 * Mark up content in description wrap.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param string $content Content to be wrapped in the description wrap. Expected to be escaped.
+	 * @param bool $block Whether to wrap the content in <p> tags.
+	 * @return string Content wrapped int he description wrap.
+	 */
+	public function description_noesc( $content, $block = true ) {
+		$output = '<span class="description">' . $content . '</span>';
+		echo $block ? '<p>' . $output . '</p>' : $output;
+	}
+
+	/**
 	 * Return custom field post meta data.
 	 *
 	 * Return only the first value of custom field. Return false if field is
@@ -190,47 +313,36 @@
 	 * blank or not set.
 	 *
 	 * @since 2.0.0
+	 * @staticvar array $field_cache
 	 *
 	 * @param string $field	Custom field key.
 	 * @param int $post_id	The post ID
-	 *
 	 * @return string|boolean Return value or false on failure.
-	 *
-	 * @thanks StudioPress (http://www.studiopress.com/) for some code.
-	 *
-	 * @staticvar array $field_cache
-	 * @since 2.2.5
 	 */
 	public function get_custom_field( $field, $post_id = null ) {
 
-		//* No field has been provided.
-		if ( empty( $field ) )
+		//* If field is falsy, get_post_meta() will return an array.
+		if ( ! $field )
 			return false;
 
-		//* Setup cache.
 		static $field_cache = array();
 
-		//* Check field cache.
-		if ( isset( $field_cache[$field][$post_id] ) )
-			//* Field has been cached.
-			return $field_cache[$field][$post_id];
+		if ( isset( $field_cache[ $field ][ $post_id ] ) )
+			return $field_cache[ $field ][ $post_id ];
 
-		if ( null === $post_id || empty( $post_id ) )
+		if ( empty( $post_id ) )
 			$post_id = $this->get_the_real_ID();
 
-		if ( null === $post_id || empty( $post_id ) )
-			return '';
-
 		$custom_field = get_post_meta( $post_id, $field, true );
 
-		// If custom field is empty, return null.
+		//* If custom field is empty, empty cache..
 		if ( empty( $custom_field ) )
-			$field_cache[$field][$post_id] = '';
+			$field_cache[ $field ][ $post_id ] = '';
 
 		//* Render custom field, slashes stripped, sanitized if string
-		$field_cache[$field][$post_id] = is_array( $custom_field ) ? stripslashes_deep( $custom_field ) : stripslashes( wp_kses_decode_entities( $custom_field ) );
+		$field_cache[ $field ][ $post_id ] = is_array( $custom_field ) ? stripslashes_deep( $custom_field ) : stripslashes( wp_kses_decode_entities( $custom_field ) );
 
-		return $field_cache[$field][$post_id];
+		return $field_cache[ $field ][ $post_id ];
 	}
 
 	/**
@@ -237,7 +349,6 @@
 	 * Google docs language determinator.
 	 *
 	 * @since 2.2.2
-	 *
 	 * @staticvar string $language
 	 *
 	 * @return string language code
@@ -253,8 +364,8 @@
 		if ( isset( $language ) )
 			return $language;
 
-		//* Language shorttag to be used in Google help pages,
-		$language = _x( 'en', 'e.g. en for English, nl for Dutch, fi for Finish, de for German', 'autodescription' );
+		//* Language shorttag to be used in Google help pages.
+		$language = esc_html_x( 'en', 'e.g. en for English, nl for Dutch, fi for Finish, de for German', 'autodescription' );
 
 		return $language;
 	}
@@ -262,11 +373,9 @@
 	/**
 	 * Whether to allow external redirect through the 301 redirect option.
 	 *
-	 * Applies filters the_seo_framework_allow_external_redirect : bool
+	 * @since 2.6.0
 	 * @staticvar bool $allowed
 	 *
-	 * @since 2.6.0
-	 *
 	 * @return bool Whether external redirect is allowed.
 	 */
 	public function allow_external_redirect() {
@@ -276,6 +385,10 @@
 		if ( isset( $allowed ) )
 			return $allowed;
 
+		/**
+		 * Applies filters the_seo_framework_allow_external_redirect : bool
+		 * @since 2.1.0
+		 */
 		return $allowed = (bool) apply_filters( 'the_seo_framework_allow_external_redirect', true );
 	}
 
@@ -301,13 +414,12 @@
 	/**
 	 * Object cache get wrapper.
 	 *
+	 * @since 2.4.3
+	 *
 	 * @param string $key The Object cache key.
 	 * @param string $group The Object cache group.
 	 * @param bool $force Whether to force an update of the local cache.
 	 * @param bool $found Whether the key was found in the cache. Disambiguates a return of false, a storable value.
-	 *
-	 * @since 2.4.3
-	 *
 	 * @return mixed wp_cache_get if object caching is allowed. False otherwise.
 	 */
 	public function object_cache_get( $key, $group = 'the_seo_framework', $force = false, &$found = null ) {
@@ -319,34 +431,6 @@
 	}
 
 	/**
-	 * Faster way of doing an in_array search compared to default PHP behavior.
-	 * @NOTE only to show improvement with large arrays. Might slow down with small arrays.
-	 * @NOTE can't do type checks. Always assume the comparing value is a string.
-	 *
-	 * @since 2.5.2
-	 *
-	 * @param string|array $needle The needle(s) to search for
-	 * @param array $array The single dimensional array to search in.
-	 * @return bool true if value is in array.
-	 */
-	public function in_array( $needle, $array ) {
-
-		$array = array_flip( $array );
-
-		if ( is_string( $needle ) ) {
-			if ( isset( $array[$needle] ) )
-				return true;
-		} else if ( is_array( $needle ) ) {
-			foreach ( $needle as $str ) {
-				if ( isset( $array[$str] ) )
-					return true;
-			}
-		}
-
-		return false;
-	}
-
-	/**
 	 * Checks if the string input is exactly '1'.
 	 *
 	 * @since 2.6.0
@@ -432,10 +516,10 @@
 
 		static $lowercase = array();
 
-		if ( isset( $lowercase[$noun] ) )
-			return $lowercase[$noun];
+		if ( isset( $lowercase[ $noun ] ) )
+			return $lowercase[ $noun ];
 
-		return $lowercase[$noun] = $this->check_wp_locale( 'de' ) ? $noun : strtolower( $noun );
+		return $lowercase[ $noun ] = $this->check_wp_locale( 'de' ) ? $noun : strtolower( $noun );
 	}
 
 	/**
@@ -465,7 +549,7 @@
 		if ( $this->load_options ) {
 			//* Options are allowed to be loaded.
 
-			$url = html_entity_decode( menu_page_url( $this->page_id, 0 ) );
+			$url = html_entity_decode( menu_page_url( $this->seo_settings_page_slug, 0 ) );
 
 			return esc_url( $url );
 		}
@@ -481,7 +565,6 @@
 	 *
 	 * @param bool $guess : If true, the timezone will be guessed from the
 	 * WordPress core gmt_offset option.
-	 *
 	 * @return string|empty PHP Timezone String.
 	 */
 	public function get_timezone_string( $guess = false ) {
@@ -505,7 +588,6 @@
 	 * @since 2.6.0
 	 *
 	 * @param int $offset The GMT offzet.
-	 *
 	 * @return string PHP Timezone String.
 	 */
 	protected function get_tzstring_from_offset( $offset = 0 ) {
@@ -532,7 +614,6 @@
 	 * @param string $tzstring Optional. The PHP Timezone string. Best to leave empty to always get a correct one.
 	 * @link http://php.net/manual/en/timezones.php
 	 * @param bool $reset Whether to reset to default. Ignoring first parameter.
-	 *
 	 * @return bool True on success. False on failure.
 	 */
 	public function set_timezone( $tzstring = '', $reset = false ) {
@@ -565,4 +646,83 @@
 		return $this->set_timezone( '', true );
 	}
 
+	/**
+	 * Converts time from GMT input to given format.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param string $format The datetime format.
+	 * @param string $time The GMT time. Expects timezone to be omitted.
+	 * @return string The converted time. Empty string if no $time is given.
+	 */
+	public function gmt2date( $format = 'Y-m-d', $time = '' ) {
+
+		if ( $time )
+			return date( $format, strtotime( $time . ' GMT' ) );
+
+		return '';
+	}
+
+	/**
+	 * Counts words encounters from input string.
+	 * Case insensitive. Returns first encounter of each word if found multiple times.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param string $string Required. The string to count words in.
+	 * @param int $amount Minimum amount of words to encounter in the string. Set to 0 to count all words longer than $bother_length.
+	 * @param int $amount_bother Minimum amount of words to encounter in the string that fall under the $bother_length. Set to 0 to count all words shorter than $bother_length.
+	 * @param int $bother_length The maximum string length of a word to pass for $amount_bother instead of $amount. Set to 0 to pass all words through $amount_bother
+	 * @return array Containing arrays of words with their count.
+	 */
+	public function get_word_count( $string, $amount = 3, $amount_bother = 5, $bother_length = 3 ) {
+
+		//* Convert string's special characters into PHP readable words.
+		$string = htmlentities( $string, ENT_COMPAT, 'UTF-8' );
+
+		//* Count the words. Because we've converted all characters to XHTML codes, the odd ones should be only numerical.
+		$words = str_word_count( strtolower( $string ), 2, '&#0123456789;' );
+
+		$words_too_many = array();
+
+		if ( is_array( $words ) ) {
+
+			/**
+			 * Applies filters 'the_seo_framework_bother_me_desc_length' : int Min Character length to bother you with.
+			 * @since 2.6.0
+			 */
+			$bother_me_length = (int) apply_filters( 'the_seo_framework_bother_me_desc_length', $bother_length );
+
+			$word_count = array_count_values( $words );
+
+			//* Parse word counting.
+			if ( is_array( $word_count ) ) {
+				//* We're going to fetch words based on position, and then flip it to become the key.
+				$word_keys = array_flip( array_reverse( $words, true ) );
+
+				foreach ( $word_count as $word => $count ) {
+
+					if ( mb_strlen( html_entity_decode( $word ) ) < $bother_me_length ) {
+						$run = $count >= $amount_bother;
+					} else {
+						$run = $count >= $amount;
+					}
+
+					if ( $run ) {
+						//* The encoded word is longer or equal to the bother lenght.
+
+						$word_len = mb_strlen( $word );
+
+						$position = $word_keys[ $word ];
+						$first_encountered_word = mb_substr( $string, $position, $word_len );
+
+						//* Found words that are used too frequently.
+						$words_too_many[] = array( $first_encountered_word => $count );
+					}
+				}
+			}
+		}
+
+		return $words_too_many;
+	}
 }
Index: inc/classes/debug.class.php
===================================================================
--- inc/classes/debug.class.php	(revision 1475679)
+++ inc/classes/debug.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Debug
  *
@@ -39,11 +41,24 @@
 	 *
 	 * @since 2.6.5
 	 *
-	 * @var bool Whether to add to AutoDescription_Debug::debug_output.
+	 * @var bool Whether to continue adding to AutoDescription_Debug::debug_output
+	 * within AutoDescription_Debug::debug_init().
 	 */
 	protected $add_debug_output = true;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor and add actions.
 	 */
 	public function __construct() {
@@ -54,7 +69,6 @@
 			add_action( 'admin_footer', array( $this, 'debug_output' ) );
 			add_action( 'wp_footer', array( $this, 'debug_output' ) );
 		}
-
 	}
 
 	/**
@@ -96,9 +110,11 @@
 
 			if ( function_exists( '__' ) ) {
 				if ( isset( $replacement ) )
+					/* translators: 1: Function name, 2: Plugin Version notification, 3: Replacement function */
 					trigger_error( sprintf( __( '%1$s is <strong>deprecated</strong> since version %2$s of The SEO Framework! Use %3$s instead.', 'autodescription' ), $function, $version, $replacement ) );
 				else
-					trigger_error( sprintf( __( '%1$s is <strong>deprecated</strong> since version %2$s of The SEO Framework with no alternative available.' ), $function, $version ) );
+					/* translators: 1: Function name, 2: Plugin Version notification */
+					trigger_error( sprintf( __( '%1$s is <strong>deprecated</strong> since version %2$s of The SEO Framework with no alternative available.', 'autodescription' ), $function, $version ) );
 			} else {
 				if ( isset( $replacement ) )
 					trigger_error( sprintf( '%1$s is <strong>deprecated</strong> since version %2$s of The SEO Framework! Use %3$s instead.', $function, $version, $replacement ) );
@@ -161,7 +177,6 @@
 					'https://codex.wordpress.org/Debugging_in_WordPress'
 				);
 
-				/* translators: 1: Function name, 2: Message, 3: Plugin Version notification */
 				trigger_error( sprintf( '%1$s was called <strong>incorrectly</strong>. %2$s %3$s', $function, $message, $version ) );
 			}
 
@@ -170,6 +185,51 @@
 	}
 
 	/**
+	 * Mark a property or method inaccessible when it has been used.
+
+	 * The current behavior is to trigger a user error if WP_DEBUG is true.
+	 *
+	 * @since 2.7.0
+	 * @access private
+	 *
+	 * @param string $p_or_m	The Property or Method.
+	 * @param string $message	A message explaining what has been done incorrectly.
+	 */
+	public function _inaccessible_p_or_m( $p_or_m, $message = '' ) {
+
+		/**
+		 * Fires when the inaccessible property or method is being used.
+		 *
+		 * @since 2.7.0
+		 *
+		 * @param string $p_or_m	The Property or Method.
+		 * @param string $message	A message explaining what has been done incorrectly.
+		 */
+		do_action( 'the_seo_framework_inaccessible_p_or_m_run', $p_or_m, $message );
+
+		/**
+		* Filter whether to trigger an error for _doing_it_wrong() calls.
+		*
+		* @since 3.1.0
+		*
+		* @param bool $trigger Whether to trigger the error for _doing_it_wrong() calls. Default true.
+		*/
+		if ( WP_DEBUG && apply_filters( 'the_seo_framework_inaccessible_p_or_m_trigger_error', true ) ) {
+
+			set_error_handler( array( $this, 'error_handler_inaccessible_call' ) );
+
+			if ( function_exists( '__' ) ) {
+				/* translators: 1: Method or Property name, 2: Message */
+				trigger_error( sprintf( __( '%1$s is not <strong>accessible</strong>. %2$s', 'autodescription' ), $p_or_m, $message ) );
+			} else {
+				trigger_error( sprintf( '%s is not <strong>accessible</strong>. %s', $p_or_m, $message ) );
+			}
+
+			restore_error_handler();
+		}
+	}
+
+	/**
 	 * The SEO Framework error handler.
 	 *
 	 * Only handles notices.
@@ -224,13 +284,36 @@
 	}
 
 	/**
-	 * Echo's error.
+	 * The SEO Framework error handler.
 	 *
-	 * @access private
-	 * Please don't use this error handler.
+	 * Only handles notices.
+	 * @see E_USER_NOTICE
 	 *
 	 * @since 2.6.0
 	 *
+	 * @param int Error handling code.
+	 * @param string The error message.
+	 */
+	protected function error_handler_inaccessible_call( $code, $message ) {
+
+		if ( $code >= 1024 && isset( $message ) ) {
+
+			$backtrace = debug_backtrace();
+			/**
+			 * 0 = This function. 1 = Debug function. 2 = debug function. 3-29 = 26 classes loop, 30 = user call.
+			 */
+			$error = $backtrace[30];
+
+			$this->error_handler( $error, $message );
+		}
+
+	}
+
+	/**
+	 * Echos error.
+	 *
+	 * @since 2.6.0
+	 *
 	 * @param array $error The Error location and file.
 	 * @param string $message The error message.
 	 */
@@ -248,18 +331,17 @@
 	}
 
 	/**
-	 * Echo found screens in the admin footer when debugging is enabled.
+	 * Echos found screens in the admin footer when debugging is enabled.
 	 *
+	 * @since 2.5.2
 	 * @uses bool $this->the_seo_framework_debug
-	 * @global array $current_screen
-	 *
 	 * @access private
-	 * @since 2.5.2
+	 * @global object $current_screen
 	 */
 	public function debug_screens() {
 		global $current_screen;
 
-		$this->debug_init( __CLASS__, __FUNCTION__, false, '', get_defined_vars() );
+		$this->debug_init( __METHOD__, false, '', get_defined_vars() );
 
 	}
 
@@ -266,77 +348,18 @@
 	/**
 	 * Echos debug output.
 	 *
+	 * @since 2.6.0
 	 * @access private
-	 * @since 2.6.0
 	 */
 	public function debug_output() {
-
-		if ( $this->debug_output ) {
-			if ( $this->the_seo_framework_debug_hidden ) {
-				echo "\r\n<!--\r\n:: THE SEO FRAMEWORK DEBUG :: \r\n" . $this->debug_output . "\r\n:: / THE SEO FRAMEWORK DEBUG ::\r\n-->\r\n";
-			} else {
-
-				$id = $this->get_the_real_ID();
-				$mdash = ' &mdash; ';
-				$term = $this->is_archive() ? $this->fetch_the_term( $id ) : '';
-				$taxonomy = isset( $term->taxonomy ) ? $term->taxonomy : '';
-
-				//* This will return 'Page' on all non-archive types (except the home page)
-				$type = ! $this->is_archive() && $this->is_front_page( $id ) ? 'Front Page' : $this->get_the_term_name( $term );
-				$cache_key = $this->generate_cache_key( $this->get_the_real_ID(), $taxonomy );
-
-				if ( $this->is_admin() ) {
-					?>
-					<div style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 200px );min-height:700px;padding:0;margin:20px 20px 40px 180px;overflow:hidden;border:1px solid #ccc;border-radius:3px;font:'Open Sans',sans-serif">
-						<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px;">
-							SEO Debug Information
-							<?php
-							if ( $this->is_post_edit() || $this->is_term_edit() ) :
-								echo ' :: ';
-								echo 'Type: ' . $type;
-								echo $mdash . 'ID: ' . $id;
-								echo $mdash . 'Cache key: ' . $cache_key;
-							endif;
-							?>
-						</h3>
-						<div style="position:absolute;bottom:0;right:0;left:0;top:41px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;">
-							<?php echo $this->debug_header_output(); ?>
-							<?php echo $this->debug_query_output(); ?>
-							<?php echo $this->debug_output; ?>
-						</div>
-					</div>
-					<?php
-				} else {
-					?>
-					<style type="text/css">.wp-ui-notification{color:#fff;background-color:#d54e21}.code.highlight{font-family:Consolas,Monaco,monospace;font-size:14px;}</style>
-					<div style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 80px );min-height:700px;padding:0;margin:40px;overflow:hidden;border:1px solid #ccc;border-radius:3px;font:'Open Sans',sans-serif">
-						<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px;">
-							SEO Debug Information
-							<?php
-							echo ' :: ';
-							echo 'Type: ' . $type;
-							echo $mdash . 'ID: ' . $id;
-							echo $mdash . 'Cache key: ' . $cache_key;
-							?>
-						</h3>
-						<div style="position:absolute;bottom:0;right:0;left:0;top:41px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;">
-							<?php echo $this->debug_header_output(); ?>
-							<?php echo $this->debug_query_output(); ?>
-							<?php echo $this->debug_output; ?>
-						</div>
-					</div>
-					<?php
-				}
-			}
-		}
-
+		$this->get_view( 'debug/output' );
 	}
 
 	/**
 	 * Parses input values and wraps them in human-readable elements.
 	 *
+	 * @since 2.6.0
 	 * @access private
-	 * @since 2.6.0
 	 *
 	 * @param mixed $values Values to be parsed.
 	 * @return string $output The parsed value.
@@ -348,7 +371,7 @@
 		if ( $this->the_seo_framework_debug ) {
 
 			$output .= "\r\n";
-			$output .=  $this->the_seo_framework_debug_hidden ? '' : '<span class="code highlight">';
+			$output .= $this->the_seo_framework_debug_hidden ? '' : '<span class="code highlight">';
 
 			if ( is_null( $values ) ) {
 				$output .= $this->debug_value_wrapper( "Debug message: Value isn't set." ) . "\r\n";
@@ -383,15 +406,15 @@
 						$output .= $this->debug_key_wrapper( $key ) . ' => ';
 						$output .= $this->debug_value_wrapper( "''" );
 						$output .= "\r\n";
-					} else if ( is_string( $value ) || is_int( $value ) ) {
+					} elseif ( is_string( $value ) || is_int( $value ) ) {
 						$output .= $this->debug_key_wrapper( $key ) . ' => ';
 						$output .= $this->debug_value_wrapper( $value );
 						$output .= "\r\n";
-					} else if ( is_bool( $value ) ) {
+					} elseif ( is_bool( $value ) ) {
 						$output .= $this->debug_key_wrapper( $key ) . ' => ';
 						$output .= $this->debug_value_wrapper( $value ? 'true' : 'false' );
 						$output .= "\r\n";
-					} else if ( is_array( $value ) ) {
+					} elseif ( is_array( $value ) ) {
 						$output .= $this->debug_key_wrapper( $key ) . ' => ';
 						$output .= "Array[\r\n";
 						$output .= $this->the_seo_framework_debug_hidden ? '' : '<p style="margin:0;padding-left:12px">';
@@ -400,13 +423,13 @@
 							if ( '' === $v ) {
 								$output .= $this->debug_key_wrapper( $k ) . ' => ';
 								$output .= $this->debug_value_wrapper( "''" );
-							} else if ( is_string( $v ) || is_int( $v ) ) {
+							} elseif ( is_string( $v ) || is_int( $v ) ) {
 								$output .= $this->debug_key_wrapper( $k ) . ' => ';
 								$output .= $this->debug_value_wrapper( $v );
-							} else if ( is_bool( $v ) ) {
+							} elseif ( is_bool( $v ) ) {
 								$output .= $this->debug_key_wrapper( $k ) . ' => ';
 								$output .= $this->debug_value_wrapper( $v ? 'true' : 'false' );
-							} else if ( is_array( $v ) ) {
+							} elseif ( is_array( $v ) ) {
 								$output .= $this->debug_key_wrapper( $k ) . ' => ';
 								$output .= $this->debug_value_wrapper( 'Debug message: Three+ dimensional array' );
 							} else {
@@ -418,7 +441,7 @@
 							$output .= $this->the_seo_framework_debug_hidden ? '' : '<br>';
 						}
 						$output .= $this->the_seo_framework_debug_hidden ? '' : '</p>';
-						$output .= "]";
+						$output .= ']';
 					} else {
 						$output .= $this->debug_key_wrapper( $key ) . ' => ';
 						$output .= $this->debug_value_wrapper( $value );
@@ -427,13 +450,13 @@
 					$output .= $this->the_seo_framework_debug_hidden ? '' : '<br>';
 				}
 				$output .= $this->the_seo_framework_debug_hidden ? '' : '</div>';
-			} else if ( '' === $values ) {
+			} elseif ( '' === $values ) {
 				$output .= "\t\t";
 				$output .= $this->debug_value_wrapper( "''" );
-			} else if ( is_string( $values ) || is_int( $values ) ) {
+			} elseif ( is_string( $values ) || is_int( $values ) ) {
 				$output .= "\t\t";
 				$output .= $this->debug_value_wrapper( $values );
-			} else if ( is_bool( $values ) ) {
+			} elseif ( is_bool( $values ) ) {
 				$output .= "\t\t";
 				$output .= $this->debug_value_wrapper( $values ? 'true' : 'false' );
 			} else {
@@ -462,9 +485,9 @@
 	public function debug_key_wrapper( $key, $ignore = false ) {
 
 		if ( $ignore || false === $this->the_seo_framework_debug_hidden )
-			return '<font color="chucknorris">' . esc_attr( (string) $key ) . '</font>';
+			return '<font color="chucknorris">' . esc_attr( $key ) . '</font>';
 
-		return esc_attr( (string) $key );
+		return esc_attr( $key );
 	}
 
 	/**
@@ -487,9 +510,9 @@
 			return html_entity_decode( $value );
 
 		if ( $ignore || false === $this->the_seo_framework_debug_hidden )
-			return '<span class="wp-ui-notification">' . esc_attr( (string) trim( $value ) ) . '</span>';
+			return '<span class="wp-ui-notification">' . esc_attr( trim( $value ) ) . '</span>';
 
-		return esc_attr( (string) $value );
+		return esc_attr( $value );
 	}
 
 	/**
@@ -499,7 +522,6 @@
 	 *
 	 * @access private
 	 *
-	 * @param string $class The class name.
 	 * @param string $method The function name.
 	 * @param bool $store Whether to store the output in cache for next run to pick up on.
 	 * @param double $debug_key Use $debug_key as variable, it's reserved.
@@ -506,7 +528,7 @@
 	 * @param mixed function args.
 	 * @return void early if debugging is disabled or when storing cache values.
 	 */
-	protected function debug_init( $class, $method, $store, $debug_key ) {
+	protected function debug_init( $method, $store, $debug_key ) {
 
 		if ( false === $this->the_seo_framework_debug || false === $this->add_debug_output )
 			return;
@@ -513,14 +535,14 @@
 
 		$output = '';
 
-		if ( func_num_args() >= 5 ) {
+		if ( func_num_args() >= 4 ) {
 
 			//* Cache the args for $store.
 			static $cached_args = array();
 			static $hold_args = array();
 
-			$args = array_slice( func_get_args(), 4 );
-			$key = $class . '_' . $method . '_' . $debug_key;
+			$args = array_slice( func_get_args(), 3 );
+			$key = $method . '_' . $debug_key;
 
 			if ( $store ) {
 				$this->profile( false, false, 'time', $key ) . ' seconds';
@@ -528,8 +550,8 @@
 
 				unset( $args[0]['debug_key'] );
 
-				$cached_args[$class][$method] = $args;
-				$hold_args[$class][$method] = $args;
+				$cached_args[ $method ] = $args;
+				$hold_args[ $method ] = $args;
 				return;
 			} else {
 
@@ -545,43 +567,39 @@
 
 				if ( $this->is_admin() && 'admin_footer' !== current_action() ) {
 					echo "\r\n";
-					echo $this->the_seo_framework_debug_hidden ? $debug_key . ' action. ' : '<p>' . $debug_key . '</p>';
+					echo $this->the_seo_framework_debug_hidden ? esc_html( $debug_key ) . ' action. ' : '<p>' . esc_html( $debug_key ) . '</p>';
 				}
 
 				$output .= "\r\n";
-				$output .= $this->the_seo_framework_debug_hidden ? $debug_key . ' output. ' : '<h3>' . $debug_key . '</h3>';
+				$output .= $this->the_seo_framework_debug_hidden ? esc_html( $debug_key ) . ' output. ' : '<h3>' . esc_html( $debug_key ) . '</h3>';
 
-				if ( isset( $cached_args[$class][$method] ) ) {
+				if ( isset( $cached_args[ $method ] ) ) {
 					$args[] = array(
 						'profile' => array(
 							'time' => $this->profile( false, true, 'time', $key ) . ' seconds',
-							'memory' => $this->profile( false, true, 'memory', $key ) . ' bytes'
-						)
+							'memory' => $this->profile( false, true, 'memory', $key ) . ' bytes',
+						),
 					);
 
-					$args = array_merge( $cached_args[$class][$method], $args );
+					$args = array_merge( $cached_args[ $method ], $args );
 
 					//* Reset args for next run.
-					$cached_args[$class][$method] = null;
+					$cached_args[ $method ] = null;
 				}
 			}
 
 			if ( $args ) {
 
-				if ( $class ) {
-					$output .= $class . '::' . $method . '( ';
-				} else {
-					$output .= $method . '( ';
-				}
+				$output .= $method . '( ';
 
-				if ( isset( $hold_args[$class][$method][0] ) ) {
-					if ( is_array( $hold_args[$class][$method][0] ) ) {
-						foreach ( $hold_args[$class][$method][0] as $var => $a ) {
+				if ( isset( $hold_args[ $method ][0] ) ) {
+					if ( is_array( $hold_args[ $method ][0] ) ) {
+						foreach ( $hold_args[ $method ][0] as $var => $a ) {
 								$output .= gettype( $a ) . ' $' . $var . ', ';
 						}
 					}
 					$output = rtrim( $output, ', ' );
-					$hold_args[$class][$method] = null;
+					$hold_args[ $method ] = null;
 				}
 
 				$output .= ' )';
@@ -597,7 +615,7 @@
 									$output .= $this->the_seo_framework_debug_hidden ? '' : '<div style="padding-left:12px">';
 										$output .= "\t\t" . $this->get_debug_information( $v );
 									$output .= $this->the_seo_framework_debug_hidden ? '' : '</div>';
-									$output .= "\t  " .  ']' . "\r\n";
+									$output .= "\t  " . ']' . "\r\n";
 								$output .= $this->the_seo_framework_debug_hidden ? '' : '</div>';
 							$output .= $this->the_seo_framework_debug_hidden ? '' : '</div>';
 						}
@@ -632,7 +650,6 @@
 			$this->debug_output .= $output;
 			$this->debug_output .= $this->the_seo_framework_debug_hidden ? '' : '</div>';
 		}
-
 	}
 
 	/**
@@ -658,10 +675,10 @@
 		static $plugin_time = array();
 		static $plugin_memory = array();
 
-		$timer_start[$key] = isset( $timer_start[$key] ) ? $timer_start[$key] : 0;
-		$memory_start[$key] = isset( $memory_start[$key] ) ? $memory_start[$key] : 0;
-		$plugin_time[$key] = isset( $plugin_time[$key] ) ? $plugin_time[$key] : 0;
-		$plugin_memory[$key] = isset( $plugin_memory[$key] ) ? $plugin_memory[$key] : 0;
+		$timer_start[ $key ] = isset( $timer_start[ $key ] ) ? $timer_start[ $key ] : 0;
+		$memory_start[ $key ] = isset( $memory_start[ $key ] ) ? $memory_start[ $key ] : 0;
+		$plugin_time[ $key ] = isset( $plugin_time[ $key ] ) ? $plugin_time[ $key ] : 0;
+		$plugin_memory[ $key ] = isset( $plugin_memory[ $key ] ) ? $plugin_memory[ $key ] : 0;
 
 		//* Get now.
 		$time_now = microtime( true );
@@ -668,16 +685,16 @@
 		$memory_usage_now = memory_get_usage();
 
 		//* Calculate difference.
-		$difference_time = $time_now - $timer_start[$key];
-		$difference_memory = $memory_usage_now - $memory_start[$key];
+		$difference_time = $time_now - $timer_start[ $key ];
+		$difference_memory = $memory_usage_now - $memory_start[ $key ];
 
 		//* Add difference to total.
-		$plugin_time[$key] = $plugin_time[$key] + $difference_time;
-		$plugin_memory[$key] = $plugin_memory[$key] + $difference_memory;
+		$plugin_time[ $key ] = $plugin_time[ $key ] + $difference_time;
+		$plugin_memory[ $key ] = $plugin_memory[ $key ] + $difference_memory;
 
 		//* Reset timer and memory
-		$timer_start[$key] = $time_now;
-		$memory_start[$key] = $memory_usage_now;
+		$timer_start[ $key ] = $time_now;
+		$memory_start[ $key ] = $memory_usage_now;
 
 		if ( $from_last ) {
 			if ( false === $echo ) {
@@ -695,14 +712,14 @@
 			if ( false === $echo ) {
 				//* Return early if not allowed to echo.
 				if ( 'time' === $what )
-					return number_format( $plugin_time[$key], 5 );
+					return number_format( $plugin_time[ $key ], 5 );
 
 				return $plugin_memory[$key];
 			}
 
 			//* Convert to string and echo if not returned yet.
-			echo (string) "\r\n" . $plugin_time[$key] . "s\r\n";
-			echo (string) ( $plugin_memory[$key] / 1024 ) . "kiB\r\n";
+			echo (string) "\r\n" . $plugin_time[ $key ] . "s\r\n";
+			echo (string) ( $plugin_memory[ $key ] / 1024 ) . "kiB\r\n";
 		}
 
 	}
@@ -739,10 +756,10 @@
 	 */
 	protected function debug_header_output() {
 
-		if ( $this->is_admin() && ! $this->is_term_edit() && ! $this->is_post_edit() && ! $this->is_seo_settings_page() )
+		if ( $this->is_admin() && ! $this->is_term_edit() && ! $this->is_post_edit() && ! $this->is_seo_settings_page( true ) )
 			return;
 
-		if ( $this->is_seo_settings_page() )
+		if ( $this->is_seo_settings_page( true ) )
 			add_filter( 'the_seo_framework_current_object_id', array( $this, 'get_the_front_page_ID' ) );
 
 		//* Start timer.
@@ -787,7 +804,7 @@
 
 		//* Escape it, replace EOL with breaks, and style everything between quotes (which are ending with space).
 		$output = str_replace( PHP_EOL, '<br>' . PHP_EOL, esc_html( $output ) );
-		$output = preg_replace( "/(&quot;.*?&quot;)(\s)/", '<font color="arnoldschwarzenegger">$1</font> ', $output );
+		$output = preg_replace( '/(&quot;.*?&quot;)(\s)/', '<font color="arnoldschwarzenegger">$1</font> ', $output );
 
 		$output = '<div style="display:inline-block;width:100%;padding:20px;font-family:Consolas,Monaco,monospace;font-size:14px;">' . $output . '</div>';
 		$output = '<div style="display:block;width:100%;background:#23282D;color:#ddd;border-bottom:1px solid #ccc">' . $title . $timer . $output . '</div>';
@@ -810,6 +827,8 @@
 		//* Don't register this output.
 		$this->add_debug_output = false;
 
+		global $multipage, $numpages;
+
 		//* Only get true/false values.
 		$is_404 = $this->is_404();
 		$is_admin = $this->is_admin();
@@ -829,6 +848,8 @@
 		$is_home = $this->is_home();
 		$is_month = $this->is_month();
 		$is_page = $this->is_page();
+		$page = $this->page();
+		$paged = $this->paged();
 		$is_preview = $this->is_preview();
 		$is_search = $this->is_search();
 		$is_single = $this->is_single();
@@ -840,7 +861,7 @@
 		$is_wc_shop = $this->is_wc_shop();
 		$is_wc_product = $this->is_wc_product();
 		$is_year = $this->is_year();
-		$is_seo_settings_page = $this->is_seo_settings_page();
+		$is_seo_settings_page = $this->is_seo_settings_page( true );
 
 		//* Get all above vars, split them in two (true and false) and sort them by key names.
 		$vars = get_defined_vars();
@@ -854,10 +875,12 @@
 		$output = '';
 		foreach ( $current as $name => $value ) {
 			$type = '(' . gettype( $value ) . ')';
-			if ( is_bool( $value ) )
+
+			if ( is_bool( $value ) ) {
 				$value = $value ? 'true' : 'false';
-			else
+			} else {
 				$value = esc_attr( var_export( $value, true ) );
+			}
 
 			$value = $this->the_seo_framework_debug_hidden ? $type . ' ' . $value : '<font color="harrisonford">' . $type . ' ' . $value . '</font>';
 			$out = $name . ' => ' . $value;
@@ -866,10 +889,12 @@
 
 		foreach ( $not_current as $name => $value ) {
 			$type = '(' . gettype( $value ) . ')';
-			if ( is_bool( $value ) )
+
+			if ( is_bool( $value ) ) {
 				$value = $value ? 'true' : 'false';
-			else
+			} else {
 				$value = esc_attr( var_export( $value, true ) );
+			}
 
 			$value = $this->the_seo_framework_debug_hidden ? $type . ' ' . $value : '<font color="harrisonford">' . $type . ' ' . $value . '</font>';
 			$out = $name . ' => ' . $value;
@@ -886,5 +911,4 @@
 
 		return $output;
 	}
-
 }
Index: inc/classes/detect.class.php
===================================================================
--- inc/classes/detect.class.php	(revision 1475679)
+++ inc/classes/detect.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Detect
  *
@@ -26,6 +28,18 @@
 class AutoDescription_Detect extends AutoDescription_Render {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -37,7 +51,6 @@
 	 *
 	 * @since 2.6.1
 	 * @staticvar array $active_plugins
-	 *
 	 * @credits JetPack for most code.
 	 *
 	 * @return array List of active plugins.
@@ -70,7 +83,6 @@
 	 *
 	 * Applies filters 'the_seo_framework_conflicting_plugins' : array
 	 * @since 2.6.0
-	 *
 	 * @credits JetPack for most code.
 	 *
 	 * @return array List of conflicting plugins.
@@ -91,20 +103,18 @@
 				'Google XML Sitemaps for qTranslate'   => 'google-xml-sitemaps-v3-for-qtranslate/sitemap.php',
 				'XML Sitemap & Google News feeds'      => 'xml-sitemap-feed/xml-sitemap.php',
 				'Google Sitemap by BestWebSoft'        => 'google-sitemap-plugin/google-sitemap-plugin.php',
-				'WordPress SEO by Yoast'               => 'wordpress-seo/wp-seo.php',
-				'WordPress SEO Premium by Yoast'       => 'wordpress-seo-premium/wp-seo-premium.php',
+				'Yoast SEO'                            => 'wordpress-seo/wp-seo.php',
+				'Yoast SEO Premium'                    => 'wordpress-seo-premium/wp-seo-premium.php',
 				'All in One SEO Pack'                  => 'all-in-one-seo-pack/all_in_one_seo_pack.php',
 				'Sitemap'                              => 'sitemap/sitemap.php',
 				'Simple Wp Sitemap'                    => 'simple-wp-sitemap/simple-wp-sitemap.php',
 				'Simple Sitemap'                       => 'simple-sitemap/simple-sitemap.php',
 				'XML Sitemaps'                         => 'xml-sitemaps/xml-sitemaps.php',
-				'MSM Sitemaps'                         => 'msm-sitemap/msm-sitemap.php',
 			),
 			'open_graph' => array(
 				'2 Click Social Media Buttons'         => '2-click-socialmedia-buttons/2-click-socialmedia-buttons.php',
 				'Add Link to Facebook'                 => 'add-link-to-facebook/add-link-to-facebook.php',
 				'Add Meta Tags'                        => 'add-meta-tags/add-meta-tags.php',
-				'Easy Facebook Share Thumbnail'        => 'easy-facebook-share-thumbnails/esft.php',
 				'Facebook'                             => 'facebook/facebook.php',
 				'Facebook AWD All in one'              => 'facebook-awd/AWD_facebook.php',
 				'Facebook Featured Image & OG Meta Tags' => 'facebook-featured-image-and-open-graph-meta-tags/fb-featured-image.php',
@@ -119,31 +129,19 @@
 				'NextScripts SNAP'                     => 'social-networks-auto-poster-facebook-twitter-g/NextScripts_SNAP.php',
 				'Open Graph'                           => 'opengraph/opengraph.php',
 				'Open Graph Protocol Framework'        => 'open-graph-protocol-framework/open-graph-protocol-framework.php',
-				'SEO Facebook Comments'                => 'seo-facebook-comments/seofacebook.php',
 				'Shareaholic'                          => 'sexybookmarks/sexy-bookmarks.php',
 				'Shareaholic2'                         => 'shareaholic/sexy-bookmarks.php',
 				'SharePress'                           => 'sharepress/sharepress.php',
-				'Simple Facebook Connect'              => 'simple-facebook-connect/sfc.php',
-				'Social Discussions'                   => 'social-discussions/social-discussions.php',
 				'Social Sharing Toolkit'               => 'social-sharing-toolkit/social_sharing_toolkit.php',
-				'Socialize'                            => 'socialize/socialize.php',
 				'Tweet, Like, Google +1 and Share'     => 'only-tweet-like-share-and-google-1/tweet-like-plusone.php',
-				'Wordbooker'                           => 'wordbooker/wordbooker.php',
 				'WordPress Social Sharing Optimization' => 'wpsso/wpsso.php',
-				'WP Caregiver'                         => 'wp-caregiver/wp-caregiver.php',
-				'WP Facebook Like Send & Open Graph Meta' => 'wp-facebook-like-send-open-graph-meta/wp-facebook-like-send-open-graph-meta.php',
 				'WP Facebook Open Graph protocol'      => 'wp-facebook-open-graph-protocol/wp-facebook-ogp.php',
-				'WP-OGP'                               => 'wp-ogp/wp-ogp.php',
-				'Zolton.org Social Plugin'             => 'zoltonorg-social-plugin/zosp.php',
-				'WP Facebook Like Button'              => 'wp-fb-share-like-button/wp_fb_share-like_widget.php'
 			),
 			'twitter_card' => array(
 				'Twitter'                              => 'twitter/twitter.php',
 				'Eewee Twitter Card'                   => 'eewee-twitter-card/index.php',
-				'IG:Twitter Cards'                     => 'ig-twitter-cards/ig-twitter-cards.php',
 				'Twitter Cards'                        => 'twitter-cards/twitter-cards.php',
 				'Twitter Cards Meta'                   => 'twitter-cards-meta/twitter-cards-meta.php',
-				'WP Twitter Cards'                     => 'wp-twitter-cards/twitter_cards.php',
 			),
 		);
 
@@ -153,10 +151,9 @@
 	/**
 	 * Fetches type of conflicting plugins.
 	 *
-	 * @param string $type The Key from $this->conflicting_plugins()
-	 *
 	 * @since 2.6.0
 	 *
+	 * @param string $type The Key from $this->conflicting_plugins()
 	 * @return array
 	 */
 	public function get_conflicting_plugins( $type = 'seo_tools' ) {
@@ -175,7 +172,6 @@
 	 * @since 1.3.0
 	 *
 	 * @param array $plugins Array of array for constants, classes and / or functions to check for plugin existence.
-	 *
 	 * @return boolean True if plugin exists or false if plugin constant, class or function not detected.
 	 */
 	public function detect_plugin( $plugins ) {
@@ -218,13 +214,12 @@
 	 * Detect if you can use the given constants, functions and classes.
 	 * All must be available to return true.
 	 *
-	 * @param array $plugins Array of array for constants, classes and / or functions to check for plugin existence.
-	 * @param bool $use_cache Bypasses cache if false
-	 *
+	 * @since 2.5.2
 	 * @staticvar array $cache
 	 * @uses $this->detect_plugin_multi()
 	 *
-	 * @since 2.5.2
+	 * @param array $plugins Array of array for constants, classes and / or functions to check for plugin existence.
+	 * @param bool $use_cache Bypasses cache if false
 	 */
 	public function can_i_use( array $plugins = array(), $use_cache = true ) {
 
@@ -246,7 +241,7 @@
 			$func = array_flip( $func );
 
 			//* Glue with underscore and space for debugging purposes.
-			$mapped[$key] = $key . '_' . implode( ' ', $func );
+			$mapped[ $key ] = $key . '_' . implode( ' ', $func );
 		}
 
 		ksort( $mapped );
@@ -254,10 +249,10 @@
 		//* Glue with dash instead of underscore for debugging purposes.
 		$plugins_cache = implode( '-', $mapped );
 
-		if ( isset( $cache[$plugins_cache] ) )
-			return $cache[$plugins_cache];
+		if ( isset( $cache[ $plugins_cache ] ) )
+			return $cache[ $plugins_cache ];
 
-		return $cache[$plugins_cache] = $this->detect_plugin_multi( $plugins );
+		return $cache[ $plugins_cache ] = $this->detect_plugin_multi( $plugins );
 	}
 
 	/**
@@ -267,7 +262,6 @@
 	 * @since 2.5.2
 	 *
 	 * @param array $plugins Array of array for constants, classes and / or functions to check for plugin existence.
-	 *
 	 * @return boolean True if ALL functions classes and constants exists or false if plugin constant, class or function not detected.
 	 */
 	public function detect_plugin_multi( array $plugins ) {
@@ -309,30 +303,26 @@
 	/**
 	 * Checks if the (parent) theme name is loaded.
 	 *
-	 * @NOTE will return true if ANY of the array values matches.
-	 *
-	 * @param string|array $themes the current theme name
-	 * @param bool $depr If set to false don't use cache.
-	 *
 	 * @since 2.1.0
 	 *
+	 * @param string|array $themes the current theme name.
 	 * @return bool is theme active.
 	 */
-	public function is_theme( $themes = null, $depr = null ) {
+	public function is_theme( $themes = '' ) {
 
-		if ( ! isset( $themes ) )
+		if ( empty( $themes ) )
 			return false;
 
 		$wp_get_theme = wp_get_theme();
 
-		$theme_parent = strtolower( $wp_get_theme->get('Template') );
-		$theme_name = strtolower( $wp_get_theme->get('Name') );
+		$theme_parent = strtolower( $wp_get_theme->get( 'Template' ) );
+		$theme_name = strtolower( $wp_get_theme->get( 'Name' ) );
 
 		if ( is_string( $themes ) ) {
 			$themes = strtolower( $themes );
 			if ( $themes === $theme_parent || $themes === $theme_name )
 				return true;
-		} else if ( is_array( $themes ) ) {
+		} elseif ( is_array( $themes ) ) {
 			foreach ( $themes as $theme ) {
 				$theme = strtolower( $theme );
 				if ( $theme === $theme_parent || $theme === $theme_name ) {
@@ -346,13 +336,10 @@
 	}
 
 	/**
-	 * SEO plugin detection
+	 * Determines if other SEO plugins are active.
 	 *
 	 * @since 1.3.0
 	 *
-	 * @staticvar bool $detected
-	 * @since 2.2.5
-	 *
 	 * Applies filters 'the_seo_framework_seo_plugin_detected' : bool
 	 * @since 2.6.1
 	 *
@@ -376,7 +363,7 @@
 			$conflicting_plugins = $this->get_conflicting_plugins( 'seo_tools' );
 
 			foreach ( $conflicting_plugins as $plugin ) {
-				if ( in_array( $plugin, $active_plugins ) ) {
+				if ( in_array( $plugin, $active_plugins, true ) ) {
 					$detected = apply_filters( 'the_seo_framework_seo_plugin_detected', true );
 					break;
 				}
@@ -383,21 +370,18 @@
 			}
 		}
 
-		return $detected = $detected ? true : false;
+		return $detected = (bool) $detected;
 	}
 
 	/**
-	 * Open Graph plugin detection
+	 * Determines if other Open Graph or SEO plugins are active.
 	 *
 	 * @since 1.3.0
 	 *
-	 * @staticvar bool $detected
-	 * @since 2.2.5
-	 *
 	 * Applies filters 'the_seo_framework_og_plugin_detected' : bool
 	 * @since 2.6.1
 	 *
-	 * @return bool OG plugin detected.
+	 * @return bool True if OG or SEO plugin detected.
 	 */
 	public function detect_og_plugin() {
 
@@ -411,7 +395,7 @@
 		if ( $detected )
 			return $detected;
 
-		//* Old style filter.
+		//* Old style filter. Emits warning if used.
 		$detected = $this->has_og_plugin();
 		if ( isset( $detected ) )
 			return $detected;
@@ -422,7 +406,7 @@
 			$conflicting_plugins = $this->get_conflicting_plugins( 'open_graph' );
 
 			foreach ( $conflicting_plugins as $plugin ) {
-				if ( in_array( $plugin, $active_plugins ) ) {
+				if ( in_array( $plugin, $active_plugins, true ) ) {
 					$detected = apply_filters( 'the_seo_framework_og_plugin_detected', true );
 					break;
 				}
@@ -429,16 +413,14 @@
 			}
 		}
 
-		return $detected = $detected ? true : false;
+		return $detected = (bool) $detected;
 	}
 
 	/**
-	 * Open Graph plugin detection
+	 * Determines if other Twitter Card plugins are active.
 	 *
 	 * @since 2.6.0
-	 *
 	 * @staticvar bool $detected
-	 * @since 2.6.0
 	 *
 	 * @return bool Twitter Card plugin detected.
 	 */
@@ -460,7 +442,7 @@
 			$conflicting_plugins = $this->get_conflicting_plugins( 'twitter_card' );
 
 			foreach ( $conflicting_plugins as $plugin ) {
-				if ( in_array( $plugin, $active_plugins ) ) {
+				if ( in_array( $plugin, $active_plugins, true ) ) {
 					$detected = apply_filters( 'the_seo_framework_twittercard_plugin_detected', true );
 					break;
 				}
@@ -467,18 +449,16 @@
 			}
 		}
 
-		return $detected = $detected ? true : false;
+		return $detected = (bool) $detected;
 	}
 
 	/**
-	 * Detects if plugins outputting ld+json exists
+	 * Determines if other Schema.org LD+Json plugins are active.
 	 *
 	 * @since 1.3.0
+	 * @since 2.6.1 Always return false. Let other plugin authors decide its value.
 	 *
-	 * Always return false.
-	 * @since 2.6.1
-	 *
-	 * @return bool false
+	 * @return bool Whether another Schema.org plugin is active.
 	 */
 	public function has_json_ld_plugin() {
 		/**
@@ -489,7 +469,7 @@
 	}
 
 	/**
-	 * Detecs sitemap plugins
+	 * Determines if other Sitemap plugins are active.
 	 *
 	 * @since 2.1.0
 	 * @staticvar bool $detected
@@ -509,7 +489,7 @@
 			$conflicting_plugins = $this->get_conflicting_plugins( 'sitemaps' );
 
 			foreach ( $conflicting_plugins as $plugin ) {
-				if ( in_array( $plugin, $active_plugins ) ) {
+				if ( in_array( $plugin, $active_plugins, true ) ) {
 					$detected = apply_filters( 'the_seo_framework_sitemap_plugin_detected', true );
 					break;
 				}
@@ -516,11 +496,11 @@
 			}
 		}
 
-		return $detected = $detected ? true : false;
+		return $detected = (bool) $detected;
 	}
 
 	/**
-	 * Whether able to add a line within robots based by plugin detection, or sitemap output option.
+	 * Determines whether to add a line within robots based by plugin detection, or sitemap output option.
 	 *
 	 * @since 2.6.0
 	 *
@@ -546,9 +526,10 @@
 	/**
 	 * Detects presence of robots.txt in root folder.
 	 *
+	 * @since 2.5.2
 	 * @staticvar $has_robots
 	 *
-	 * @since 2.5.2
+	 * @return bool Whether the robots.txt file exists.
 	 */
 	public function has_robots_txt() {
 
@@ -568,7 +549,7 @@
 	 * @since 2.5.2
 	 * @staticvar bool $has_map
 	 *
-	 * @return bool
+	 * @return bool Whether the sitemap.xml file exists.
 	 */
 	public function has_sitemap_xml() {
 
@@ -587,12 +568,11 @@
 	 *
 	 * @since 2.2.1
 	 *
-	 * @param string $version the three part version to compare to WordPress
-	 * @param string $compare the comparing operator, default "$version >= Current WP Version"
-	 *
 	 * @staticvar array $cache
 	 * @since 2.3.8
 	 *
+	 * @param string $version the three part version to compare to WordPress
+	 * @param string $compare the comparing operator, default "$version >= Current WP Version"
 	 * @return bool wp version is "compare" to
 	 */
 	public function wp_version( $version = '4.3.0', $compare = '>=' ) {
@@ -602,8 +582,8 @@
 		if ( empty( $compare ) )
 			$compare = '>=';
 
-		if ( isset( $cache[$version][$compare] ) )
-			return $cache[$version][$compare];
+		if ( isset( $cache[ $version ][ $compare ] ) )
+			return $cache[ $version ][ $compare ];
 
 		global $wp_version;
 
@@ -611,27 +591,19 @@
 		if ( 3 === strlen( $wp_version ) )
 			$wp_version = $wp_version . '.0';
 
-		if ( version_compare( $wp_version, $version, $compare ) )
-			return $cache[$version][$compare] = true;
-
-		return $cache[$version][$compare] = false;
+		return $cache[ $version ][ $compare ] = (bool) version_compare( $wp_version, $version, $compare );
 	}
 
 	/**
 	 * Checks for current theme support.
 	 *
-	 * Also, if it's cached as true from an array, it will be cached as string as well.
-	 * This is desired.
+	 * Maintains detection cache, array and strings are mixed through foreach loops.
 	 *
-	 * @NOTE will return true if ANY of the array values matches.
-	 *
 	 * @since 2.2.5
+	 * @staticvar array $cache
 	 *
 	 * @param string|array required $feature The features to check for.
 	 * @param bool $use_cache If set to false don't use cache.
-	 *
-	 * @staticvar array $cache
-	 *
 	 * @return bool theme support.
 	 */
 	public function detect_theme_support( $features, $use_cache = true ) {
@@ -648,6 +620,7 @@
 						return true;
 						break;
 					}
+					continue;
 				}
 			}
 
@@ -658,16 +631,16 @@
 		static $cache = array();
 
 		//* Check theme support cache
-		if ( is_string( $features ) && isset( $cache[$features] ) )
+		if ( is_string( $features ) && isset( $cache[ $features ] ) )
 			//* Feature support check has been cached
-			return $cache[$features];
+			return $cache[ $features ];
 
 		//* Check theme support array cache
 		if ( is_array( $features ) ) {
 			foreach ( $features as $feature ) {
-				if ( isset( $cache[$feature] ) && in_array( $cache[$feature], $features ) && $cache[$feature] ) {
-					// Feature is found and true
-					return $cache[$feature];
+				if ( isset( $cache[ $feature ] ) && $cache[ $feature ] ) {
+					// Feature is found and true.
+					return $cache[ $feature ];
 					break;
 				}
 			}
@@ -676,27 +649,28 @@
 		//* Setup cache values
 		if ( is_string( $features ) ) {
 			if ( current_theme_supports( $features ) ) {
-				return $cache[$features] = true;
+				return $cache[ $features ] = true;
 			} else {
-				return $cache[$features] = false;
+				return $cache[ $features ] = false;
 			}
-		} else if ( is_array( $features ) ) {
+		} elseif ( is_array( $features ) ) {
 			foreach ( $features as $feature ) {
 				if ( current_theme_supports( $feature ) ) {
-					return $cache[$feature] = true;
+					return $cache[ $feature ] = true;
 					break;
 				} else {
-					$cache[$feature] = false;
+					$cache[ $feature ] = false;
+					continue;
 				}
 			}
-			return $cache[$feature];
+			return $cache[ $feature ];
 		}
 
-		// No true value found so far, let's return false.
-		if ( ! isset( $cache[$features] ) )
-			$cache[$features] = false;
+		// No true value found so far, return false.
+		if ( ! isset( $cache[ $features ] ) )
+			$cache[ $features ] = false;
 
-		return $cache[$features];
+		return $cache[ $features ];
 	}
 
 	/**
@@ -704,7 +678,6 @@
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $supports
-	 *
 	 * @global array $_wp_theme_features
 	 *
 	 * @return bool
@@ -718,18 +691,28 @@
 
 		global $_wp_theme_features;
 
-		if ( isset( $_wp_theme_features['title-tag'] ) && true === $_wp_theme_features['title-tag'] )
-			return $supports = true;
+		return $supports = isset( $_wp_theme_features['title-tag'] ) && true === $_wp_theme_features['title-tag'];
+	}
 
-		return $supports = false;
+	/**
+	 * Sets up doing it wrong html code for in the footer.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param null|string $title The given title
+	 * @param null|string $sep The separator
+	 * @param null|string $seplocation Whether the blogname is left or right.
+	 * @return void
+	 */
+	public function set_tell_title_doing_it_wrong( $title = null, $sep = null, $seplocation = null ) {
+		return $this->tell_title_doing_it_wrong( $title, $sep, $seplocation, false );
 	}
 
 	/**
-	 * Add doing it wrong html code in the footer.
+	 * Adds doing it wrong html code in the footer.
 	 *
 	 * @since 2.5.2.1
-	 * @staticvar bool $no_spam
-	 *
+	 * @staticvar bool $run
 	 * @staticvar string $sep_output
 	 * @staticvar string $display_output
 	 * @staticvar string $seplocation_output
@@ -738,19 +721,18 @@
 	 * @param null|string $sep The separator
 	 * @param null|string $seplocation Whether the blogname is left or right.
 	 * @param bool $output Whether to store cache values or echo the output in the footer.
-	 *
 	 * @return void
 	 */
 	public function tell_title_doing_it_wrong( $title = null, $sep = null, $seplocation = null, $output = true ) {
 
 		if ( $output ) {
-			//* Prevent error log spam.
-			static $no_spam = null;
+			//* Prevent multiple output.
+			static $run = null;
 
-			if ( isset( $no_spam ) )
+			if ( isset( $run ) )
 				return;
 
-			$no_spam = true;
+			$run = true;
 		}
 
 		static $title_output = null;
@@ -769,20 +751,20 @@
 			if ( '' === $seplocation )
 				$seplocation = 'empty';
 
-			$title_output = ! isset( $title ) ? 'notset' : esc_attr( $title );
-			$sep_output = ! isset( $sep ) ? 'notset' : esc_attr( $sep );
-			$seplocation_output = ! isset( $seplocation ) ? 'notset' : esc_attr( $seplocation );
+			$title_output = ! isset( $title ) ? 'notset' : $title;
+			$sep_output = ! isset( $sep ) ? 'notset' : $sep;
+			$seplocation_output = ! isset( $seplocation ) ? 'notset' : $seplocation;
 		}
 
 		//* Echo the HTML comment.
 		if ( $output )
-			echo '<!-- Title diw: "' . $title_output . '" : "' . $sep_output . '" : "' . $seplocation_output . '" -->' . "\r\n";
+			echo '<!-- Title diw: "' . esc_html( $title_output ) . '" : "' . esc_html( $sep_output ) . '" : "' . esc_html( $seplocation_output ) . '" -->' . "\r\n";
 
 		return;
 	}
 
 	/**
-	 * Detect WPMUdev Domain Mapping plugin.
+	 * Detects WPMUdev Domain Mapping plugin.
 	 *
 	 * @since 2.3.0
 	 * @staticvar bool $active
@@ -800,7 +782,7 @@
 	}
 
 	/**
-	 * Detect Donncha Domain Mapping plugin.
+	 * Detects Donncha Domain Mapping plugin.
 	 *
 	 * @since 2.4.0
 	 * @staticvar bool $active
@@ -818,7 +800,7 @@
 	}
 
 	/**
-	 * Detect WPML plugin.
+	 * Detects WPML plugin.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $active
@@ -867,19 +849,19 @@
 
 		static $is_page = array();
 
-		if ( isset( $is_page[$type] ) )
-			return $is_page[$type];
+		if ( isset( $is_page[ $type ] ) )
+			return $is_page[ $type ];
 
 		$post_page = (array) get_post_types( array( 'public' => true ) );
 
 		foreach ( $post_page as $screen ) {
 			if ( $type === $screen ) {
-				return $is_page[$type] = true;
+				return $is_page[ $type ] = true;
 				break;
 			}
 		}
 
-		return $is_page[$type] = false;
+		return $is_page[ $type ] = false;
 	}
 
 	/**
@@ -890,7 +872,6 @@
 	 * @param bool $use_cache Set to false to bypass the cache.
 	 *
 	 * @staticvar array $locale
-	 * @staticvar string $get_locale
 	 *
 	 * @since 2.6.0
 	 *
@@ -902,19 +883,14 @@
 			return false;
 
 		if ( true !== $use_cache )
-			return (bool) strpos( get_locale(), $locale );
+			return false !== strpos( get_locale(), $locale );
 
 		static $cache = array();
 
-		if ( isset( $cache[$locale] ) )
-			return $cache[$locale];
+		if ( isset( $cache[ $locale ] ) )
+			return $cache[ $locale ];
 
-		static $get_locale = null;
-
-		if ( ! isset( $get_locale ) )
-			$get_locale = get_locale();
-
-		return $cache[$locale] = false !== strpos( $get_locale, $locale ) ? true : false;
+		return $cache[ $locale ] = false !== strpos( get_locale(), $locale );
 	}
 
 	/**
@@ -921,8 +897,8 @@
 	 * Determines if the post type is compatible with The SEO Framework inpost metabox.
 	 *
 	 * @since 2.3.5
+	 *
 	 * @param string|null $post_type
-	 *
 	 * @return bool True if post type is supported.
 	 */
 	public function post_type_supports_inpost( $post_type = null ) {
@@ -954,13 +930,11 @@
 	 * Doesn't work on admin_init.
 	 *
 	 * @since 2.3.9
-	 *
-	 * @param string $post_type The current post type.
-	 *
 	 * @staticvar string $post_type
 	 * @staticvar bool $supported
 	 * @staticvar array $post_page
 	 *
+	 * @param string $post_type The current post type.
 	 * @return bool true of post type is supported.
 	 */
 	public function post_type_supports_custom_seo( $post_type = '' ) {
@@ -972,8 +946,8 @@
 
 		static $supported = array();
 
-		if ( isset( $supported[$post_type] ) )
-			return $supported[$post_type];
+		if ( isset( $supported[ $post_type ] ) )
+			return $supported[ $post_type ];
 
 		/**
 		 * We now support all posts that allow a title, content editor and excerpt.
@@ -982,9 +956,9 @@
 		 * @since 2.3.5
 		 */
 		if ( post_type_supports( $post_type, 'autodescription-meta' ) || $this->post_type_supports_inpost( $post_type ) )
-			return $supported[$post_type] = true;
+			return $supported[ $post_type ] = true;
 
-		return $supported[$post_type] = false;
+		return $supported[ $post_type ] = false;
 	}
 
 	/**
@@ -1014,8 +988,8 @@
 
 		static $cache = array();
 
-		if ( isset( $cache[$public][$post_type] ) )
-			return $cache[$public][$post_type];
+		if ( isset( $cache[ $public ][ $post_type ] ) )
+			return $cache[ $public ][ $post_type ];
 
 		$object = get_post_type_object( $post_type );
 
@@ -1040,9 +1014,9 @@
 
 		//* No supported post type has been found.
 		if ( empty( $post_type ) )
-			return $cache[$public][$post_type] = false;
+			return $cache[ $public ][ $post_type ] = false;
 
-		return $cache[$public][$post_type] = $post_type;
+		return $cache[ $public ][ $post_type ] = $post_type;
 	}
 
 	/**
@@ -1087,10 +1061,7 @@
 		if ( isset( $fixed ) )
 			return $fixed;
 
-		if ( defined( 'THE_SEO_FRAMEWORK_TITLE_FIX' ) && THE_SEO_FRAMEWORK_TITLE_FIX )
-			return $fixed = true;
-
-		return $fixed = false;
+		return $fixed = defined( 'THE_SEO_FRAMEWORK_TITLE_FIX' ) && THE_SEO_FRAMEWORK_TITLE_FIX;
 	}
 
 	/**
@@ -1101,11 +1072,7 @@
 	 * @return bool True if we can manipulate title.
 	 */
 	public function can_manipulate_title() {
-
-		if ( $this->theme_title_doing_it_right() || $this->theme_title_fix_active() )
-			return true;
-
-		return false;
+		return $this->theme_title_doing_it_right() || $this->theme_title_fix_active();
 	}
 
 	/**
@@ -1123,7 +1090,26 @@
 		if ( isset( $pof ) )
 			return $pof;
 
-		return $pof = 'page' === get_option( 'show_on_front' ) ? true : false;
+		return $pof = 'page' === get_option( 'show_on_front' );
 	}
 
+
+	/**
+	 * Determines whether we can use the new WordPress core term meta functionality.
+	 *
+	 * @since 2.7.0
+	 * @staticvar bool $cache
+	 *
+	 * @return bool True when WordPress is at version 4.4 or higher and has an
+	 *				accordingly upgraded database.
+	 */
+	public function can_get_term_meta() {
+
+		static $cache = null;
+
+		if ( isset( $cache ) )
+			return $cache;
+
+		return $cache = get_option( 'db_version' ) >= 34370 && get_option( 'the_seo_framework_upgraded_db_version' ) >= '2700' && $this->wp_version( '4.4' );
+	}
 }
Index: inc/classes/doingitright.class.php
===================================================================
--- inc/classes/doingitright.class.php	(revision 1475679)
+++ inc/classes/doingitright.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_DoingItRight
  *
@@ -27,6 +29,18 @@
 class AutoDescription_DoingItRight extends AutoDescription_Search {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor.
 	 * Initalizes columns and load post states.
 	 */
@@ -37,7 +51,7 @@
 		add_action( 'current_screen', array( $this, 'post_state' ) );
 
 		//* Ajax handlers for columns.
-		add_action( 'admin_init', array( $this, 'init_columns_ajax' ) );
+		add_action( 'wp_ajax_add-tag', array( $this, 'init_columns_ajax' ), -1 );
 		//* Initialize columns.
 		add_action( 'current_screen', array( $this, 'init_columns' ) );
 
@@ -44,10 +58,8 @@
 	}
 
 	/**
-	 * Add post state on edit.php to the page or post that has been altered
+	 * Add post state on edit.php to the page or post that has been altered.
 	 *
-	 * Applies filters `the_seo_framework_allow_states` : boolean Whether to allow post states output.
-	 *
 	 * @uses $this->add_post_state
 	 *
 	 * @since 2.1.0
@@ -57,6 +69,10 @@
 		//* Only load on singular pages.
 		if ( $this->is_singular() ) {
 
+			/**
+			 * Applies filters `the_seo_framework_allow_states` : boolean Whether to allow post states output.
+			 * @since 2.1.0
+			 */
 			$allow_states = (bool) apply_filters( 'the_seo_framework_allow_states', true );
 
 			if ( $allow_states )
@@ -82,7 +98,7 @@
 			$searchexclude = (bool) $this->get_custom_field( 'exclude_local_search', $post_id );
 
 			if ( $searchexclude )
-				$states[] = __( 'No Search', 'autodescription' );
+				$states[] = esc_html__( 'No Search', 'autodescription' );
 		}
 
 		return $states;
@@ -95,12 +111,15 @@
 	 */
 	public function init_columns_ajax() {
 
-		if ( defined( 'DOING_AJAX' ) && DOING_AJAX ) {
+		/**
+		 * Securely check the referrer, instead of leaving holes everywhere.
+		 */
+		if ( defined( 'DOING_AJAX' ) && DOING_AJAX && check_ajax_referer( 'add-tag', '_wpnonce_add-tag', false ) ) {
 
-			/**
-			 * Securely check the referrer, instead of leaving holes everywhere.
-			 */
-			if ( current_user_can( 'publish_posts' ) && check_ajax_referer( 'add-tag', '_wpnonce_add-tag', false ) )
+			$taxonomy = ! empty( $_POST['taxonomy'] ) ? $_POST['taxonomy'] : 'post_tag';
+			$tax = get_taxonomy( $taxonomy );
+
+			if ( current_user_can( $tax->cap->edit_terms ) )
 				$this->init_columns( '', true );
 		}
 
@@ -120,11 +139,10 @@
 
 		$show_seo_column = (bool) apply_filters( 'the_seo_framework_show_seo_column', true );
 
-		if ( $doing_ajax ) {
+		if ( $doing_ajax )
 			$post_type = isset( $_POST['post_type'] ) ? $_POST['post_type'] : '';
-		} else {
+		else
 			$post_type = isset( $screen->post_type ) ? $screen->post_type : '';
-		}
 
 		if ( $show_seo_column && $this->post_type_supports_custom_seo( $post_type ) ) {
 
@@ -137,7 +155,6 @@
 					add_filter( 'manage_' . $id . '_columns', array( $this, 'add_column' ), 1 );
 					add_action( 'manage_' . $taxonomy . '_custom_column', array( $this, 'seo_bar_ajax' ), 1, 3 );
 				}
-
 			} else {
 
 				$id = isset( $screen->id ) ? $screen->id : '';
@@ -159,10 +176,8 @@
 						add_action( 'manage_posts_custom_column', array( $this, 'seo_bar' ), 1, 3 );
 						add_action( 'manage_pages_custom_column', array( $this, 'seo_bar' ), 1, 3 );
 					}
-
 				}
 			}
-
 		}
 
 	}
@@ -180,7 +195,7 @@
 	 */
 	public function add_column( $columns ) {
 
-		$seocolumn = array( 'ad_seo' => 'SEO' );
+		$seocolumn = array( 'tsf-seo-bar-wrap' => 'SEO' );
 
 		$column_keys = array_keys( $columns );
 
@@ -255,7 +270,7 @@
 			$post_id = $tax_id;
 		}
 
-		if ( 'ad_seo' === $column )
+		if ( 'tsf-seo-bar-wrap' === $column )
 			echo $this->post_status( $post_id, $type, true );
 
 	}
@@ -283,8 +298,8 @@
 			$post_id = $tax_id;
 		}
 
-		if ( 'ad_seo' === $column ) {
-			$context = __( 'Refresh to see the SEO Bar status.', 'autodescription' );
+		if ( 'tsf-seo-bar-wrap' === $column ) {
+			$context = esc_html__( 'Refresh to see the SEO Bar status.', 'autodescription' );
 
 			$ajax_id = $column . $post_id;
 
@@ -309,7 +324,7 @@
 		$classes = $this->get_the_seo_bar_classes();
 
 		$args = array();
-		$args['class'] = $classes[$color];
+		$args['class'] = $classes[ $color ];
 		$args['width'] = $classes['100%'];
 		$args['notice'] = $context;
 		$args['indicator'] = $symbol;
@@ -365,7 +380,7 @@
 					$post_i18n = __( 'Post', 'autodescription' );
 					$is_term = false;
 					$term = false;
-				} else if ( 'page' === $type ) {
+				} elseif ( 'page' === $type ) {
 					$post_i18n = __( 'Page', 'autodescription' );
 					$is_term = false;
 					$term = false;
@@ -380,7 +395,7 @@
 
 			if ( $is_term ) {
 				//* We're on a term or taxonomy. Try fetching names. Default back to "Page".
-				$term = get_term_by( 'id', $post_id, $type, OBJECT );
+				$term = $this->fetch_the_term( $post_id );
 				$post_i18n = $this->get_the_term_name( $term );
 
 				/**
@@ -389,7 +404,7 @@
 				 *
 				 * @since 2.3.1
 				 */
-				if ( $is_term && $this->is_post_type_page( $type ) )
+				if ( $this->is_post_type_page( $type ) )
 					$is_term = false;
 			}
 
@@ -410,7 +425,7 @@
 				return $this->the_seo_bar_page( $args );
 			}
 		} else {
-			$context = __( 'Failed to fetch post ID.', 'autodescription' );
+			$context = esc_attr__( 'Failed to fetch post ID.', 'autodescription' );
 
 			return $this->post_status_special( $context, '!', 'bad' );
 		}
@@ -431,11 +446,12 @@
 	 */
 	protected function wrap_the_seo_bar_block( $args ) {
 
-		$wrap 	= '<span class="ad-sec-wrap ' . $args['width'] . '">'
+		$wrap 	= '<span class="tsf-seo-bar-section-wrap ' . $args['width'] . '">'
 					. '<a onclick="return false;" class="' . $args['class'] . '" aria-label="' . $args['notice'] . '" data-desc="' . $args['notice'] . '">'
 						. $args['indicator']
 					. '</a>'
-				. '</span>';
+				. '</span>'
+				;
 
 		return $wrap;
 	}
@@ -464,17 +480,17 @@
 			$width = $is_term ? ' ' . $classes['100%'] : '';
 			$pill = $this->pill_the_seo_bar() ? ' ' . $classes['pill'] : '';
 
-			$class = 'ad-seo clearfix' . $width . $pill;
+			$class = esc_attr( 'tsf-seo-bar clearfix' . $width . $pill );
 		}
 
 		if ( isset( $ajax_id ) ) {
 			//* Ajax handler.
-			$script = '<script>jQuery("#' . esc_attr( $ajax_id ) . '").on( "hover click", autodescription.statusBarHover );</script>';
+			$script = '<script>jQuery("#' . esc_js( $ajax_id ) . '").on( "hover click", autodescription.statusBarHover );</script>';
 
-			return sprintf( '<span class="%s" id="%s"><span class="ad-bar-wrap">%s</span></span>', $class, $ajax_id, $content ) . $script;
+			return sprintf( '<span class="%s" id="%s"><span class="tsf-seo-bar-inner-wrap">%s</span></span>', $class, esc_attr( $ajax_id ), $content ) . $script;
 		}
 
-		return sprintf( '<span class="%s"><span class="ad-bar-wrap">%s</span></span>', $class, $content );
+		return sprintf( '<span class="%s"><span class="tsf-seo-bar-inner-wrap">%s</span></span>', $class, $content );
 	}
 
 	/**
@@ -485,7 +501,6 @@
 	 * @param array $args {
 	 *	 'is_term' => bool $is_term,
 	 *	 'term' => object $term,
-	 *	 'post_id' => int $post_id,
 	 *	 'post_i18n' => string $post_i18n,
 	 *	 'post_low' => string $post_low,
 	 *	 'type' => string $type,
@@ -494,30 +509,24 @@
 	 */
 	protected function the_seo_bar_term( $args ) {
 
-		$post_id = $args['post_id'];
 		$term = $args['term'];
 		$post = $args['post_i18n'];
 		$is_term = true;
 
-		$noindex = isset( $term->admeta['noindex'] ) && $this->is_checked( $term->admeta['noindex'] ) ? true : false;
+		$data = $this->get_term_data( $term, $term->term_id );
+
+		$noindex = isset( $data['noindex'] ) && $this->is_checked( $data['noindex'] );
 		$redirect = false; // We don't apply redirect on taxonomies (yet)
 
-		$ad_savedflag = isset( $term->admeta['saved_flag'] ) && $this->is_checked( $term->admeta['saved_flag'] ) ? true : false;
-		$flag = $ad_savedflag;
-
-		//* Genesis data fetch
-		if ( false === $noindex && false === $flag && isset( $term->meta['noindex'] ) )
-			$noindex = $this->is_checked( $term->meta['noindex'] ) ? true : false;
-
 		//* Blocked SEO, return simple bar.
 		if ( $redirect || $noindex )
 			return $this->the_seo_bar_blocked( array( 'is_term' => $is_term, 'redirect' => $redirect, 'noindex' => $noindex, 'post_i18n' => $post ) );
 
-		$title_notice		= $this->the_seo_bar_title_notice( $args );
-		$description_notice	= $this->the_seo_bar_description_notice( $args );
-		$index_notice 		= $this->the_seo_bar_index_notice( $args );
-		$follow_notice		= $this->the_seo_bar_follow_notice( $args );
-		$archive_notice		= $this->the_seo_bar_archive_notice( $args );
+		$title_notice       = $this->the_seo_bar_title_notice( $args );
+		$description_notice = $this->the_seo_bar_description_notice( $args );
+		$index_notice       = $this->the_seo_bar_index_notice( $args );
+		$follow_notice      = $this->the_seo_bar_follow_notice( $args );
+		$archive_notice     = $this->the_seo_bar_archive_notice( $args );
 
 		$content = $title_notice . $description_notice . $index_notice . $follow_notice . $archive_notice;
 
@@ -558,12 +567,12 @@
 		if ( $redirect || $noindex )
 			return $this->the_seo_bar_blocked( array( 'is_term' => $is_term, 'redirect' => $redirect, 'noindex' => $noindex, 'post_i18n' => $post ) );
 
-		$title_notice		= $this->the_seo_bar_title_notice( $args );
-		$description_notice	= $this->the_seo_bar_description_notice( $args );
-		$index_notice 		= $this->the_seo_bar_index_notice( $args );
-		$follow_notice		= $this->the_seo_bar_follow_notice( $args );
-		$archive_notice		= $this->the_seo_bar_archive_notice( $args );
-		$redirect_notice	= $this->the_seo_bar_redirect_notice( $args );
+		$title_notice       = $this->the_seo_bar_title_notice( $args );
+		$description_notice = $this->the_seo_bar_description_notice( $args );
+		$index_notice       = $this->the_seo_bar_index_notice( $args );
+		$follow_notice      = $this->the_seo_bar_follow_notice( $args );
+		$archive_notice     = $this->the_seo_bar_archive_notice( $args );
+		$redirect_notice    = $this->the_seo_bar_redirect_notice( $args );
 
 		$content = $title_notice . $description_notice . $index_notice . $follow_notice . $archive_notice . $redirect_notice;
 
@@ -592,13 +601,13 @@
 
 		static $data = array();
 
-		if ( isset( $data[$post_id] ) )
-			return $data[$post_id];
+		if ( isset( $data[ $post_id ] ) )
+			return $data[ $post_id ];
 
 		if ( $args['is_term'] ) {
-			return $data[$post_id] = $this->the_seo_bar_term_data( $args );
+			return $data[ $post_id ] = $this->the_seo_bar_term_data( $args );
 		} else {
-			return $data[$post_id] = $this->the_seo_bar_post_data( $args );
+			return $data[ $post_id ] = $this->the_seo_bar_post_data( $args );
 		}
 	}
 
@@ -621,47 +630,32 @@
 	protected function the_seo_bar_term_data( $args ) {
 
 		$term = $args['term'];
-		$post_id = $args['post_id'];
+		$term_id = $args['post_id'];
 		$taxonomy = $args['type'];
 
-		$flag = isset( $term->admeta['saved_flag'] ) && $this->is_checked( $term->admeta['saved_flag'] ) ? true : false;
+		$data = $this->get_term_data( $term, $term_id );
 
-		$title_custom_field = isset( $term->admeta['doctitle'] ) ? $term->admeta['doctitle'] : '';
-		$description_custom_field = isset( $term->admeta['description'] ) ? $term->admeta['description'] : '';
-		$nofollow = isset( $term->admeta['nofollow'] ) ? $term->admeta['nofollow'] : '';
-		$noarchive = isset( $term->admeta['noarchive'] ) ? $term->admeta['noarchive'] : '';
+		$title_custom_field = isset( $data['doctitle'] ) ? $data['doctitle'] : '';
+		$description_custom_field = isset( $data['description'] ) ? $data['description'] : '';
+		$nofollow = isset( $data['nofollow'] ) ? $data['nofollow'] : '';
+		$noarchive = isset( $data['noarchive'] ) ? $data['noarchive'] : '';
 
-		//* Genesis data fetch
-		if ( false === $flag && isset( $term->meta ) ) {
-			if ( empty( $title_custom_field ) && isset( $term->meta['doctitle'] ) )
-				$title_custom_field = $term->meta['doctitle'];
-
-			if ( empty( $description_custom_field ) && isset( $term->meta['description'] ) )
-				$description_custom_field = $term->meta['description'];
-
-			if ( empty( $nofollow ) && isset( $term->meta['nofollow'] ) )
-				$nofollow = $term->meta['nofollow'];
-
-			if ( empty( $noarchive ) && isset( $term->meta['noarchive'] ) )
-				$noarchive = $term->meta['noarchive'];
-		}
-
 		$title_is_from_custom_field = (bool) $title_custom_field;
 		if ( $title_is_from_custom_field ) {
-			$title = $this->title( '', '', '', array( 'term_id' => $post_id, 'taxonomy' => $taxonomy, 'get_custom_field' => true ) );
+			$title = $this->title( '', '', '', array( 'term_id' => $term_id, 'taxonomy' => $taxonomy, 'get_custom_field' => true ) );
 		} else {
-			$title = $this->title( '', '', '', array( 'term_id' => $post_id, 'taxonomy' => $taxonomy, 'get_custom_field' => false ) );
+			$title = $this->title( '', '', '', array( 'term_id' => $term_id, 'taxonomy' => $taxonomy, 'get_custom_field' => false ) );
 		}
 
 		$description_is_from_custom_field = (bool) $description_custom_field;
 		if ( $description_is_from_custom_field ) {
-			$taxonomy = isset( $term->taxonomy ) && $term->taxonomy ? $term->taxonomy : '';
-			$description_args = $taxonomy ? array( 'id' => $post_id, 'taxonomy' => $term->taxonomy, 'get_custom_field' => true ) : array( 'get_custom_field' => true );
+			$taxonomy = ! empty( $term->taxonomy ) ? $term->taxonomy : '';
+			$description_args = $taxonomy ? array( 'id' => $term_id, 'taxonomy' => $term->taxonomy, 'get_custom_field' => true ) : array( 'get_custom_field' => true );
 
 			$description = $this->generate_description( '', $description_args );
 		} else {
-			$taxonomy = isset( $term->taxonomy ) && $term->taxonomy ? $term->taxonomy : '';
-			$description_args = $taxonomy ? array( 'id' => $post_id, 'taxonomy' => $term->taxonomy, 'get_custom_field' => false ) : array( 'get_custom_field' => false );
+			$taxonomy = ! empty( $term->taxonomy ) ? $term->taxonomy : '';
+			$description_args = $taxonomy ? array( 'id' => $term_id, 'taxonomy' => $term->taxonomy, 'get_custom_field' => false ) : array( 'get_custom_field' => false );
 
 			$description = $this->generate_description( '', $description_args );
 		}
@@ -675,7 +669,7 @@
 			'description' => $description,
 			'description_is_from_custom_field' => $description_is_from_custom_field,
 			'nofollow' => $nofollow,
-			'noarchive' => $noarchive
+			'noarchive' => $noarchive,
 		);
 	}
 
@@ -713,16 +707,18 @@
 		}
 
 		$title_is_from_custom_field = (bool) $title_custom_field;
-		if ( $title_is_from_custom_field )
+		if ( $title_is_from_custom_field ) {
 			$title = $this->title( '', '', '', array( 'term_id' => $post_id, 'page_on_front' => $page_on_front, 'get_custom_field' => true ) );
-		else
+		} else {
 			$title = $this->title( '', '', '', array( 'term_id' => $post_id, 'page_on_front' => $page_on_front, 'get_custom_field' => false ) );
+		}
 
 		$description_is_from_custom_field = (bool) $description_custom_field;
-		if ( $description_is_from_custom_field )
+		if ( $description_is_from_custom_field ) {
 			$description = $this->generate_description( '', array( 'id' => $post_id, 'get_custom_field' => true ) );
-		else
+		} else {
 			$description = $this->generate_description( '', array( 'id' => $post_id, 'get_custom_field' => false ) );
+		}
 
 		$nofollow = $this->is_checked( $nofollow );
 		$noarchive = $this->is_checked( $noarchive );
@@ -749,8 +745,8 @@
 
 		//* Fetch data
 		$data = $this->the_seo_bar_data( $args );
-		$title 						= $data['title'];
-		$title_is_from_custom_field	= $data['title_is_from_custom_field'];
+		$title = $data['title'];
+		$title_is_from_custom_field = $data['title_is_from_custom_field'];
 
 		//* Fetch CSS classes.
 		$classes = $this->get_the_seo_bar_classes();
@@ -758,10 +754,10 @@
 
 		//* Fetch i18n and put in vars
 		$i18n = $this->get_the_seo_bar_i18n();
-		$title_short	= $i18n['title_short'];
-		$generated		= $i18n['generated_short'];
-		$and_i18n		= $i18n['and'];
-		$but_i18n		= $i18n['but'];
+		$title_short = $i18n['title_short'];
+		$generated   = $i18n['generated_short'];
+		$and_i18n    = $i18n['and'];
+		$but_i18n    = $i18n['but'];
 
 		//* Initialize notice.
 		$notice = $i18n['title'];
@@ -799,7 +795,7 @@
 			$but_and = $title_length_warning['but'] ? $but_i18n : $and_i18n;
 
 			/* translators: %s = But or And */
-			$notice .= '<br>' . sprintf( __( '%s the Title contains the Blogname multiple times.', 'autodescription' ), $but_and );
+			$notice .= '<br>' . sprintf( esc_attr__( '%s the Title contains the Blogname multiple times.', 'autodescription' ), $but_and );
 			$class = $classes['bad'];
 		}
 
@@ -900,24 +896,26 @@
 		$okay	= $classes['okay'];
 		$good	= $classes['good'];
 
+		$i18n = $this->get_the_seo_bar_i18n();
+
 		if ( $desc_len < 100 ) {
-			$notice = ' ' . __( 'Length is far too short.', 'autodescription' );
+			$notice = $i18n['length_far_too_short'];
 			$class = $bad;
-		} else if ( $desc_len < 137 ) {
-			$notice = ' ' . __( 'Length is too short.', 'autodescription' );
+		} elseif ( $desc_len < 137 ) {
+			$notice = $i18n['length_too_short'];
 
 			// Don't make it okay if it's already bad.
 			$class = $bad === $class ? $class : $okay;
-		} else if ( $desc_len > 155 && $desc_len < 175 ) {
-			$notice = ' ' . __( 'Length is too long.', 'autodescription' );
+		} elseif ( $desc_len > 155 && $desc_len < 175 ) {
+			$notice = $i18n['length_too_long'];
 
 			// Don't make it okay if it's already bad.
 			$class = $bad === $class ? $class : $okay;
-		} else if ( $desc_len >= 175 ) {
-			$notice = ' ' . __( 'Length is far too long.', 'autodescription' );
+		} elseif ( $desc_len >= 175 ) {
+			$notice = $i18n['length_far_too_long'];
 			$class = $bad;
 		} else {
-			$notice = ' ' . __( 'Length is good.', 'autodescription' );
+			$notice = $i18n['length_good'];
 
 			// Don't make it good if it's already bad or okay.
 			$class = $good !== $class ? $class : $good;
@@ -925,7 +923,7 @@
 
 		return array(
 			'notice' => $notice,
-			'class' => $class
+			'class' => $class,
 		);
 	}
 
@@ -942,79 +940,33 @@
 	protected function get_the_seo_bar_description_words_warning( $description, $class ) {
 
 		$notice = '';
-		$desc_too_many = '';
 
-		//* Convert description's special characters into PHP readable words.
-		$description = htmlentities( $description, ENT_COMPAT, "UTF-8" );
+		$words_too_many = $this->get_word_count( $description );
 
-		//* Because we've converted all characters to XHTML codes, the odd ones should be only numerical.
-		$html_special_chars = '&0123456789;';
+		if ( ! empty( $words_too_many ) ) {
 
-		//* Count the words.
-		$desc_words = str_word_count( strtolower( $description ), 2, $html_special_chars );
-
-		static $bother_me_length = null;
-		/**
-		 * Applies filters 'the_seo_framework_bother_me_desc_length' : int Min Character length to bother you with.
-		 * @since 2.6.0
-		 */
-		if ( is_null( $bother_me_length ) )
-			$bother_me_length = (int) apply_filters( 'the_seo_framework_bother_me_desc_length', 3 );
-
-		if ( is_array( $desc_words ) ) {
-			//* We're going to fetch word based on key, and the last element (as first)
-			$word_keys = array_flip( array_reverse( $desc_words, true ) );
-
-			$desc_word_count = array_count_values( $desc_words );
-
-			//* Parse word counting.
-			if ( is_array( $desc_word_count ) ) {
-				foreach ( $desc_word_count as $desc_word => $desc_word_count ) {
-
-					if ( mb_strlen( html_entity_decode( $desc_word ) ) < $bother_me_length ) {
-						$run = $desc_word_count >= 5 ? true : false;
-					} else {
-						$run = $desc_word_count >= 3 ? true : false;
-					}
-
-					if ( $run ) {
-						//* The encoded word is longer or equal to the bother lenght.
-
-						$word_len = mb_strlen( $desc_word );
-
-						$position = $word_keys[$desc_word];
-						$first_word_original = mb_substr( $description, $position, $word_len );
-
-						//* Found words that are used too frequently.
-						$desc_too_many[] = array( $first_word_original => $desc_word_count );
-					}
-				}
-			}
-		}
-
-		if ( '' !== $desc_too_many && is_array( $desc_too_many ) ) {
-
 			$classes = $this->get_the_seo_bar_classes();
 			$bad = $classes['bad'];
 			$okay = $classes['okay'];
 
-			$words_count = count( $desc_too_many );
+			$words_count = count( $words_too_many );
 			//* Don't make it okay if it's already bad.
 			$class = $bad !== $class && $words_count <= 1 ? $okay : $bad;
 
 			$i = 1;
-			$count = count( $desc_too_many );
-			foreach ( $desc_too_many as $desc_array ) {
+			$count = count( $words_too_many );
+			foreach ( $words_too_many as $desc_array ) {
 				foreach ( $desc_array as $desc_value => $desc_count ) {
 					$notice .= ' ';
 
 					/**
-					 * Don't ucfirst abbrivations.
+					 * Don't ucfirst abbreviations.
 					 * @since 2.4.1
 					 */
 					$desc_value = ctype_upper( $desc_value ) ? $desc_value : ucfirst( $desc_value );
 
-					$notice .= sprintf( __( '%s is used %d times.', 'autodescription' ), '<span>' . $desc_value . '</span>', $desc_count );
+					/* translators: 1: Word, 2: Occurences */
+					$notice .= sprintf( esc_attr__( '%1$s is used %2$d times.', 'autodescription' ), '<span>' . $desc_value . '</span>', $desc_count );
 
 					//* Don't add break at last occurence.
 					$notice .= $i === $count ? '' : '<br>';
@@ -1025,7 +977,7 @@
 
 		return array(
 			'notice' => $notice,
-			'class' => $class
+			'class' => $class,
 		);
 	}
 
@@ -1046,19 +998,19 @@
 		$data = $this->the_seo_bar_data( $args );
 
 		$classes = $this->get_the_seo_bar_classes();
-		$unknown	= $classes['unknown'];
-		$bad		= $classes['bad'];
-		$okay		= $classes['okay'];
-		$good		= $classes['good'];
-		$ad_125		= $classes['12.5%'];
+		$unknown = $classes['unknown'];
+		$bad     = $classes['bad'];
+		$okay    = $classes['okay'];
+		$good    = $classes['good'];
+		$ad_125  = $classes['12.5%'];
 
 		$i18n = $this->get_the_seo_bar_i18n();
-		$index_short	= $i18n['index_short'];
-		$but_i18n		= $i18n['but'];
-		$and_i18n		= $i18n['and'];
-		$ind_notice		= $i18n['index'];
+		$index_short = $i18n['index_short'];
+		$but_i18n    = $i18n['but'];
+		$and_i18n    = $i18n['and'];
+		$ind_notice  = $i18n['index'];
 
-		$ind_notice .= ' ' . sprintf( __( "%s is being indexed.", 'autodescription' ), $post_i18n );
+		$ind_notice .= ' ' . sprintf( esc_attr__( '%s is being indexed.', 'autodescription' ), $post_i18n );
 		$ind_class = $good;
 
 		/**
@@ -1067,7 +1019,7 @@
 		 * @since 2.2.2
 		 */
 		if ( $this->is_option_checked( 'site_noindex' ) ) {
-			$ind_notice .= '<br>' . __( "But you've disabled indexing for the whole site.", 'autodescription' );
+			$ind_notice .= '<br>' . esc_attr__( "But you've disabled indexing for the whole site.", 'autodescription' );
 			$ind_class = $unknown;
 			$ind_but = true;
 		}
@@ -1091,7 +1043,7 @@
 				$label = $this->get_the_term_name( $term, false );
 
 				/* translators: 1: But or And, 2: Current taxonomy term plural label */
-				$ind_notice .= '<br>' . sprintf( __( '%1$s indexing for %2$s have been disabled.', 'autodescription' ), $but_and, $label );
+				$ind_notice .= '<br>' . sprintf( esc_attr__( '%1$s indexing for %2$s have been disabled.', 'autodescription' ), $but_and, $label );
 				$ind_class = $unknown;
 				$ind_but = true;
 			}
@@ -1101,7 +1053,7 @@
 		if ( false === $this->is_blog_public() ) {
 			$but_and = isset( $ind_but ) ? $and_i18n : $but_i18n;
 			/* translators: %s = But or And */
-			$ind_notice .= '<br>' . sprintf( __( "%s the blog isn't set to public. This means WordPress discourages indexing.", 'autodescription' ), $but_and );
+			$ind_notice .= '<br>' . sprintf( esc_attr__( "%s the blog isn't set to public. This means WordPress discourages indexing.", 'autodescription' ), $but_and );
 			$ind_class = $bad;
 			$ind_but = true;
 		}
@@ -1115,7 +1067,7 @@
 			$but_and = isset( $ind_but ) ? $and_i18n : $but_i18n;
 
 			/* translators: %s = But or And */
-			$ind_notice .= '<br>' . sprintf( __( "%s there are no posts in this term; therefore, indexing has been disabled.", 'autodescription' ), $but_and );
+			$ind_notice .= '<br>' . sprintf( esc_attr__( '%s there are no posts in this term; therefore, indexing has been disabled.', 'autodescription' ), $but_and );
 			//* Don't make it unknown if it's not good.
 			$ind_class = $ind_class !== $good ? $ind_class : $unknown;
 		}
@@ -1122,9 +1074,9 @@
 
 		$ind_wrap_args = array(
 			'indicator' => $index_short,
-			'notice' => $ind_notice,
-			'width' => $ad_125,
-			'class' => $ind_class,
+			'notice'    => $ind_notice,
+			'width'     => $ad_125,
+			'class'     => $ind_class,
 		);
 
 		$index_notice = $this->wrap_the_seo_bar_block( $ind_wrap_args );
@@ -1154,13 +1106,13 @@
 		if ( $taxonomy ) {
 			static $cache = array();
 
-			if ( isset( $cache[$type][$taxonomy] ) )
-				return $cache[$type][$taxonomy];
+			if ( isset( $cache[ $type ] ) )
+				return $cache[ $type ];
 
 			if ( $this->is_option_checked( $taxonomy . '_' . $type ) )
-				return $cache[$type][$taxonomy] = true;
+				return $cache[ $type ] = true;
 
-			return $cache[$type][$taxonomy] = false;
+			return $cache[ $type ] = false;
 		}
 
 		return false;
@@ -1186,26 +1138,26 @@
 		$nofollow = $data['nofollow'];
 
 		$classes = $this->get_the_seo_bar_classes();
-		$unknown	= $classes['unknown'];
-		$bad		= $classes['bad'];
-		$okay		= $classes['okay'];
-		$good		= $classes['good'];
-		$ad_125		= $classes['12.5%'];
+		$unknown = $classes['unknown'];
+		$bad     = $classes['bad'];
+		$okay    = $classes['okay'];
+		$good    = $classes['good'];
+		$ad_125  = $classes['12.5%'];
 
 		$i18n = $this->get_the_seo_bar_i18n();
-		$follow_i18n	= $i18n['follow'];
-		$but_i18n		= $i18n['but'];
-		$and_i18n		= $i18n['and'];
-		$follow_short	= $i18n['follow_short'];
+		$follow_i18n  = $i18n['follow'];
+		$but_i18n     = $i18n['but'];
+		$and_i18n     = $i18n['and'];
+		$follow_short = $i18n['follow_short'];
 
 		if ( $nofollow ) {
-			$fol_notice = $follow_i18n . ' ' . sprintf( __( "%s links aren't being followed.", 'autodescription' ), $post_i18n );
+			$fol_notice = $follow_i18n . ' ' . sprintf( esc_attr__( "%s links aren't being followed.", 'autodescription' ), $post_i18n );
 			$fol_class = $unknown;
 			$fol_but = true;
 
 			$followed = false;
 		} else {
-			$fol_notice = $follow_i18n . ' ' . sprintf( __( '%s links are being followed.', 'autodescription' ), $post_i18n );
+			$fol_notice = $follow_i18n . ' ' . sprintf( esc_attr__( '%s links are being followed.', 'autodescription' ), $post_i18n );
 			$fol_class = $good;
 		}
 
@@ -1217,7 +1169,7 @@
 		if ( $this->is_option_checked( 'site_nofollow' ) ) {
 			$but_and = isset( $fol_but ) ? $and_i18n : $but_i18n;
 			/* translators: %s = But or And */
-			$fol_notice .= '<br>' . sprintf( __( "%s you've disabled the following of links for the whole site.", 'autodescription' ), $but_and );
+			$fol_notice .= '<br>' . sprintf( esc_attr__( "%s you've disabled the following of links for the whole site.", 'autodescription' ), $but_and );
 			$fol_class = $unknown;
 			$fol_but = true;
 
@@ -1243,7 +1195,7 @@
 				$label = $this->get_the_term_name( $term, false );
 
 				/* translators: 1: But or And, 2: Current taxonomy term plural label */
-				$fol_notice .= '<br>' . sprintf( __( '%1$s following for %2$s have been disabled.', 'autodescription' ), $but_and, $label );
+				$fol_notice .= '<br>' . sprintf( esc_attr__( '%1$s following for %2$s have been disabled.', 'autodescription' ), $but_and, $label );
 				$fol_class = $unknown;
 
 				$followed = false;
@@ -1255,7 +1207,7 @@
 			$but_and = $followed || ! isset( $fol_but ) ? $and_i18n : $but_i18n;
 
 			/* translators: %s = But or And */
-			$fol_notice .= '<br>' . sprintf( __( "%s the blog isn't set to public. This means WordPress allows the links to be followed regardless.", 'autodescription' ), $but_and );
+			$fol_notice .= '<br>' . sprintf( esc_attr__( "%s the blog isn't set to public. This means WordPress allows the links to be followed regardless.", 'autodescription' ), $but_and );
 			$fol_class = $followed ? $fol_class : $okay;
 			$fol_but = true;
 
@@ -1264,9 +1216,9 @@
 
 		$fol_wrap_args = array(
 			'indicator' => $follow_short,
-			'notice' => $fol_notice,
-			'width' => $ad_125,
-			'class' => $fol_class,
+			'notice'    => $fol_notice,
+			'width'     => $ad_125,
+			'class'     => $fol_class,
 		);
 
 		$follow_notice = $this->wrap_the_seo_bar_block( $fol_wrap_args );
@@ -1294,25 +1246,25 @@
 		$noarchive	= $data['noarchive'];
 
 		$classes = $this->get_the_seo_bar_classes();
-		$unknown	= $classes['unknown'];
-		$bad		= $classes['bad'];
-		$okay		= $classes['okay'];
-		$good		= $classes['good'];
-		$ad_125		= $classes['12.5%'];
+		$unknown = $classes['unknown'];
+		$bad     = $classes['bad'];
+		$okay    = $classes['okay'];
+		$good    = $classes['good'];
+		$ad_125  = $classes['12.5%'];
 
 		$i18n = $this->get_the_seo_bar_i18n();
-		$archive_i18n	= $i18n['archive'];
-		$but_i18n		= $i18n['but'];
-		$and_i18n		= $i18n['and'];
-		$archive_short	= $i18n['archive_short'];
+		$archive_i18n  = $i18n['archive'];
+		$but_i18n      = $i18n['but'];
+		$and_i18n      = $i18n['and'];
+		$archive_short = $i18n['archive_short'];
 
 		if ( $noarchive ) {
-			$arc_notice = $archive_i18n . ' ' . sprintf( __( "Search Engine aren't allowed to archive this %s.", 'autodescription' ), $post_low );
+			$arc_notice = $archive_i18n . ' ' . sprintf( esc_attr__( "Search Engine aren't allowed to archive this %s.", 'autodescription' ), $post_low );
 			$arc_class = $unknown;
 			$archived = false;
 			$arc_but = true;
 		} else {
-			$arc_notice = $archive_i18n . ' ' . sprintf( __( 'Search Engine are allowed to archive this %s.', 'autodescription' ), $post_low );
+			$arc_notice = $archive_i18n . ' ' . sprintf( esc_attr__( 'Search Engine are allowed to archive this %s.', 'autodescription' ), $post_low );
 			$arc_class = $good;
 		}
 
@@ -1324,7 +1276,7 @@
 		if ( $this->is_option_checked( 'site_noarchive' ) ) {
 			$but_and = isset( $arc_but ) ? $and_i18n : $but_i18n;
 
-			$arc_notice .= '<br>' . sprintf( __( "But you've disabled archiving for the whole site.", 'autodescription' ), $but_and );
+			$arc_notice .= '<br>' . sprintf( esc_attr__( "But you've disabled archiving for the whole site.", 'autodescription' ), $but_and );
 			$arc_class = $unknown;
 			$arc_but = true;
 
@@ -1350,7 +1302,7 @@
 				$label = $this->get_the_term_name( $term, false );
 
 				/* translators: 1: But or And, 2: Current taxonomy term plural label */
-				$arc_notice .= '<br>' . sprintf( __( '%1$s archiving for %2$s have been disabled.', 'autodescription' ), $but_and, $label );
+				$arc_notice .= '<br>' . sprintf( esc_attr__( '%1$s archiving for %2$s have been disabled.', 'autodescription' ), $but_and, $label );
 				$arc_class = $unknown;
 				$arc_but = true;
 
@@ -1363,7 +1315,7 @@
 			$but_and = $archived || ! isset( $arc_but ) ? $and_i18n : $but_i18n;
 
 			/* translators: %s = But or And */
-			$arc_notice .= '<br>' . sprintf( __( "%s the blog isn't set to public. This means WordPress allows the blog to be archived regardless.", 'autodescription' ), $but_and );
+			$arc_notice .= '<br>' . sprintf( esc_attr__( "%s the blog isn't set to public. This means WordPress allows the blog to be archived regardless.", 'autodescription' ), $but_and );
 			$arc_but = true;
 
 			$arc_class = $archived ? $arc_class : $okay;
@@ -1409,7 +1361,7 @@
 			$redirect_i18n = $i18n['redirect'];
 			$redirect_short = $i18n['redirect_short'];
 
-			$red_notice = $redirect_i18n . ' ' . sprintf( __( "%s isn't being redirected.", 'autodescription' ), $post );
+			$red_notice = $redirect_i18n . ' ' . sprintf( esc_attr__( "%s isn't being redirected.", 'autodescription' ), $post );
 			$red_class = $classes['good'];
 
 			$red_wrap_args = array(
@@ -1451,10 +1403,10 @@
 		if ( $redirect && $noindex ) {
 			//* Redirect and noindex found, why bother showing SEO info?
 
-			$red_notice = $i18n['redirect'] . ' ' . sprintf( __( "%s is being redirected. This means no SEO values have to be set.", 'autodescription' ), $post );
+			$red_notice = $i18n['redirect'] . ' ' . sprintf( esc_attr__( '%s is being redirected. This means no SEO values have to be set.', 'autodescription' ), $post );
 			$red_class = $classes['unknown'];
 
-			$noi_notice = $i18n['index'] . ' ' . sprintf( __( "%s is not being indexed. This means no SEO values have to be set.", 'autodescription' ), $post );
+			$noi_notice = $i18n['index'] . ' ' . sprintf( esc_attr__( '%s is not being indexed. This means no SEO values have to be set.', 'autodescription' ), $post );
 			$noi_class = $classes['unknown'];
 
 			$red_wrap_args = array(
@@ -1477,10 +1429,10 @@
 			$content = $redirect_notice . $noindex_notice;
 
 			return $this->get_the_seo_bar_wrap( $content, $is_term );
-		} else if ( $redirect && false === $noindex ) {
+		} elseif ( $redirect && false === $noindex ) {
 			//* Redirect found, why bother showing SEO info?
 
-			$red_notice = $i18n['redirect'] . ' ' . sprintf( __( "%s is being redirected. This means no SEO values have to be set.", 'autodescription' ), $post );
+			$red_notice = $i18n['redirect'] . ' ' . sprintf( esc_attr__( '%s is being redirected. This means no SEO values have to be set.', 'autodescription' ), $post );
 			$red_class = $classes['unknown'];
 
 			$red_wrap_args = array(
@@ -1493,10 +1445,10 @@
 			$redirect_notice = $this->wrap_the_seo_bar_block( $red_wrap_args );
 
 			return $this->get_the_seo_bar_wrap( $redirect_notice, $is_term );
-		} else if ( $noindex && false === $redirect ) {
+		} elseif ( $noindex && false === $redirect ) {
 			//* Noindex found, why bother showing SEO info?
 
-			$noi_notice = $i18n['index'] . ' ' . sprintf( __( "%s is not being indexed. This means no SEO values have to be set.", 'autodescription' ), $post );
+			$noi_notice = $i18n['index'] . ' ' . sprintf( esc_attr__( '%s is not being indexed. This means no SEO values have to be set.', 'autodescription' ), $post );
 			$noi_class = $classes['unknown'];
 
 			$noi_wrap_args = array(
@@ -1530,26 +1482,28 @@
 	protected function get_the_seo_bar_title_length_warning( $tit_len, $class ) {
 
 		$classes = $this->get_the_seo_bar_classes();
-		$bad	= $classes['bad'];
-		$okay	= $classes['okay'];
-		$good	= $classes['good'];
+		$bad  = $classes['bad'];
+		$okay = $classes['okay'];
+		$good = $classes['good'];
 
 		$but = false;
 
+		$i18n = $this->get_the_seo_bar_i18n();
+
 		if ( $tit_len < 25 ) {
-			$notice = ' ' . __( 'Length is far too short.', 'autodescription' );
+			$notice = $i18n['length_far_too_short'];
 			$class = $bad;
-		} else if ( $tit_len < 42 ) {
-			$notice = ' ' . __( 'Length is too short.', 'autodescription' );
+		} elseif ( $tit_len < 42 ) {
+			$notice = $i18n['length_too_short'];
 			$class = $okay;
-		} else if ( $tit_len > 55 && $tit_len < 75 ) {
-			$notice = ' ' . __( 'Length is too long.', 'autodescription' );
+		} elseif ( $tit_len > 55 && $tit_len < 75 ) {
+			$notice = $i18n['length_too_long'];
 			$class = $okay;
-		} else if ( $tit_len >= 75 ) {
-			$notice = ' ' . __( 'Length is far too long.', 'autodescription' );
+		} elseif ( $tit_len >= 75 ) {
+			$notice = $i18n['length_far_too_long'];
 			$class = $bad;
 		} else {
-			$notice = ' ' . __( 'Length is good.', 'autodescription' );
+			$notice = $i18n['length_good'];
 			$class = $good;
 			$but = true;
 		}
@@ -1557,7 +1511,7 @@
 		return array(
 			'notice' => $notice,
 			'class' => $class,
-			'but' => $but
+			'but' => $but,
 		);
 	}
 
@@ -1570,25 +1524,25 @@
 	 */
 	public function get_the_seo_bar_classes() {
 		return array(
-			'bad' 		=> 'ad-seo-bad',
-			'okay' 		=> 'ad-seo-okay',
-			'good' 		=> 'ad-seo-good',
-			'unknown' 	=> 'ad-seo-unknown',
+			'bad' 		=> 'tsf-seo-bar-bad',
+			'okay' 		=> 'tsf-seo-bar-okay',
+			'good' 		=> 'tsf-seo-bar-good',
+			'unknown' 	=> 'tsf-seo-bar-unknown',
 
 			'pill' => 'pill',
 
-			'100%' 	=> 'ad-100',
-			'60%' 	=> 'ad-60',
-			'50%' 	=> 'ad-50',
-			'40%' 	=> 'ad-40',
-			'33%' 	=> 'ad-33',
-			'25%' 	=> 'ad-25',
-			'25%' 	=> 'ad-25',
-			'20%' 	=> 'ad-20',
-			'16%' 	=> 'ad-16',
-			'12.5%' => 'ad-12-5',
+			'100%' 	=> 'tsf-100',
+			'60%' 	=> 'tsf-60',
+			'50%' 	=> 'tsf-50',
+			'40%' 	=> 'tsf-40',
+			'33%' 	=> 'tsf-33',
+			'25%' 	=> 'tsf-25',
+			'25%' 	=> 'tsf-25',
+			'20%' 	=> 'tsf-20',
+			'16%' 	=> 'tsf-16',
+			'12.5%' => 'tsf-12-5',
 			'11%' 	=> 'ad-11',
-			'10%' 	=> 'ad-10',
+			'10%' 	=> 'tsf-10',
 		);
 	}
 
@@ -1608,25 +1562,31 @@
 			return $i18n;
 
 		return $i18n = array(
-			'title'			=> __( 'Title:', 'autodescription' ),
-			'description' 	=> __( 'Description:', 'autodescription' ),
-			'index'			=> __( 'Index:', 'autodescription' ),
-			'follow'		=> __( 'Follow:', 'autodescription' ),
-			'archive'		=> __( 'Archive:', 'autodescription' ),
-			'redirect'		=> __( 'Redirect:', 'autodescription' ),
+			'title'			=> esc_attr__( 'Title:', 'autodescription' ),
+			'description' 	=> esc_attr__( 'Description:', 'autodescription' ),
+			'index'			=> esc_attr__( 'Index:', 'autodescription' ),
+			'follow'		=> esc_attr__( 'Follow:', 'autodescription' ),
+			'archive'		=> esc_attr__( 'Archive:', 'autodescription' ),
+			'redirect'		=> esc_attr__( 'Redirect:', 'autodescription' ),
 
-			'generated' => __( 'Generated: Automatically generated.', 'autodescription'),
+			'generated' => esc_attr__( 'Generated: Automatically generated.', 'autodescription' ),
 
-			'generated_short'	=> _x( 'G', 'Generated', 'autodescription' ),
-			'title_short'		=> _x( 'T', 'Title', 'autodescription' ),
-			'description_short'	=> _x( 'D', 'Description', 'autodescription' ),
-			'index_short'		=> _x( 'I', 'no-Index', 'autodescription' ),
-			'follow_short'		=> _x( 'F', 'no-Follow', 'autodescription' ),
-			'archive_short'		=> _x( 'A', 'no-Archive', 'autodescription' ),
-			'redirect_short'	=> _x( 'R', 'Redirect', 'autodescription' ),
+			'generated_short'	=> esc_html_x( 'G', 'Generated', 'autodescription' ),
+			'title_short'		=> esc_html_x( 'T', 'Title', 'autodescription' ),
+			'description_short'	=> esc_html_x( 'D', 'Description', 'autodescription' ),
+			'index_short'		=> esc_html_x( 'I', 'no-Index', 'autodescription' ),
+			'follow_short'		=> esc_html_x( 'F', 'no-Follow', 'autodescription' ),
+			'archive_short'		=> esc_html_x( 'A', 'no-Archive', 'autodescription' ),
+			'redirect_short'	=> esc_html_x( 'R', 'Redirect', 'autodescription' ),
 
-			'but' => _x( 'But', 'But there are...', 'autodescription' ),
-			'and' => _x( 'And', 'And there are...', 'autodescription' ),
+			'but' => esc_attr_x( 'But', 'But there are...', 'autodescription' ),
+			'and' => esc_attr_x( 'And', 'And there are...', 'autodescription' ),
+
+			'length_far_too_short'	=> ' ' . esc_attr__( 'Length is far too short.', 'autodescription' ),
+			'length_too_short'		=> ' ' . esc_attr__( 'Length is too short.', 'autodescription' ),
+			'length_too_long'		=> ' ' . esc_attr__( 'Length is too long.', 'autodescription' ),
+			'length_far_too_long'	=> ' ' . esc_attr__( 'Length is far too long.', 'autodescription' ),
+			'length_good'			=> ' ' . esc_attr__( 'Length is good.', 'autodescription' ),
 		);
 	}
 
@@ -1647,10 +1607,6 @@
 		if ( isset( $cache ) )
 			return $cache;
 
-		//* TODO add option.
-		$filter = (bool) apply_filters( 'the_seo_framework_seo_bar_pill', false );
-
-		return $cache = $filter ? true : false;
+		return $cache = (bool) apply_filters( 'the_seo_framework_seo_bar_pill', false );
 	}
-
 }
Index: inc/classes/feed.class.php
===================================================================
--- inc/classes/feed.class.php	(revision 1475679)
+++ inc/classes/feed.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Feed
  *
@@ -27,6 +29,18 @@
 class AutoDescription_Feed extends AutoDescription_Transients {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor and run functions.
 	 */
 	public function __construct() {
@@ -133,10 +147,8 @@
 				$source_i18n = (string) apply_filters( 'the_seo_framework_feed_source_link_text', _x( 'Source', 'The content source', 'autodescription' ) );
 				$content .= "\r\n" . '<p><a href="' . $permalink . '" rel="external nofollow">' . $source_i18n . '</a></p>';
 			}
-
 		}
 
 		return $content;
 	}
-
 }
Index: inc/classes/generate-description.class.php
===================================================================
--- inc/classes/generate-description.class.php	(revision 1475679)
+++ inc/classes/generate-description.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Generate_Description
  *
@@ -35,6 +37,18 @@
 	protected $using_manual_excerpt = false;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, loads parent constructor.
 	 */
 	public function __construct() {
@@ -171,7 +185,7 @@
 		$default_args = $this->parse_description_args( '', '', true );
 
 		if ( is_array( $args ) ) {
-			 if ( empty( $args ) ) {
+			if ( empty( $args ) ) {
 				$args = $default_args;
 			} else {
 				$args = $this->parse_description_args( $args, $default_args );
@@ -178,7 +192,7 @@
 			}
 		} else {
 			//* Old style parameters are used. Doing it wrong.
-			$this->_doing_it_wrong( __CLASS__ . '::' . __FUNCTION__, 'Use $args = array() for parameters.', '2.5.0' );
+			$this->_doing_it_wrong( __METHOD__, 'Use $args = array() for parameters.', '2.5.0' );
 			$args = $default_args;
 		}
 
@@ -196,7 +210,7 @@
 	 * 		@param bool $is_home We're generating for the home page.
 	 * }
 	 * @param bool $escape Escape the output if true.
-	 * @return string|mixed The description, might be unsafe for html output.
+	 * @return string|mixed The description.
 	 */
 	public function description_from_custom_field( $args = array(), $escape = true ) {
 
@@ -210,13 +224,14 @@
 		$description = $this->get_custom_homepage_description( $args );
 
 		if ( empty( $description ) ) {
-			if ( $this->is_archive() )
+			if ( $this->is_archive() ) {
 				$description = $this->get_custom_archive_description( $args );
-			else
+			} else {
 				$description = $this->get_custom_singular_description( $args['id'] );
+			}
 		}
 
-		if ( $escape && $description )
+		if ( $escape )
 			$description = $this->escape_description( $description );
 
 		return $description;
@@ -284,28 +299,12 @@
 			if ( $this->is_category() || $this->is_tag() || $this->is_tax() ) {
 
 				$term = $this->fetch_the_term( $args['id'] );
+				$data = $this->get_term_data( $term, $args['id'] );
 
-				if ( isset( $term->admeta['description'] ) ) {
-					if ( $this->is_tax() )
-						$description = empty( $term->admeta['description'] ) ? $description : wp_kses_stripslashes( wp_kses_decode_entities( $term->admeta['description'] ) );
-					else
-						$description = empty( $term->admeta['description'] ) ? $description : $term->admeta['description'];
-				}
-
-				$flag = isset( $term->admeta['saved_flag'] ) ? $this->is_checked( $term->admeta['saved_flag'] ) : false;
-
-				if ( false === $flag && empty( $description ) && isset( $term->meta['description'] ) )
-					$description = empty( $term->meta['description'] ) ? $description : $term->meta['description'];
+				$description = empty( $data['description'] ) ? $description : $data['description'];
 			}
-
-			/**
-			 * @TODO add filter.
-			 * @priority medium 2.7.0
-			 */
-			// if ( $this->is_author() ) {}
 		}
 
-
 		return $description;
 	}
 
@@ -326,7 +325,7 @@
 	 */
 	public function generate_description_from_id( $args = array(), $escape = true ) {
 
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, true, $debug_key = microtime(true), get_defined_vars() );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, true, $debug_key = microtime( true ), get_defined_vars() );
 
 		/**
 		 * Applies filters bool 'the_seo_framework_enable_auto_description' : Enable or disable the description.
@@ -342,7 +341,7 @@
 		if ( $escape )
 			$description = $this->escape_description( $description );
 
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, false, $debug_key, array( 'description' => $description, 'transient_key' => $this->auto_description_transient ) );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, false, $debug_key, array( 'description' => $description, 'transient_key' => $this->auto_description_transient ) );
 
 		return (string) $description;
 	}
@@ -373,20 +372,26 @@
 
 		//* Home Page description
 		if ( $args['is_home'] || $this->is_front_page() || $this->is_static_frontpage( $args['id'] ) )
-			return $this->generate_home_page_description( $args['get_custom_field'] );
+			return $this->generate_home_page_description( $args['get_custom_field'], $escape );
 
 		$term = $this->fetch_the_term( $args['id'] );
 
+		$title = '';
+		$on = '';
+		$blogname = '';
+		$sep = '';
+
 		//* Whether the post ID has a manual excerpt.
-		if ( empty( $term ) && has_excerpt( $args['id'] ) )
+		if ( empty( $term ) && has_excerpt( $args['id'] ) ) {
 			$this->using_manual_excerpt = true;
+		} else {
+			$title_on_blogname = $this->generate_description_additions( $args['id'], $term, false );
+			$title = $title_on_blogname['title'];
+			$on = $title_on_blogname['on'];
+			$blogname = $title_on_blogname['blogname'];
+			$sep = $title_on_blogname['sep'];
+		}
 
-		$title_on_blogname = $this->generate_description_additions( $args['id'], $term, false );
-		$title = $title_on_blogname['title'];
-		$on = $title_on_blogname['on'];
-		$blogname = $title_on_blogname['blogname'];
-		$sep = $title_on_blogname['sep'];
-
 		/**
 		 * Setup transient.
 		 */
@@ -407,7 +412,7 @@
 			$additions = trim( $title . " $on " . $blogname );
 			//* If there are additions, add a trailing space.
 			if ( $additions )
-				$additions .= " ";
+				$additions .= ' ';
 
 			$max_char_length_normal = 155 - mb_strlen( html_entity_decode( $additions ) );
 			$max_char_length_social = 200;
@@ -419,7 +424,7 @@
 			//* Put in array to be accessed later.
 			$excerpt = array(
 				'normal' => $excerpt_normal,
-				'social' => $excerpt_social
+				'social' => $excerpt_social,
 			);
 
 			/**
@@ -448,7 +453,6 @@
 
 			if ( empty( $excerpt['normal'] ) ) {
 				//* Fetch additions ignoring options.
-
 				$title_on_blogname = $this->generate_description_additions( $args['id'], $term, true );
 				$title = $title_on_blogname['title'];
 				$on = $title_on_blogname['on'];
@@ -457,11 +461,11 @@
 			}
 
 			/* translators: 1: Title, 2: on, 3: Blogname */
-			$title_on_blogname = trim( sprintf( __( '%1$s %2$s %3$s', 'autodescription' ), $title, $on, $blogname ) );
+			$title_on_blogname = trim( sprintf( _x( '%1$s %2$s %3$s', '1: Title, 2: on, 3: Blogname', 'autodescription' ), $title, $on, $blogname ) );
 
 			if ( $excerpt['normal'] ) {
-				/* translators: 1: Title on Blogname, 2: Separator, 3: Excerpt */
-				$description = sprintf( __( '%1$s %2$s %3$s', 'autodescription' ), $title_on_blogname, $sep, $excerpt['normal'] );
+				/* translators: 1: Title, 2: Separator, 3: Excerpt */
+				$description = sprintf( _x( '%1$s %2$s %3$s', '1: Title, 2: Separator, 3: Excerpt', 'autodescription' ), $title_on_blogname, $sep, $excerpt['normal'] );
 			} else {
 				//* We still add the additions when no excerpt has been found.
 				// i.e. home page or empty/shortcode filled page.
@@ -481,9 +485,10 @@
 	 * @since 2.6.0
 	 *
 	 * @param bool $custom_field whether to check the Custom Field.
+	 * @param bool $escape Whether to escape the output.
 	 * @return string The description.
 	 */
-	public function generate_home_page_description( $custom_field = true ) {
+	public function generate_home_page_description( $custom_field = true, $escape = true ) {
 
 		$id = $this->get_the_front_page_ID();
 
@@ -494,8 +499,14 @@
 		 */
 		if ( $custom_field ) {
 			$description = $this->get_custom_homepage_description( array( 'is_home' => true ) );
-			if ( $description )
+
+			if ( $description ) {
+
+				if ( $escape )
+					$description = $this->escape_description( $description );
+
 				return $description;
+			}
 		}
 
 		$title_on_blogname = $this->generate_description_additions( $id, '', true );
@@ -504,6 +515,12 @@
 		$on = $title_on_blogname['on'];
 		$blogname = $title_on_blogname['blogname'];
 
+		if ( $escape ) {
+			$title = $this->escape_description( $title );
+			$on = $this->escape_description( $on );
+			$blogname = $this->escape_description( $blogname );
+		}
+
 		return $description = sprintf( '%s %s %s', $title, $on, $blogname );
 	}
 
@@ -511,19 +528,15 @@
 	 * Determines whether to add description additions. (╯°□°）╯︵ ┻━┻
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
+	 * @since 2.7.0 Removed cache.
+	 *              Whether an excerpt is available is no longer part of this check.
 	 *
 	 * @param int $id The current page or post ID.
-	 * @param object|emptystring $term The current Term.
+	 * @param object|string $term The current Term.
 	 * @return bool Whether to add description additions.
 	 */
 	public function add_description_additions( $id = '', $term = '' ) {
 
-		static $cache = null;
-
-		if ( isset( $cache ) )
-			return $cache;
-
 		/**
 		 * Applies filters the_seo_framework_add_description_additions : {
 		 *		@param bool true to add prefix.
@@ -530,14 +543,12 @@
 		 * 		@param int $id The Term object ID or The Page ID.
 		 * 		@param object $term The Term object.
 		 *	}
-		 *
 		 * @since 2.6.0
 		 */
-		$filter = (bool) apply_filters( 'the_seo_framework_add_description_additions', true, $id, $term );
-		$option = (bool) $this->get_option( 'description_additions' );
-		$excerpt = ! $this->using_manual_excerpt;
+		$filter = apply_filters( 'the_seo_framework_add_description_additions', true, $id, $term );
+		$option = $this->get_option( 'description_additions' );
 
-		return $cache = $option && $filter && $excerpt ? true : false;
+		return $option && $filter;
 	}
 
 	/**
@@ -547,7 +558,7 @@
 	 * @since 2.3.9
 	 * @staticvar string $sep
 	 *
-	 * @return string The Separator
+	 * @return string The Separator, unescaped.
 	 */
 	public function get_description_separator() {
 
@@ -556,7 +567,7 @@
 		if ( isset( $sep ) )
 			return $sep;
 
-		return $sep = (string) apply_filters( 'the_seo_framework_description_separator', $this->get_separator( 'description' ) );
+		return $sep = (string) apply_filters( 'the_seo_framework_description_separator', $this->get_separator( 'description', false ) );
 	}
 
 	/**
@@ -583,8 +594,8 @@
 
 		if ( $ignore || $this->add_description_additions( $id, $term ) ) {
 
-			if ( ! isset( $title[$id] ) )
-				$title[$id] = $this->generate_description_title( $id, $term, $ignore );
+			if ( ! isset( $title[ $id ] ) )
+				$title[ $id ] = $this->generate_description_title( $id, $term, $ignore );
 
 			if ( $ignore || $this->is_option_checked( 'description_blogname' ) ) {
 
@@ -604,7 +615,7 @@
 			//* Already cached.
 			$sep = $this->get_description_separator();
 		} else {
-			$title[$id] = '';
+			$title[ $id ] = '';
 			$on = '';
 			$blogname = '';
 			$sep = '';
@@ -611,7 +622,7 @@
 		}
 
 		return array(
-			'title' => $title[$id],
+			'title' => $title[ $id ],
 			'on' => $on,
 			'blogname' => $blogname,
 			'sep' => $sep,
@@ -655,14 +666,16 @@
 				 */
 				/* translators: Front-end output. */
 				$title = __( 'Latest posts:', 'autodescription' ) . ' ' . $title;
-			} else if ( $term && is_object( $term ) ) {
+			} elseif ( $term && isset( $term->term_id ) ) {
 				//* We're on a taxonomy now.
 
-				if ( isset( $term->admeta['doctitle'] ) && $term->admeta['doctitle'] ) {
-					$title = $term->admeta['doctitle'];
-				} else if ( isset( $term->name ) && $term->name ) {
+				$data = $this->get_term_data( $term, $term->term_id );
+
+				if ( ! empty( $data['doctitle'] ) ) {
+					$title = $data['doctitle'];
+				} elseif ( ! empty( $term->name ) ) {
 					$title = $term->name;
-				} else if ( isset( $term->slug ) && $term->slug ) {
+				} elseif ( ! empty( $term->slug ) ) {
 					$title = $term->slug;
 				}
 			} else {
@@ -701,24 +714,24 @@
 		$term_id = isset( $term->term_id ) ? $term->term_id : false;
 
 		//* Put excerpt in cache.
-		if ( ! isset( $excerpt_cache[$page_id][$term_id] ) ) {
+		if ( ! isset( $excerpt_cache[ $page_id ][ $term_id ] ) ) {
 			if ( $this->is_singular( $page_id ) ) {
 				//* We're on the blog page now.
 				$excerpt = $this->get_excerpt_by_id( '', $page_id );
-			} else if ( $term && is_object( $term ) ) {
-				//* We're on a taxonomy now.
+			} elseif ( $term_id ) {
+				//* We're on a taxonomy now. Fetch excerpt from latest term post.
 				$excerpt = empty( $term->description ) ? $this->get_excerpt_by_id( '', '', $page_id ) : $this->s_description( $term->description );
-			} else if ( $this->is_author() ) {
+			} elseif ( $this->is_author() ) {
 				$excerpt = $this->s_description( get_the_author_meta( 'description', (int) get_query_var( 'author' ) ) );
 			} else {
 				$excerpt = '';
 			}
 
-			$excerpt_cache[$page_id][$term_id] = $excerpt;
+			$excerpt_cache[ $page_id ][ $term_id ] = $excerpt;
 		}
 
 		//* Fetch excerpt from cache.
-		$excerpt = $excerpt_cache[$page_id][$term_id];
+		$excerpt = $excerpt_cache[ $page_id ][ $term_id ];
 
 		/**
 		 * Put excerptlength in cache.
@@ -725,11 +738,11 @@
 		 * Why cache? My tests have shown that mb_strlen is 1.03x faster than cache fetching.
 		 * However, _mb_strlen (compat) is about 1740x slower. And this is the reason it's cached!
 		 */
-		if ( ! isset( $excerptlength_cache[$page_id][$term_id] ) )
-			$excerptlength_cache[$page_id][$term_id] = mb_strlen( $excerpt );
+		if ( ! isset( $excerptlength_cache[ $page_id ][ $term_id ] ) )
+			$excerptlength_cache[ $page_id ][ $term_id ] = mb_strlen( $excerpt );
 
 		//* Fetch the length from cache.
-		$excerpt_length = $excerptlength_cache[$page_id][$term_id];
+		$excerpt_length = $excerptlength_cache[ $page_id ][ $term_id ];
 
 		//* Trunculate if the excerpt is longer than the max char length
 		$excerpt = $this->trim_excerpt( $excerpt, $excerpt_length, $max_char_length );
@@ -801,7 +814,7 @@
 
 			$stops = array( '.', '?', '!' );
 			//* Add three dots if there's no full stop at the end of the excerpt.
-			if ( ! in_array( $last_char, $stops ) )
+			if ( ! in_array( $last_char, $stops, true ) )
 				$excerpt .= '...';
 
 		}
@@ -808,5 +821,4 @@
 
 		return trim( $excerpt );
 	}
-
 }
Index: inc/classes/generate-image.class.php
===================================================================
--- inc/classes/generate-image.class.php	(revision 1475679)
+++ inc/classes/generate-image.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Generate_Image
  *
@@ -26,6 +28,27 @@
 class AutoDescription_Generate_Image extends AutoDescription_Generate_Url {
 
 	/**
+	 * Holds the image dimensions, if found.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @var array
+	 */
+	public $image_dimensions = array();
+
+	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, loads parent constructor.
 	 */
 	public function __construct() {
@@ -39,12 +62,13 @@
 	 * @since 2.5.2 Applies filters string the_seo_framework_og_image_after_header
 	 *
 	 * @todo listen to attached images within post.
+	 * @todo set archive and front page image listener, now it simply fail on some calls.
 	 * @priority medium 2.7.0+
 	 *
 	 * @param string $post_id The post ID.
 	 * @param array $args The image arguments.
 	 * @param bool $escape Whether to escape the image URL.
-	 * @return string the Open Graph Image URL.
+	 * @return string the image URL.
 	 */
 	public function get_image( $post_id = '', $args = array(), $escape = true ) {
 
@@ -70,7 +94,7 @@
 		$all_allowed = empty( $args['disallowed'] );
 
 		//* 1. Fetch image from featured
-		if ( empty( $image ) && ( $all_allowed || ! in_array( 'featured', $args['disallowed'] ) ) )
+		if ( empty( $image ) && ( $all_allowed || ! in_array( 'featured', $args['disallowed'], true ) ) )
 			$image = $this->get_image_from_post_thumbnail( $args );
 
 		//* 2. Fetch image from fallback filter 1
@@ -78,8 +102,8 @@
 			$image = (string) apply_filters( 'the_seo_framework_og_image_after_featured', '', $args['post_id'] );
 
 		//* 3. Fallback: Get header image if exists
-		if ( empty( $image ) && ( $all_allowed || ! in_array( 'header', $args['disallowed'] ) ) && current_theme_supports( 'custom-header', 'default-image' ) )
-			$image = get_header_image();
+		if ( empty( $image ) && ( $all_allowed || ! in_array( 'header', $args['disallowed'], true ) ) && current_theme_supports( 'custom-header', 'default-image' ) )
+			$image = $this->get_header_image( true );
 
 		//* 4. Fetch image from fallback filter 2
 		if ( empty( $image ) )
@@ -86,13 +110,9 @@
 			$image = (string) apply_filters( 'the_seo_framework_og_image_after_header', '', $args['post_id'] );
 
 		//* 5. Get the WP 4.3.0 Site Icon
-		if ( empty( $image ) && ( $all_allowed || ! in_array( 'icon', $args['disallowed'] ) ) )
-			$image = $this->site_icon();
+		if ( empty( $image ) && ( $all_allowed || ! in_array( 'icon', $args['disallowed'], true ) ) )
+			$image = $this->site_icon( 'full', true );
 
-		/**
-		 * Escape in Generation.
-		 * @since 2.5.2
-		 */
 		if ( $escape && $image )
 			return esc_url( $image );
 
@@ -105,11 +125,11 @@
 	 * @since 2.5.0
 	 *
 	 * @since 2.0.1 Applies filters the_seo_framework_og_image_args : {
-	 *		@param string image The image url
-	 *		@param mixed size The image size
-	 *		@param bool icon Fetch Image icon
-	 *		@param array attr Image attributes
-	 *		@param array disallowed Disallowed image types : {
+	 *		@param string $image The image url
+	 *		@param mixed $size The image size
+	 *		@param bool $icon Fetch Image icon
+	 *		@param array $attr Image attributes
+	 *		@param array $disallowed Disallowed image types : {
 	 *			array (
 	 * 				string 'featured'
 	 * 				string 'header'
@@ -175,7 +195,7 @@
 			}
 		} else {
 			//* Old style parameters are used. Doing it wrong.
-			$this->_doing_it_wrong( __CLASS__ . '::' . __FUNCTION__, 'Use $args = array() for parameters.', '2.5.0' );
+			$this->_doing_it_wrong( __METHOD__, 'Use $args = array() for parameters.', '2.5.0' );
 			$args = $default_args;
 		}
 
@@ -202,6 +222,8 @@
 
 		$id = get_post_thumbnail_id( $args['post_id'] );
 
+		$args['get_the_real_ID'] = true;
+
 		$image = $id ? $this->parse_og_image( $id, $args ) : '';
 
 		return $image;
@@ -256,8 +278,9 @@
 			return;
 
 		static $called = array();
+
 		//* Don't parse image twice. Return empty on second run.
-		if ( isset( $called[$id] ) )
+		if ( isset( $called[ $id ] ) )
 			return '';
 
 		if ( empty( $args ) )
@@ -276,11 +299,11 @@
 				//* Square
 				$w = 1500;
 				$h = 1500;
-			} else if ( $w > $h ) {
-				//* Landscape
+			} elseif ( $w > $h ) {
+				//* Landscape, set $w to 1500.
 				$h = $this->proportionate_dimensions( $h, $w, $w = 1500 );
-			} else if ( $h > $w ) {
-				//* Portrait
+			} elseif ( $h > $w ) {
+				//* Portrait, set $h to 1500.
 				$w = $this->proportionate_dimensions( $w, $h, $h = 1500 );
 			}
 
@@ -287,8 +310,8 @@
 			//* Get path of image and load it into the wp_get_image_editor
 			$i_file_path = get_attached_file( $id );
 
-			$i_file_old_name	= basename( get_attached_file( $id ) );
-			$i_file_ext			= pathinfo( $i_file_path, PATHINFO_EXTENSION );
+			$i_file_old_name = basename( get_attached_file( $id ) );
+			$i_file_ext      = pathinfo( $i_file_path, PATHINFO_EXTENSION );
 
 			if ( $i_file_ext ) {
 				$i_file_dir_name = pathinfo( $i_file_path, PATHINFO_DIRNAME );
@@ -327,7 +350,12 @@
 			}
 		}
 
-		return $called[$id] = $i;
+		//* Whether to use the post ID (Post Thumbnail) or input ID (ID was known beforehand)
+		$usage_id = isset( $args['get_the_real_ID'] ) && $args['get_the_real_ID'] ? $this->get_the_real_ID() : $id;
+
+		$this->image_dimensions = $this->image_dimensions + array( $usage_id => array( 'width' => $w, 'height' => $h ) );
+
+		return $called[ $id ] = $i;
 	}
 
 	/**
@@ -335,10 +363,11 @@
 	 *
 	 * @since 2.2.1
 	 *
-	 * @param string $size The icon size, accepts 'full' and pixel values
-	 * @return string url site icon, not escaped.
+	 * @param string $size The icon size, accepts 'full' and pixel values.
+	 * @param bool $set_og_dimensions Whether to set size for OG image. Always falls back to the current post ID.
+	 * @return string URL site icon, not escaped.
 	 */
-	public function site_icon( $size = 'full' ) {
+	public function site_icon( $size = 'full', $set_og_dimensions = false ) {
 
 		$icon = '';
 
@@ -350,9 +379,15 @@
 				$url_data = wp_get_attachment_image_src( $site_icon_id, $size );
 
 				$icon = $url_data ? $url_data[0] : '';
+
+				if ( $set_og_dimensions && $icon ) {
+					$w = $url_data[1];
+					$h = $url_data[2];
+
+					$this->image_dimensions = $this->image_dimensions + array( $this->get_the_real_ID() => array( 'width' => $w, 'height' => $h ) );
+				}
 			}
-
-		} else if ( is_int( $size ) && function_exists( 'has_site_icon' ) && $this->wp_version( '4.3', '>=' ) ) {
+		} elseif ( is_int( $size ) && function_exists( 'has_site_icon' ) && $this->wp_version( '4.3', '>=' ) ) {
 			//* Also applies (MultiSite) filters.
 			$icon = get_site_icon_url( $size );
 		}
@@ -360,4 +395,28 @@
 		return $icon;
 	}
 
+	/**
+	 * Returns header image URL.
+	 * Also sets image dimensions. Falls back to current post ID for index.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param bool $set_og_dimensions Whether to set size for OG image. Always falls back to the current post ID.
+	 * @return string The header image URL, not escaped.
+	 */
+	public function get_header_image( $set_og_dimensions = false ) {
+
+		$image = get_header_image();
+
+		if ( $set_og_dimensions && $image ) {
+
+			$w = (int) get_theme_support( 'custom-header', 'width' );
+			$h = (int) get_theme_support( 'custom-header', 'height' );
+
+			if ( $w && $h )
+				$this->image_dimensions = $this->image_dimensions + array( $this->get_the_real_ID() => array( 'width' => $w, 'height' => $h ) );
+		}
+
+		return $image;
+	}
 }
Index: inc/classes/generate-ldjson.class.php
===================================================================
--- inc/classes/generate-ldjson.class.php	(revision 1475679)
+++ inc/classes/generate-ldjson.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Generate
  *
@@ -27,6 +29,18 @@
 class AutoDescription_Generate_Ldjson extends AutoDescription_Generate_Image {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -47,7 +61,7 @@
 
 		$this->setup_ld_json_transient( $this->get_the_real_ID() );
 
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, false, $debug_key = microtime(true), array( 'LD Json transient' => $this->ld_json_transient, 'Output from transient' => false !== $this->get_transient( $this->ld_json_transient ) ) );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, false, $debug_key = microtime( true ), array( 'LD Json transient' => $this->ld_json_transient, 'Output from transient' => false !== $this->get_transient( $this->ld_json_transient ) ) );
 
 		$output = $this->get_transient( $this->ld_json_transient );
 		if ( false === $output ) {
@@ -91,7 +105,7 @@
 		 * Debug output.
 		 * @since 2.4.2
 		 */
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, false, $debug_key, array( 'LD Json transient output' => $output ) );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, false, $debug_key, array( 'LD Json transient output' => $output ) );
 
 		return $output;
 	}
@@ -189,7 +203,7 @@
 	/**
 	 * Returns 'ListItem' json encoded type name.
 	 *
-	 * @staticvar string $crumblist
+	 * @staticvar string $listitem
 	 * @since 2.6.0
 	 *
 	 * @return string The json encoded 'ListItem'.
@@ -205,6 +219,52 @@
 	}
 
 	/**
+	 * Returns 'image' json encoded value.
+	 *
+	 * @staticvar array $images
+	 * @since 2.7.0
+	 * @todo implement blog page image.
+	 * @priority low 2.7.0+ extension.
+	 *
+	 * @param int|string $id The page, post, product or term ID.
+	 * @param bool $singular Whether the ID is singular.
+	 */
+	public function schema_image( $id = 0, $singular = false ) {
+
+		static $images = array();
+
+		$id = (int) $id;
+
+		if ( isset( $images[ $id ][ $singular ] ) )
+			return $images[ $id ][ $singular ];
+
+		$image = '';
+
+		if ( $singular ) {
+			if ( $id === $this->get_the_real_ID() ) {
+				$image = $this->get_image_from_cache( $id );
+			} elseif ( $id ) {
+				//* No ID (0) results in the home page being a blog. This will be handled in the future.
+				$image = $this->get_image( $id );
+			}
+		} else {
+			//* Placeholder.
+			$image = '';
+		}
+
+		/**
+		 * Applies filters 'the_seo_framework_ld_json_breadcrumb_image' : string
+		 * @since 2.7.0
+		 * @param string $image The current image.
+		 * @param int $id The page, post, product or term ID.
+		 * @param bool $singular Whether the ID is singular.
+		 */
+		$image = apply_filters( 'the_seo_framework_ld_json_breadcrumb_image', $image, $id, $singular );
+
+		return $images[ $id ][ $singular ] = json_encode( esc_url_raw( $image ) );
+	}
+
+	/**
 	 * Generate LD+Json search helper.
 	 *
 	 * @since 2.2.8
@@ -222,8 +282,15 @@
 		$name = $this->schema_blog_name();
 		$actiontype = json_encode( 'SearchAction' );
 
+		/**
+		 * Applies filters 'the_seo_framework_ld_json_search_url' : string
+		 * @since 2.7.0
+		 * @param string $search_url The default WordPress search URL without query parameters.
+		 */
+		$search_url = (string) apply_filters( 'the_seo_framework_ld_json_search_url', $this->the_home_url_from_cache( true ) . '?s=' );
+
 		// Remove trailing quote and add it back.
-		$target = mb_substr( json_encode( $this->the_home_url_from_cache( true ) . '?s=' ), 0, -1 ) . '{search_term_string}"';
+		$target = mb_substr( json_encode( $search_url ), 0, -1 ) . '{search_term_string}"';
 
 		$queryaction = json_encode( 'required name=search_term_string' );
 
@@ -231,7 +298,7 @@
 
 		$output = '';
 		if ( $json )
-			$output = '<script type="application/ld+json">' . $json . "</script>" . "\r\n";
+			$output = '<script type="application/ld+json">' . $json . '</script>' . "\r\n";
 
 		return $output;
 	}
@@ -253,7 +320,7 @@
 
 		if ( $this->is_single() || $this->is_wc_product() ) {
 			$output = $this->ld_json_breadcrumbs_post();
-		} else if ( false === $this->is_front_page() && $this->is_page() ) {
+		} elseif ( false === $this->is_front_page() && $this->is_page() ) {
 			$output = $this->ld_json_breadcrumbs_page();
 		}
 
@@ -285,12 +352,10 @@
 		if ( ! $r || is_wp_error( $r ) )
 			return '';
 
-		//* Get categories.
-		$cats = wp_get_object_terms( $post_id, $cat_type, array( 'fields' => 'all_with_object_id', 'orderby' => 'parent' ) );
+		$cats = get_the_terms( $post_id, $cat_type );
+		$cats = wp_list_pluck( $cats, 'parent', 'term_id' );
+		asort( $cats, SORT_NUMERIC );
 
-		if ( empty( $cats ) || is_wp_error( $cats ) )
-			return '';
-
 		$assigned_ids = array();
 		$kittens = array();
 		$parents = array();
@@ -297,20 +362,17 @@
 		$parents_merge = array();
 
 		//* Fetch cats children id's, if any.
-		foreach ( $cats as $cat ) {
-			//* The category objects. The cats.
-			$cat_id = $cat->term_id;
-
+		foreach ( $cats as $term_id => $parent_id ) {
 			//* Store to filter unused Cat ID's from the post.
-			$assigned_ids[] = $cat_id;
+			$assigned_ids[] = $term_id;
 
 			// Check if they have kittens.
-			$children = get_term_children( $cat_id, $cat->taxonomy );
-			$ancestors = get_ancestors( $cat_id, $cat->taxonomy );
+			$children = get_term_children( $term_id, $cat_type );
+			$ancestors = get_ancestors( $term_id, $cat_type );
 
 			//* Save children id's as kittens.
-			$kittens[$cat_id] = $children;
-			$parents[$cat_id] = $ancestors;
+			$kittens[ $term_id ] = $children;
+			$parents[ $term_id ] = $ancestors;
 		}
 
 		foreach ( $kittens as $kit_id => $child_id ) {
@@ -320,8 +382,8 @@
 				 * Seed out children that aren't assigned.
 				 * (from levels too deep as get_term_children gets them all).
 				 */
-				if ( $cid && false === in_array( $cid, $assigned_ids ) )
-					unset( $kittens[$kit_id][$ckey] );
+				if ( $cid && false === in_array( $cid, $assigned_ids, true ) )
+					unset( $kittens[ $kit_id ][ $ckey ] );
 
 				/**
 				 * Make the tree count down multiple children are assigned.
@@ -337,12 +399,12 @@
 				 *
 				 * We want a tree for "Cat 1+2+3", "Cat 1+2", and "Cat 3".
 				 *
-				 * We could add Cat 1, but that's will give two single category lines, which could be misinterperted.
+				 * We could add Cat 1 as well, but that's will give two single category lines, which could be misinterperted.
 				 * So we only use what we know: The kittens (child tree).
 				 */
-				if ( isset( $parents[$cid] ) && ! empty( $parents[$kit_id] ) ) {
-					$parents_merge[$kit_id] = $parents[$kit_id];
-					unset( $kittens[$kit_id] );
+				if ( isset( $parents[ $cid ] ) && ! empty( $parents[ $kit_id ] ) ) {
+					$parents_merge[ $kit_id ] = $parents[ $kit_id ];
+					unset( $kittens[ $kit_id ] );
 				}
 			}
 		}
@@ -372,7 +434,7 @@
 					array_push( $parents_ids, $child_id );
 
 					//* Temporarily array.
-					$kitten[$pid] = $parents_ids;
+					$kitten[ $pid ] = $parents_ids;
 
 					$trees = $this->build_breadcrumb_trees( $kitten, $trees );
 				} else {
@@ -412,36 +474,37 @@
 					$tree_ids = array_reverse( $tree_ids, false );
 
 					foreach ( $tree_ids as $position => $child_id ) {
-						if ( in_array( $child_id, $assigned_ids ) ) {
+						if ( in_array( $child_id, $assigned_ids, true ) ) {
 							//* Cat has been assigned, continue.
 
 							//* Fetch item from cache if available.
-							if ( isset( $item_cache[$child_id] ) ) {
+							if ( isset( $item_cache[ $child_id ] ) ) {
 								$pos = $position + 2;
-								$item_cache[$child_id]['pos'] = $pos;
-								$items .= $this->make_breadcrumb( $item_cache[$child_id], true );
-
+								$item_cache[ $child_id ]['pos'] = $pos;
+								$items .= $this->make_breadcrumb( $item_cache[ $child_id ], true );
 							} else {
-
 								$pos = $position + 2;
 
 								$cat = get_term_by( 'id', $child_id, $cat_type, OBJECT, 'raw' );
+								$data = $this->get_term_data( $cat, $child_id );
 
 								$id = json_encode( $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'is_term' => true, 'term' => $cat ) ) );
 
-								$custom_field_name = isset( $cat->admeta['doctitle'] ) ? $cat->admeta['doctitle'] : '';
-								$cat_name = $custom_field_name ? $custom_field_name : $cat->name;
+								$cat_name = empty( $data['doctitle'] ) ? $cat->name : $data['doctitle'];
 								$name = json_encode( $cat_name );
 
+								$image = $this->schema_image( $child_id );
+
 								//* Store in cache.
-								$item_cache[$child_id] = array(
-									'type'	=> $item_type,
-									'pos'	=> (string) $pos,
-									'id'	=> $id,
-									'name'	=> $name
+								$item_cache[ $child_id ] = array(
+									'type'  => $item_type,
+									'pos'   => (string) $pos,
+									'id'    => $id,
+									'name'  => $name,
+									'image' => $image,
 								);
 
-								$items .= $this->make_breadcrumb( $item_cache[$child_id], true );
+								$items .= $this->make_breadcrumb( $item_cache[ $child_id ], true );
 							}
 						}
 					}
@@ -462,16 +525,18 @@
 					//* The position of the current item is always static here.
 					$pos = '2';
 
+					$image = $this->schema_image( $tree_ids );
+
 					//* $tree_ids is a single ID here.
 					$cat = get_term_by( 'id', $tree_ids, $cat_type, OBJECT, 'raw' );
+					$data = $this->get_term_data( $cat, $tree_ids );
 
 					$id = json_encode( $this->the_url( '', array( 'get_custom_field' => false, 'is_term' => true, 'external' => true, 'term' => $cat ) ) );
 
-					$custom_field_name = isset( $cat->admeta['doctitle'] ) ? $cat->admeta['doctitle'] : '';
-					$cat_name = $custom_field_name ? $custom_field_name : $cat->name;
+					$cat_name = empty( $data['doctitle'] ) ? $cat->name : $data['doctitle'];
 					$name = json_encode( $cat_name );
 
-					$items .= sprintf( '{"@type":%s,"position":%s,"item":{"@id":%s,"name":%s}},', $item_type, (string) $pos, $id, $name );
+					$items .= sprintf( '{"@type":%s,"position":%s,"item":{"@id":%s,"name":%s,"image":%s}},', $item_type, (string) $pos, $id, $name, $image );
 
 					if ( $items ) {
 
@@ -482,7 +547,6 @@
 						$output .= '<script type="application/ld+json">' . $breadcrumbhelper . '</script>' . "\r\n";
 					}
 				}
-
 			}
 		}
 
@@ -524,12 +588,14 @@
 				$parent_name = $custom_field_name ? $custom_field_name : $this->title( '', '', '', array( 'term_id' => $parent_id, 'meta' => true, 'get_custom_field' => false, 'placeholder' => true, 'notagline' => true, 'description_title' => true ) );
 
 				$name = json_encode( $parent_name );
+				$image = $this->schema_image( $parent_id );
 
 				$breadcrumb = array(
-					'type'	=> $item_type,
-					'pos'	=> (string) $pos,
-					'id'	=> $id,
-					'name'	=> $name
+					'type'  => $item_type,
+					'pos'   => (string) $pos,
+					'id'    => $id,
+					'name'  => $name,
+					'image' => $image,
 				);
 
 				$items .= $this->make_breadcrumb( $breadcrumb, true );
@@ -575,7 +641,7 @@
 
 		if ( $home_title ) {
 			$custom_name = $home_title;
-		} else if ( $this->has_page_on_front() ) {
+		} elseif ( $this->has_page_on_front() ) {
 			$home_id = (int) get_option( 'page_on_front' );
 
 			$custom_name = $this->get_custom_field( '_genesis_title', $home_id );
@@ -585,12 +651,14 @@
 		}
 
 		$custom_name = json_encode( $custom_name );
+		$image = $this->schema_image( $this->get_the_front_page_ID(), true );
 
 		$breadcrumb = array(
-			'type'	=> $item_type,
-			'pos'	=> '1',
-			'id'	=> $id,
-			'name'	=> $custom_name
+			'type'  => $item_type,
+			'pos'   => '1',
+			'id'    => $id,
+			'name'  => $custom_name,
+			'image' => $image,
 		);
 
 		return $first_item = $this->make_breadcrumb( $breadcrumb, true );
@@ -620,7 +688,7 @@
 		 * This shouldn't run anyway. Pos should always be provided.
 		 */
 		if ( is_null( $pos ) )
-			$pos = '2';
+			$pos = 2;
 
 		//* Add current page.
 		$pos = $pos + 1;
@@ -649,11 +717,14 @@
 			$name = json_encode( $name );
 		}
 
+		$image = $this->schema_image( $post_id, true );
+
 		$breadcrumb = array(
-			'type'	=> $item_type,
-			'pos'	=> (string) $pos,
-			'id'	=> $id,
-			'name'	=> $name
+			'type'  => $item_type,
+			'pos'   => (string) $pos,
+			'id'    => $id,
+			'name'  => $name,
+			'image' => $image,
 		);
 
 		return $this->make_breadcrumb( $breadcrumb, false );
@@ -675,7 +746,7 @@
 	 */
 	public function make_breadcrumb( $item, $comma = true ) {
 		$comma = $comma ? ',' : '';
-		return sprintf( '{"@type":%s,"position":%s,"item":{"@id":%s,"name":%s}}%s', $item['type'], $item['pos'], $item['id'], $item['name'], $comma );
+		return sprintf( '{"@type":%s,"position":%s,"item":{"@id":%s,"name":%s,"image":%s}}%s', $item['type'], $item['pos'], $item['id'], $item['name'], $item['image'], $comma );
 	}
 
 	/**
@@ -706,7 +777,7 @@
 
 					foreach ( $kitten as $kit => $kat ) {
 						//* Only add if non-existent in $trees.
-						if ( ! in_array( $kat, $trees ) )
+						if ( ! in_array( $kat, $trees, true ) )
 							$add[] = $kat;
 					}
 
@@ -852,7 +923,7 @@
 		$filter = (bool) apply_filters( 'the_seo_framework_json_breadcrumb_output', true );
 		$option = $this->is_option_checked( 'ld_json_breadcrumbs' );
 
-		return $cache = $filter && $option ? true : false;
+		return $cache = $filter && $option;
 	}
 
 	/**
@@ -877,7 +948,7 @@
 		$filter = (bool) apply_filters( 'the_seo_framework_json_sitename_output', true );
 		$option = $this->is_option_checked( 'ld_json_sitename' );
 
-		return $cache = $filter && $option ? true : false;
+		return $cache = $filter && $option;
 	}
 
 	/**
@@ -902,7 +973,7 @@
 		$filter = (bool) apply_filters( 'the_seo_framework_json_search_output', true );
 		$option = $this->is_option_checked( 'ld_json_searchbox' );
 
-		return $cache = $filter && $option ? true : false;
+		return $cache = $filter && $option;
 	}
 
 	/**
@@ -927,7 +998,6 @@
 		$filter = (bool) apply_filters( 'the_seo_framework_json_knowledge_output', true );
 		$option = $this->is_option_checked( 'knowledge_output' );
 
-		return $cache = $filter && $option ? true : false;
+		return $cache = $filter && $option;
 	}
-
 }
Index: inc/classes/generate-title.class.php
===================================================================
--- inc/classes/generate-title.class.php	(revision 1475679)
+++ inc/classes/generate-title.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Generate_Title
  *
@@ -26,6 +28,18 @@
 class AutoDescription_Generate_Title extends AutoDescription_Generate_Description {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -33,7 +47,7 @@
 	}
 
 	/**
-	 * Get the title. God function.
+	 * Gets the title. Main function.
 	 * Always use this function for the title unless you're absolutely sure what you're doing.
 	 *
 	 * This function is used for all these: Taxonomies and Terms, Posts, Pages, Blog, front page, front-end, back-end.
@@ -57,7 +71,6 @@
 	 * 		@param bool description_title Fetch title for description.
 	 * 		@param bool is_front_page Fetch front page title.
 	 * }
-	 *
 	 * @return string $title Title
 	 */
 	public function title( $title = '', $sep = '', $seplocation = '', $args = array() ) {
@@ -82,9 +95,9 @@
 		 */
 		if ( false === $args['meta'] && false === $this->is_admin() ) {
 			if ( false === $this->current_theme_supports_title_tag() && doing_filter( 'wp_title' ) ) {
-				if ( $seplocation ) {
+				if ( $seplocation || $sep ) {
 					//* Set doing it wrong parameters.
-					$this->tell_title_doing_it_wrong( $title, $sep, $seplocation, false );
+					$this->set_tell_title_doing_it_wrong( $title, $sep, $seplocation, false );
 					//* And echo them.
 					add_action( 'wp_footer', array( $this, 'tell_title_doing_it_wrong' ), 20 );
 
@@ -94,21 +107,9 @@
 					//* Notify transients
 					$this->set_theme_dir_transient( false );
 
-					return $this->build_title_doingitwrong( $title, $sep, $seplocation, $args );
-				} else if ( $sep ) {
-					//* Set doing it wrong parameters.
-					$this->tell_title_doing_it_wrong( $title, $sep, $seplocation, false );
-					//* And echo them.
-					add_action( 'wp_footer', array( $this, 'tell_title_doing_it_wrong' ), 20 );
-
-					//* Notify cache.
-					$this->title_doing_it_wrong = true;
-
-					//* Notify transients
-					$this->set_theme_dir_transient( false );
-
 					//* Title is empty.
-					$args['empty_title'] = true;
+					if ( empty( $seplocation ) && $sep )
+						$args['empty_title'] = true;
 
 					return $this->build_title_doingitwrong( $title, $sep, $seplocation, $args );
 				}
@@ -130,11 +131,10 @@
 	/**
 	 * Escapes and beautifies title.
 	 *
+	 * @since 2.5.2
+	 *
 	 * @param string $title The title to escape and beautify.
 	 * @param bool $trim Whether to trim the title from whitespaces.
-	 *
-	 * @since 2.5.2
-	 *
 	 * @return string Escaped and beautified title.
 	 */
 	public function escape_title( $title = '', $trim = true ) {
@@ -151,11 +151,10 @@
 	/**
 	 * Parse and sanitize title args.
 	 *
-	 * @param array $args required The passed arguments.
-	 * @param array $defaults The default arguments.
-	 * @param bool $get_defaults Return the default arguments. Ignoring $args.
+	 * @since 2.4.0
 	 *
-	 * @applies filters the_seo_framework_title_args : {
+	 * @since 2.5.0:
+	 * Applies filters the_seo_framework_title_args : {
 	 * 		@param int term_id The Taxonomy Term ID when taxonomy is also filled in. Else post ID.
 	 * 		@param string taxonomy The Taxonomy name.
 	 * 		@param bool page_on_front Page on front condition for example generation.
@@ -166,7 +165,9 @@
 	 * 		@param bool is_front_page Fetch front page title.
 	 * }
 	 *
-	 * @since 2.4.0
+	 * @param array $args required The passed arguments.
+	 * @param array $defaults The default arguments.
+	 * @param bool $get_defaults Return the default arguments. Ignoring $args.
 	 * @return array $args parsed args.
 	 */
 	public function parse_title_args( $args = array(), $defaults = array(), $get_defaults = false ) {
@@ -185,7 +186,6 @@
 				'escape'			=> true,
 			);
 
-			//* @since 2.5.0
 			$defaults = (array) apply_filters( 'the_seo_framework_title_args', $defaults, $args );
 		}
 
@@ -208,11 +208,11 @@
 	}
 
 	/**
-	 * Reparse title args.
+	 * Reparses title args.
 	 *
+	 * @since 2.6.0
+	 *
 	 * @param array $args required The passed arguments.
-	 *
-	 * @since 2.6.0
 	 * @return array $args parsed args.
 	 */
 	public function reparse_title_args( $args = array() ) {
@@ -227,7 +227,7 @@
 			}
 		} else {
 			//* Old style parameters are used. Doing it wrong.
-			$this->_doing_it_wrong( __CLASS__ . '::' . __FUNCTION__, 'Use $args = array() for parameters.', '2.5.0' );
+			$this->_doing_it_wrong( __METHOD__, 'Use $args = array() for parameters.', '2.5.0' );
 			$args = $default_args;
 		}
 
@@ -235,16 +235,15 @@
 	}
 
 	/**
-	 * Build the title based on input, without tagline.
+	 * Builds the title based on input, without tagline.
 	 *
+	 * @since 2.4.0
+	 *
 	 * @param array $args : accepted args : {
 	 * 		@param int term_id The Taxonomy Term ID
 	 * 		@param bool placeholder Generate placeholder, ignoring options.
 	 * 		@param bool page_on_front Page on front condition for example generation
 	 * }
-	 *
-	 * @since 2.4.0
-	 *
 	 * @return string Title without tagline.
 	 */
 	protected function build_title_notagline( $args = array() ) {
@@ -269,14 +268,13 @@
 	 * Build the title based on input, without tagline.
 	 * Note: Not escaped.
 	 *
+	 * @since 2.6.0
+	 *
 	 * @param array $args : accepted args : {
 	 * 		@param int term_id The Taxonomy Term ID
 	 * 		@param bool placeholder Generate placeholder, ignoring options.
 	 * 		@param bool page_on_front Page on front condition for example generation
 	 * }
-	 *
-	 * @since 2.6.0
-	 *
 	 * @return string Title without tagline.
 	 */
 	protected function get_notagline_title( $args = array() ) {
@@ -295,10 +293,12 @@
 	}
 
 	/**
-	 * Build the title based on input for themes that are doing it wrong.
-	 * Pretty much a duplicate of build_title but contains many more variables.
+	 * Builds the title based on input and query status for themes that are doing it wrong.
+	 * Pretty much a duplicate of build_title but contains different variables.
 	 * Keep this in mind.
 	 *
+	 * @since 2.4.0
+	 *
 	 * @param string $title The Title to return
 	 * @param string $sep The Title sepeartor
 	 * @param string $seplocation The Title sepeartor location ( accepts 'left' or 'right' )
@@ -308,14 +308,11 @@
 	 * 		@param bool placeholder Generate placeholder, ignoring options.
 	 * 		@param bool get_custom_field Do not fetch custom title when false.
 	 * }
-	 *
-	 * @since 2.4.0
-	 *
 	 * @return string $title Title
 	 */
 	public function build_title_doingitwrong( $title = '', $sep = '', $seplocation = '', $args = array() ) {
 
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, true, $debug_key = microtime(true), get_defined_vars() );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, true, $debug_key = microtime( true ), get_defined_vars() );
 
 		/**
 		 * Empty the title, because most themes think they 'know' how to SEO the front page.
@@ -422,7 +419,6 @@
 			} else {
 				$title = " $sep " . trim( ltrim( $title, " $sep_to_replace" ) );
 			}
-
 		} else {
 			$title = trim( $title ) . " $sep ";
 		}
@@ -433,14 +429,16 @@
 		if ( $args['escape'] )
 			$title = $this->escape_title( $title, false );
 
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, false, $debug_key, array( 'title_output' => $title ) );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, false, $debug_key, array( 'title_output' => $title ) );
 
 		return $title;
 	}
 
 	/**
-	 * Build the title based on input.
+	 * Builds the title based on input and query status.
 	 *
+	 * @since 2.4.0
+	 *
 	 * @param string $title The Title to return
 	 * @param string $seplocation The Title sepeartor location ( accepts 'left' or 'right' )
 	 * @param array $args : accepted args : {
@@ -451,14 +449,11 @@
 	 * 		@param bool 	get_custom_field Do not fetch custom title when false.
 	 * 		@param bool 	is_front_page Fetch front page title.
 	 * }
-	 *
-	 * @since 2.4.0
-	 *
 	 * @return string $title Title
 	 */
 	public function build_title( $title = '', $seplocation = '', $args = array() ) {
 
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, true, $debug_key = microtime(true), get_defined_vars() );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, true, $debug_key = microtime( true ), get_defined_vars() );
 
 		$args = $this->reparse_title_args( $args );
 
@@ -471,7 +466,7 @@
 		$title = $this->do_title_pre_filter( '', $args, false );
 		$blogname = '';
 
-		$is_front_page = $this->is_front_page() || $args['page_on_front'] || $this->is_static_frontpage( $args['term_id'] ) ? true : false;
+		$is_front_page = $this->is_front_page() || $args['page_on_front'] || $this->is_static_frontpage( $args['term_id'] );
 
 		$seplocation = $this->get_title_seplocation( $seplocation );
 
@@ -511,7 +506,6 @@
 		 * @since 2.4.1
 		 */
 		if ( ! $args['description_title'] ) {
-
 			$title = $this->add_title_protection( $title, $args['term_id'] );
 			$title = $this->add_title_pagination( $title );
 
@@ -522,7 +516,6 @@
 				if ( $this->add_title_additions() )
 					$title = $this->process_title_additions( $title, $blogname, $seplocation );
 			}
-
 		}
 
 		$title = $this->do_title_pro_filter( $title, $args, false );
@@ -537,7 +530,7 @@
 		if ( $args['escape'] )
 			$title = $this->escape_title( $title );
 
-		if ( $this->the_seo_framework_debug ) $this->debug_init( __CLASS__, __FUNCTION__, false, $debug_key, array( 'title_output' => $title ) );
+		if ( $this->the_seo_framework_debug ) $this->debug_init( __METHOD__, false, $debug_key, array( 'title_output' => $title ) );
 
 		return $title;
 	}
@@ -568,13 +561,10 @@
 	 * Generate the title based on query conditions.
 	 *
 	 * @since 2.3.4
+	 * @staticvar array $cache : contains $title strings.
 	 *
 	 * @param array $args The Title Args.
 	 * @param bool $escape Parse Title through saninitation calls.
-	 *
-	 * @staticvar array $cache : contains $title strings.
-	 * @since 2.6.0
-	 *
 	 * @return string $title The Generated Title.
 	 */
 	public function generate_title( $args = array(), $escape = true ) {
@@ -583,17 +573,17 @@
 
 		$title = '';
 		$id = $args['term_id'];
-		$taxonomny = $args['taxonomy'];
+		$taxonomy = $args['taxonomy'];
 
 		static $cache = array();
 
-		if ( isset( $cache[$id][$taxonomny] ) )
-			$title = $cache[$id][$taxonomny];
+		if ( isset( $cache[ $id ][ $taxonomy ] ) )
+			$title = $cache[ $id ][ $taxonomy ];
 
 		if ( empty( $title ) ) {
 
 			if ( $this->is_archive() ) {
-				if ( ( $id && $taxonomny ) || $this->is_category() || $this->is_tag() || $this->is_tax() ) {
+				if ( ( $id && $taxonomy ) || $this->is_category() || $this->is_tag() || $this->is_tax() ) {
 					$title = $this->title_for_terms( $args, false );
 				} else {
 					$term = get_queried_object();
@@ -603,7 +593,6 @@
 					 */
 					$title = $this->get_the_real_archive_title( $term, $args );
 				}
-
 			}
 
 			$title = $this->get_the_404_title( $title );
@@ -636,7 +625,6 @@
 	 * @param string $deprecated Deprecated: The Home Page separator location
 	 * @param bool $escape Parse Title through saninitation calls.
 	 * @param bool $get_option Whether to fetch the SEO Settings option.
-	 *
 	 * @return array {
 	 *		'title' => (string) $title : The Generated Title
 	 *		'blogname' => (string) $blogname : The Generated Blogname
@@ -680,7 +668,7 @@
 			'title' => $title,
 			'blogname' => $blogname,
 			'add_tagline' => $add_tagline,
-			'seplocation' => $seplocation
+			'seplocation' => $seplocation,
 		);
 	}
 
@@ -696,7 +684,6 @@
 	 * @param bool $get_custom_field Fetch Title from InPost Custom Fields.
 	 * @param bool $escape Parse Title through saninitation calls.
 	 * @param bool $get_option Whether to fetch the SEO Settings option.
-	 *
 	 * @return string The Title.
 	 */
 	public function title_for_home( $home_title = '', $get_custom_field = true, $escape = false, $get_option = true ) {
@@ -734,9 +721,6 @@
 	 *
 	 * @param array $args The Title arguments.
 	 * @param bool $escape Parse Title through saninitation calls.
-	 *
-	 * @todo put args in array.
-	 *
 	 * @return string The Title.
 	 */
 	public function title_for_terms( $args = array(), $escape = false ) {
@@ -749,39 +733,22 @@
 		if ( $args['term_id'] && $args['taxonomy'] )
 			$term = get_term( $args['term_id'], $args['taxonomy'], OBJECT, 'raw' );
 
-		if ( $this->is_category() || $this->is_tag() ) {
-
-			if ( $args['get_custom_field'] ) {
-				if ( ! isset( $term ) )
-					$term = $this->fetch_the_term( $args['term_id'] );
-
-				$title = empty( $term->admeta['doctitle'] ) ? $title : $term->admeta['doctitle'];
-
-				$flag = isset( $term->admeta['saved_flag'] ) && $this->is_checked( $term->admeta['saved_flag'] ) ? true : false;
-				if ( false === $flag && empty( $title ) && isset( $term->meta['doctitle'] ) )
-					$title = empty( $term->meta['doctitle'] ) ? $title : $term->meta['doctitle'];
-			}
-
-			if ( empty( $title ) )
-				$title = $this->get_the_real_archive_title( $term, $args );
-
-		} else {
+		if ( $this->is_category() || $this->is_tag() || $this->is_tax() ) {
 			if ( ! isset( $term ) && $this->is_tax() )
 				$term = get_term_by( 'slug', get_query_var( 'term' ), get_query_var( 'taxonomy' ) );
 
-			if ( $args['get_custom_field'] && isset( $term ) ) {
-				$title = empty( $term->admeta['doctitle'] ) ? $title : wp_kses_stripslashes( wp_kses_decode_entities( $term->admeta['doctitle'] ) );
+			if ( ! isset( $term ) )
+				$term = $this->fetch_the_term( $args['term_id'] );
 
-				$flag = isset( $term->admeta['saved_flag'] ) && $this->is_checked( $term->admeta['saved_flag'] );
-				if ( false === $flag && empty( $title ) && isset( $term->meta['doctitle'] ) )
-					$title = empty( $term->meta['doctitle'] ) ? $title : wp_kses_stripslashes( wp_kses_decode_entities( $term->meta['doctitle'] ) );
+			if ( $args['get_custom_field'] ) {
+				$data = $this->get_term_data( $term, $args['term_id'] );
+				$title = empty( $data['doctitle'] ) ? $title : $data['doctitle'];
 			}
+		}
 
-			if ( empty( $title ) )
-				$title = $this->get_the_real_archive_title( $term, $args );
+		if ( empty( $title ) )
+			$title = $this->get_the_real_archive_title( $term, $args );
 
-		}
-
 		if ( $escape )
 			$title = $this->escape_title( $title, false );
 
@@ -797,12 +764,11 @@
 	 * @param bool $escape Parse Title through saninitation calls.
 	 * @param int $id The Post ID.
 	 * @param string $taxonomy The term name.
-	 *
 	 * @return string The Title.
 	 */
 	public function title_from_custom_field( $title = '', $escape = false, $id = null, $taxonomy = null ) {
 
-		$id = isset( $id ) ? $id : null;
+		$id = isset( $id ) ? $id : $this->get_the_real_ID();
 
 		/**
 		 * Create something special for blog page. Only if it's not the home page.
@@ -811,13 +777,15 @@
 		if ( $this->is_singular() ) {
 			//* Get title from custom field, empty it if it's not there to override the default title
 			$title = $this->get_custom_field( '_genesis_title', $id ) ? $this->get_custom_field( '_genesis_title', $id ) : $title;
-		} else if ( $this->is_blog_page( $id ) ) {
+		} elseif ( $this->is_blog_page( $id ) ) {
 			//* Posts page title.
 			$title = $this->get_custom_field( '_genesis_title', $id ) ? $this->get_custom_field( '_genesis_title', $id ) : get_the_title( $id );
-		} else if ( $this->is_archive() || ( $id && $taxonomy ) ) {
+		} elseif ( $this->is_archive() || ( $id && $taxonomy ) ) {
 			//* Get the custom title for terms.
 			$term = get_term( $id, $taxonomy, OBJECT, 'raw' );
-			$title = isset( $term->admeta['doctitle'] ) ? $term->admeta['doctitle'] : $title;
+			$data = $this->get_term_data( $term, $id );
+
+			$title = empty( $data['doctitle'] ) ? $title : $data['doctitle'];
 		}
 
 		if ( $escape )
@@ -830,10 +798,11 @@
 	 * Get the archive Title, including filter. Also works in admin.
 	 * @NOTE Taken from WordPress core. Altered to work in the Admin area.
 	 *
+	 * @since 2.6.0
+	 *
 	 * @param object $term The Term object.
 	 * @param array $args The Title arguments.
-	 *
-	 * @since 2.6.0
+	 * @return string The Archive Title.
 	 */
 	public function get_the_real_archive_title( $term = null, $args = array() ) {
 
@@ -862,61 +831,61 @@
 			$title = $this->single_term_title( '', false, $term );
 			/* translators: Front-end output. 1: Taxonomy singular name, 2: Current taxonomy term */
 			$title = $use_prefix ? sprintf( __( '%1$s: %2$s', 'autodescription' ), $this->get_the_term_name( $term ), $title ) : $title;
-		} else if ( $this->is_author() ) {
+		} elseif ( $this->is_author() ) {
 			$title = get_the_author();
 				/* translators: Front-end output. */
 			$title = $use_prefix ? sprintf( __( 'Author: %s', 'autodescription' ), $title ) : $title;
-		} else if ( $this->is_date() ) {
+		} elseif ( $this->is_date() ) {
 			if ( $this->is_year() ) {
 				/* translators: Front-end output. */
 				$title = get_the_date( _x( 'Y', 'yearly archives date format', 'autodescription' ) );
 				/* translators: Front-end output. */
 				$title = $use_prefix ? sprintf( __( 'Year: %s', 'autodescription' ), $title ) : $title;
-			} else if ( $this->is_month() ) {
+			} elseif ( $this->is_month() ) {
 				/* translators: Front-end output. */
 				$title = get_the_date( _x( 'F Y', 'monthly archives date format', 'autodescription' ) );
 				/* translators: Front-end output. */
 				$title = $use_prefix ? sprintf( __( 'Month: %s', 'autodescription' ), $title ) : $title;
-			} else if ( $this->is_day() ) {
+			} elseif ( $this->is_day() ) {
 				/* translators: Front-end output. */
 				$title = get_the_date( _x( 'F j, Y', 'daily archives date format', 'autodescription' ) );
 				/* translators: Front-end output. */
 				$title = $use_prefix ? sprintf( __( 'Day: %s', 'autodescription' ), $title ) : $title;
 			}
-		} else if ( $this->is_tax( 'post_format' ) ) {
+		} elseif ( $this->is_tax( 'post_format' ) ) {
 			if ( is_tax( 'post_format', 'post-format-aside' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Asides', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-gallery' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-gallery' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Galleries', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-image' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-image' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Images', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-video' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-video' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Videos', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-quote' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-quote' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Quotes', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-link' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-link' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Links', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-status' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-status' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Statuses', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-audio' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-audio' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Audio', 'post format archive title', 'autodescription' );
-			} else if ( $this->is_tax( 'post_format', 'post-format-chat' ) ) {
+			} elseif ( $this->is_tax( 'post_format', 'post-format-chat' ) ) {
 				/* translators: Front-end output. */
 				$title = _x( 'Chats', 'post format archive title', 'autodescription' );
 			}
-		} else if ( is_post_type_archive() ) {
+		} elseif ( is_post_type_archive() ) {
 			$title = post_type_archive_title( '', false );
 			/* translators: Front-end output. */
 			$title = $use_prefix ? sprintf( __( 'Archives: %s' ), $title ) : $title;
-		} else if ( isset( $term ) ) {
+		} elseif ( isset( $term ) ) {
 			$title = $this->single_term_title( '', false, $term );
 
 			if ( $use_prefix ) {
@@ -947,8 +916,6 @@
 		if ( ! $term )
 			return;
 
-		$term_name = '';
-
 		if ( isset( $term->name ) ) {
 			if ( $this->is_category() ) {
 				/**
@@ -959,7 +926,7 @@
 				* @param string $term_name Category name for archive being displayed.
 				*/
 				$term_name = apply_filters( 'single_cat_title', $term->name );
-			} else if ( $this->is_tag() ) {
+			} elseif ( $this->is_tag() ) {
 				/**
 				* Filter the tag archive page title.
 				*
@@ -968,7 +935,7 @@
 				* @param string $term_name Tag name for archive being displayed.
 				*/
 				$term_name = apply_filters( 'single_tag_title', $term->name );
-			} else if ( $this->is_tax() || $this->is_admin() ) {
+			} elseif ( $this->is_tax() || $this->is_admin() ) {
 				/**
 				* Filter the custom taxonomy archive page title.
 				*
@@ -982,18 +949,18 @@
 			}
 		}
 
-		//* Impossible through WordPress interface. Possible through filters.
+		//* Might be empty through filters.
 		if ( empty( $term_name ) )
 			$term_name = $this->untitled();
 
 		if ( $display )
-			echo $prefix . $term_name;
+			echo esc_attr( $prefix . $term_name );
 		else
 			return $prefix . $term_name;
 	}
 
 	/**
-	 * Return custom field title.
+	 * Returns custom field title.
 	 *
 	 * @since 2.6.0
 	 *
@@ -1000,7 +967,6 @@
 	 * @param string $title The current title.
 	 * @param int $id The post or TT ID.
 	 * @param string $taxonomy The TT name.
-	 *
 	 * @return string $title The custom field title.
 	 */
 	public function get_custom_field_title( $title = '', $id = '', $taxonomy = '' ) {
@@ -1021,7 +987,7 @@
 	}
 
 	/**
-	 * Untitled title.
+	 * Returns untitled title.
 	 *
 	 * @since 2.6.0
 	 *
@@ -1033,13 +999,12 @@
 	}
 
 	/**
-	 * Return Post Title from ID.
+	 * Returns Post Title from ID.
 	 *
 	 * @since 2.6.0
 	 *
 	 * @param int $id The Post ID.
-	 * @param string $title Optional. The current Title.
-	 *
+	 * @param string $title Optional. The current/fallback Title.
 	 * @return string Post Title
 	 */
 	public function post_title_from_ID( $id = 0, $title = '' ) {
@@ -1053,16 +1018,15 @@
 	}
 
 	/**
-	 * Return search title.
+	 * Returns search title.
 	 *
 	 * @since 2.6.0
 	 *
 	 * @param string $title the current title.
 	 * @param bool $escape Whether to escape attributes from query.
-	 *
 	 * @return string Search Title
 	 */
-	public function get_the_search_title( $title, $escape = true ) {
+	public function get_the_search_title( $title = '', $escape = true ) {
 
 		if ( $this->is_search() ) {
 			/* translators: Front-end output. */
@@ -1075,18 +1039,17 @@
 	}
 
 	/**
-	 * Return 404 title.
+	 * Returns 404 title.
 	 *
 	 * @since 2.6.0
 	 *
+	 * @since 2.5.2:
 	 * Applies filters string the_seo_framework_404_title
-	 * @since 2.5.2
 	 *
 	 * @param string $title The current Title
-	 *
 	 * @return string 404 Title
 	 */
-	public function get_the_404_title( $title ) {
+	public function get_the_404_title( $title = '' ) {
 
 		if ( $this->is_404() )
 			return (string) apply_filters( 'the_seo_framework_404_title', '404' );
@@ -1095,15 +1058,15 @@
 	}
 
 	/**
-	 * Get Title Separator.
+	 * Gets Title Separator.
 	 *
 	 * @since 2.6.0
 	 * @staticvar string $sep
 	 *
+	 * @since 2.3.9:
 	 * Applies filters the_seo_framework_title_separator
-	 * @since 2.3.9
 	 *
-	 * @return string The Separator
+	 * @return string The Separator, unescaped.
 	 */
 	public function get_title_separator() {
 
@@ -1112,23 +1075,22 @@
 		if ( isset( $sep ) )
 			return $sep;
 
-		return $sep = (string) apply_filters( 'the_seo_framework_title_separator', $this->get_separator( 'title' ) );
+		return $sep = (string) apply_filters( 'the_seo_framework_title_separator', $this->get_separator( 'title', false ) );
 	}
 
 	/**
-	 * Get Title Seplocation.
+	 * Gets Title Seplocation.
 	 *
+	 * @since 2.3.9
 	 * Applies filters the_seo_framework_title_seplocation : string the title location.
 	 * Applies filters the_seo_framework_title_seplocation_front : string the home page title location.
-	 * @since 2.3.9
 	 *
 	 * @access private
-	 * @since 2.6.0
+	 * @since 2.6.0:
 	 * @staticvar string $cache
 	 *
 	 * @param string $seplocation The current seplocation.
 	 * @param bool $home The home seplocation.
-	 *
 	 * @return string The Seplocation
 	 */
 	public function get_title_seplocation( $seplocation = '', $home = false ) {
@@ -1135,27 +1097,26 @@
 
 		static $cache = array();
 
-		if ( isset( $cache[$seplocation][$home] ) )
-			return $cache[$seplocation][$home];
+		if ( isset( $cache[ $seplocation ][ $home ] ) )
+			return $cache[ $seplocation ][ $home ];
 
 		if ( empty( $seplocation ) || 'right' !== $seplocation || 'left' !== $seplocation ) {
 			if ( $home ) {
-				return $cache[$seplocation][$home] = (string) apply_filters( 'the_seo_framework_title_seplocation_front', $this->get_option( 'home_title_location' ) );
+				return $cache[ $seplocation ][ $home ] = (string) apply_filters( 'the_seo_framework_title_seplocation_front', $this->get_option( 'home_title_location' ) );
 			} else {
-				return $cache[$seplocation][$home] = (string) apply_filters( 'the_seo_framework_title_seplocation', $this->get_option( 'title_location' ) );
+				return $cache[ $seplocation ][ $home ] = (string) apply_filters( 'the_seo_framework_title_seplocation', $this->get_option( 'title_location' ) );
 			}
 		}
 
-		return $cache[$seplocation][$home] = $seplocation;
+		return $cache[ $seplocation ][ $home ] = $seplocation;
 	}
 
 	/**
-	 * Get Title Seplocation for the homepage.
+	 * Gets Title Seplocation for the homepage.
 	 *
 	 * @since 2.6.0
 	 *
 	 * @param string $seplocation The current seplocation.
-	 *
 	 * @return string The Seplocation for the homepage.
 	 */
 	public function get_home_title_seplocation( $seplocation = '' ) {
@@ -1165,10 +1126,10 @@
 	/**
 	 * Determines whether to add or remove title additions.
 	 *
+	 * @since 2.4.3
 	 * Applies filters the_seo_framework_add_blogname_to_title : boolean
-	 * @since 2.4.3
 	 *
-	 * @since 2.6.0
+	 * @since 2.6.0:
 	 * @staticvar bool $add
 	 *
 	 * @return bool True when additions are allowed.
@@ -1188,13 +1149,14 @@
 	}
 
 	/**
-	 * Add the title additions to the title.
+	 * Adds the title additions to the title.
 	 *
+	 * @since 2.6.0
+	 *
 	 * @param string $title The tite.
 	 * @param string $blogname The blogname.
 	 * @param string $seplocation The separator location.
-	 *
-	 * @since 2.6.0
+	 * @return string Title with possible additions.
 	 */
 	public function process_title_additions( $title = '', $blogname = '', $seplocation = '' ) {
 
@@ -1221,7 +1183,6 @@
 	 *
 	 * @param $title The current Title.
 	 * @param $id The page ID.
-	 *
 	 * @return string $title with possible affixes.
 	 */
 	public function add_title_protection( $title, $id ) {
@@ -1235,18 +1196,18 @@
 		 *
 		 * @since 2.4.1
 		 *
-		 * @applies filters core : protected_title_format
-		 * @applies filters core : private_title_format
+		 * @applies filters WordPress core 'protected_title_format' : string
+		 * @applies filters WordPress core 'private_title_format' : string
 		 */
 		$post = get_post( $id, OBJECT );
 
 		if ( isset( $post->post_password ) && '' !== $post->post_password ) {
 			/* translators: Front-end output */
-			$protected_title_format = apply_filters( 'protected_title_format', __( 'Protected: %s', 'autodescription' ), $post );
+			$protected_title_format = (string) apply_filters( 'protected_title_format', __( 'Protected: %s', 'autodescription' ), $post );
 			$title = sprintf( $protected_title_format, $title );
-		} else if ( isset( $post->post_status ) && 'private' === $post->post_status ) {
+		} elseif ( isset( $post->post_status ) && 'private' === $post->post_status ) {
 			/* translators: Front-end output */
-			$private_title_format = apply_filters( 'private_title_format', __( 'Private: %s', 'autodescription' ), $post );
+			$private_title_format = (string) apply_filters( 'private_title_format', __( 'Private: %s', 'autodescription' ), $post );
 			$title = sprintf( $private_title_format, $title );
 		}
 
@@ -1259,12 +1220,11 @@
 	 * @since 2.6.0
 	 *
 	 * @param string $title The current Title.
-	 *
 	 * @return string Title with maybe pagination added.
 	 */
 	public function add_title_pagination( $title ) {
 
-		if ( $this->is_404() || $this->is_admin() )
+		if ( $this->is_404() || $this->is_admin() || $this->is_preview() )
 			return $title;
 
 		$page = $this->page();
@@ -1287,7 +1247,7 @@
 	}
 
 	/**
-	 * Whether to use a title prefix or not.
+	 * Determines whether to use a title prefix or not.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $cache
@@ -1294,7 +1254,6 @@
 	 *
 	 * @param object $term The Term object.
 	 * @param array $args The title arguments.
-	 *
 	 * @return bool
 	 */
 	public function use_archive_prefix( $term = null, $args = array() ) {
@@ -1319,11 +1278,11 @@
 		$filter = (bool) apply_filters( 'the_seo_framework_use_archive_title_prefix', true, $term );
 		$option = ! $this->get_option( 'title_rem_prefixes' );
 
-		return $cache = $option && $filter ? true : false;
+		return $cache = $option && $filter;
 	}
 
 	/**
-	 * Filter the title prior to output.
+	 * Filters the title prior to output.
 	 *
 	 * @since 2.6.0
 	 * @access private
@@ -1331,7 +1290,6 @@
 	 * @param string $title The current title.
 	 * @param array $args The title args.
 	 * @param bool $escape Whether to escape the title.
-	 *
 	 * @return string $title
 	 */
 	public function do_title_pre_filter( $title, $args, $escape = true ) {
@@ -1352,7 +1310,7 @@
 	}
 
 	/**
-	 * Filter the title prior to output.
+	 * Filters the title prior to output.
 	 *
 	 * @since 2.6.0
 	 * @access private
@@ -1360,7 +1318,6 @@
 	 * @param string $title The current title.
 	 * @param array $args The title args.
 	 * @param bool $escape Whether to escape the title.
-	 *
 	 * @return string $title
 	 */
 	public function do_title_pro_filter( $title, $args, $escape = true ) {
@@ -1381,7 +1338,7 @@
 	}
 
 	/**
-	 * Whether to add home page tagline.
+	 * Determines whether to add home page tagline.
 	 *
 	 * @since 2.6.0
 	 *
@@ -1390,5 +1347,4 @@
 	public function home_page_add_title_tagline() {
 		return $this->is_option_checked( 'homepage_tagline' );
 	}
-
 }
Index: inc/classes/generate-url.class.php
===================================================================
--- inc/classes/generate-url.class.php	(revision 1475679)
+++ inc/classes/generate-url.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Generate_Url
  *
@@ -35,15 +37,6 @@
 	protected $url_slashit;
 
 	/**
-	 * Whether to add a subdomain to the url if set.
-	 *
-	 * @since 2.6.0
-	 *
-	 * @var string The subdomain.
-	 */
-	protected $add_subdomain;
-
-	/**
 	 * Holds current HTTP host.
 	 *
 	 * @since 2.6.5
@@ -53,21 +46,22 @@
 	protected $current_host;
 
 	/**
-	 * Holds home HTTP host.
-	 *
-	 * @since 2.6.5
-	 *
-	 * @var string The home HTTP host.
+	 * Unserializing instances of this class is forbidden.
 	 */
-	protected $home_host;
+	private function __wakeup() { }
 
 	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor and set up variables.
 	 */
 	public function __construct() {
 		parent::__construct();
-
-		$this->home_host = parse_url( get_option( 'home' ), PHP_URL_HOST );
 	}
 
 	/**
@@ -95,7 +89,7 @@
 	 */
 	public function the_url( $url = '', $args = array() ) {
 
-		if ( $this->the_seo_framework_debug && false === $this->doing_sitemap ) $this->debug_init( __CLASS__, __FUNCTION__, true, $debug_key = microtime(true), get_defined_vars() );
+		if ( $this->the_seo_framework_debug && false === $this->doing_sitemap ) $this->debug_init( __METHOD__, true, $debug_key = microtime( true ), get_defined_vars() );
 
 		$args = $this->reparse_url_args( $args );
 
@@ -108,7 +102,7 @@
 
 		//* Reset cache.
 		$this->url_slashit = true;
-		$this->add_subdomain = '';
+		$this->unset_current_subdomain();
 		$this->current_host = '';
 
 		$path = '';
@@ -131,7 +125,8 @@
 				if ( $custom_url ) {
 					$url = $custom_url;
 					$this->url_slashit = false;
-					$scheme = parse_url( $custom_url, PHP_URL_SCHEME );
+					$parsed_url = wp_parse_url( $custom_url );
+					$scheme = isset( $parsed_url['scheme'] ) ? $parsed_url['scheme'] : 'http';
 				}
 			}
 
@@ -162,10 +157,8 @@
 
 		//* Non-domainmap URL
 		if ( empty( $url ) ) {
-			if ( $args['home'] ) {
-				$this->current_lang = '';
-				$this->add_subdomain = '';
-			}
+			if ( $args['home'] )
+				$this->unset_current_subdomain();
 
 			$url = $this->add_url_host( $path );
 			$scheme = is_ssl() ? 'https' : 'http';
@@ -199,7 +192,7 @@
 			$url = esc_url_raw( $url );
 		}
 
-		if ( $this->the_seo_framework_debug && false === $this->doing_sitemap ) $this->debug_init( __CLASS__, __FUNCTION__, false, $debug_key, array( 'url_output' => $url ) );
+		if ( $this->the_seo_framework_debug && false === $this->doing_sitemap ) $this->debug_init( __METHOD__, false, $debug_key, array( 'url_output' => $url ) );
 
 		return $url;
 	}
@@ -207,10 +200,8 @@
 	/**
 	 * Parse and sanitize url args.
 	 *
-	 * @param array $args required The passed arguments.
-	 * @param array $defaults The default arguments.
-	 * @param bool $get_defaults Return the default arguments. Ignoring $args.
-	 *
+	 * @since 2.4.2
+	 * @since 2.5.0:
 	 * @applies filters the_seo_framework_url_args : {
 	 * 		@param bool $paged Return current page URL without pagination if false
 	 * 		@param bool $paged_plural Whether to add pagination for the second or later page.
@@ -224,7 +215,9 @@
 	 *		@param int $id The Page or Term ID.
 	 * }
 	 *
-	 * @since 2.4.2
+	 * @param array $args required The passed arguments.
+	 * @param array $defaults The default arguments.
+	 * @param bool $get_defaults Return the default arguments. Ignoring $args.
 	 * @return array $args parsed args.
 	 */
 	public function parse_url_args( $args = array(), $defaults = array(), $get_defaults = false ) {
@@ -241,10 +234,9 @@
 				'term'				=> null,
 				'home'				=> false,
 				'forceslash'		=> false,
-				'id'				=> $this->get_the_real_ID()
+				'id'				=> $this->get_the_real_ID(),
 			);
 
-			//* @since 2.5.0
 			$defaults = (array) apply_filters( 'the_seo_framework_url_args', $defaults, $args );
 		}
 
@@ -281,7 +273,7 @@
 		$default_args = $this->parse_url_args( '', '', true );
 
 		if ( is_array( $args ) ) {
-			 if ( empty( $args ) ) {
+			if ( empty( $args ) ) {
 				$args = $default_args;
 			} else {
 				$args = $this->parse_url_args( $args, $default_args );
@@ -288,7 +280,7 @@
 			}
 		} else {
 			//* Old style parameters are used. Doing it wrong.
-			$this->_doing_it_wrong( __CLASS__ . '::' . __FUNCTION__, 'Use $args = array() for parameters.', '2.4.2' );
+			$this->_doing_it_wrong( __METHOD__, 'Use $args = array() for parameters.', '2.4.2' );
 			$args = $default_args;
 		}
 
@@ -299,8 +291,8 @@
 	 * Generate URL from arguments.
 	 *
 	 * @since 2.6.0
-	 *
 	 * @global object $wp
+	 * @NOTE: Handles full path, including home directory.
 	 *
 	 * @param array $args the URL args.
 	 * @return string $path
@@ -309,7 +301,8 @@
 
 		$args = $this->reparse_url_args( $args );
 
-		if ( $args['is_term'] || $this->is_archive() ) {
+		if ( $this->is_archive() || $args['is_term'] ) {
+
 			$term = $args['term'];
 
 			//* Term or Taxonomy.
@@ -319,7 +312,7 @@
 			if ( isset( $term->taxonomy ) ) {
 				//* Registered Terms and Taxonomies.
 				$path = $this->get_relative_term_url( $term, $args );
-			} else if ( ! $args['external'] ) {
+			} elseif ( ! $args['external'] ) {
 				//* Everything else.
 				global $wp;
 				$path = trailingslashit( get_option( 'home' ) ) . $wp->request;
@@ -328,7 +321,6 @@
 				//* Nothing to see here...
 				$path = '';
 			}
-
 		} else {
 
 			/**
@@ -358,8 +350,8 @@
 	 * Generates relative URL for the Homepage and Singular Posts.
 	 *
 	 * @since 2.6.5
-	 *
 	 * @global object $wp
+	 * @NOTE: Handles full path, including home directory.
 	 *
 	 * @param int $post_id The ID.
 	 * @param array $args The URL arguments.
@@ -368,10 +360,11 @@
 	public function build_singular_relative_url( $post_id = null, $args = array() ) {
 
 		if ( ! isset( $post_id ) ) {
-			if ( ! $args['external'] )
-				$post_id = $this->get_the_real_ID();
-			else
+			//* We can't fetch the post ID when there's an external request.
+			if ( $args['external'] )
 				return '';
+
+			$post_id = $this->get_the_real_ID();
 		}
 
 		$args = $this->reparse_url_args( $args );
@@ -378,14 +371,13 @@
 
 		if ( $args['external'] || ! $this->is_front_page() ) {
 			$url = get_permalink( $post_id );
-		} else if ( $this->is_front_page() ) {
+		} elseif ( $this->is_front_page() ) {
 			$url = get_home_url();
-		} else if ( ! $args['external'] ) {
+		} elseif ( ! $args['external'] ) {
 			global $wp;
 
 			if ( isset( $wp->request ) )
 				$url = trailingslashit( get_option( 'home' ) ) . $wp->request;
-
 		}
 
 		//* No permalink found.
@@ -392,22 +384,22 @@
 		if ( ! isset( $url ) )
 			return '';
 
-		if ( $this->is_singular() )
-			$paged = $this->maybe_get_paged( $this->page(), $args['paged'], $args['paged_plural'] );
-		else
-			$paged = $this->maybe_get_paged( $this->paged(), $args['paged'], $args['paged_plural'] );
+		$paged = $this->is_singular() ? $this->page() : $this->paged();
+		$paged = $this->maybe_get_paged( $paged, $args['paged'], $args['paged_plural'] );
 
 		if ( $paged ) {
 			if ( $this->pretty_permalinks ) {
-				if ( $this->is_singular() )
+				if ( $this->is_singular() ) {
 					$url = trailingslashit( $url ) . $paged;
-				else
+				} else {
 					$url = trailingslashit( $url ) . 'page/' . $paged;
+				}
 			} else {
-				if ( $this->is_singular() )
+				if ( $this->is_singular() ) {
 					$url = add_query_arg( 'page', $paged, $url );
-				else
+				} else {
 					$url = add_query_arg( 'paged', $paged, $url );
+				}
 			}
 		}
 
@@ -420,6 +412,8 @@
 	 * Create full valid URL with parsed host.
 	 * Don't forget to use set_url_scheme() afterwards.
 	 *
+	 * Note: will return $path if no host can be found.
+	 *
 	 * @since 2.6.5
 	 *
 	 * @param string $path Current path.
@@ -427,22 +421,23 @@
 	 */
 	public function add_url_host( $path = '' ) {
 
-		$host = $this->current_host ? $this->current_host : $this->home_host;
+		$host = $this->current_host ? $this->current_host : $this->get_home_host();
 
-		return $url = 'http://' . trailingslashit( $host ) . ltrim( $path, ' \\/' );
+		$scheme = $host ? 'http://' : '';
+
+		return $url = $scheme . trailingslashit( $host ) . ltrim( $path, ' \\/' );
 	}
 
 	/**
 	 * Generates relative URL for current post_ID for translation plugins.
 	 *
-	 * @param string $path the current URL path.
-	 * @param int $post_id The post ID.
-	 * @param bool $external Whether to fetch the WP Request or get the permalink by Post Object.
-	 *
 	 * @since 2.6.0
-	 *
 	 * @global object $post
+	 * @NOTE: Handles full path, including home directory.
 	 *
+	 * @param string $path the current URL path.
+	 * @param int $post_id The post ID.
+	 * @param bool $external Whether the request for URL generation is external.
 	 * @return relative Post or Page url.
 	 */
 	public function get_translation_path( $path = '', $post_id = null, $external = false ) {
@@ -450,7 +445,7 @@
 		if ( is_object( $post_id ) )
 			$post_id = isset( $post_id->ID ) ? $post_id->ID : $this->get_the_real_ID();
 
-		if ( ! isset( $post_id ) )
+		if ( is_null( $post_id ) )
 			$post_id = $this->get_the_real_ID();
 
 		//* WPML support.
@@ -467,20 +462,19 @@
 	/**
 	 * Generates qtranslate URL.
 	 *
-	 * @param string $path The current path.
-	 * @param int $post_id The Post ID. Unused.
-	 *
+	 * @since 2.6.0
+	 * @staticvar int $q_config_mode
 	 * @global array $q_config
+	 * @NOTE: Handles full path, including home directory.
 	 *
-	 * @staticvar int $q_config_mode
-	 *
-	 * @since 2.6.0
+	 * @param string $path The current path.
+	 * @param int $post_id The Post ID. Unused until qTranslate provides external URL forgery.
 	 */
 	public function get_relative_qtranslate_url( $path = '', $post_id = '' ) {
 
 		//* Reset cache.
 		$this->url_slashit = true;
-		$this->add_subdomain = '';
+		$this->unset_current_subdomain();
 
 		static $q_config_mode = null;
 
@@ -500,7 +494,6 @@
 			return $path;
 
 		switch ( $q_config_mode ) {
-
 			case '1' :
 				//* Negotiation type query var.
 
@@ -527,12 +520,15 @@
 
 			case '3' :
 				//* Notify cache of subdomain addition.
-				$this->add_subdomain = $current_lang;
+				$this->set_current_subdomain( $current_lang );
 
 				//* No need to alter the path.
 				return $path;
 				break;
 
+			default :
+				return $path;
+				break;
 		}
 
 		return $path;
@@ -544,8 +540,8 @@
 	 * @since 2.4.3
 	 * @staticvar bool $gli_exists
 	 * @staticvar string $default_lang
-	 *
 	 * @global object $sitepress
+	 * @NOTE: Handles full path, including home directory.
 	 *
 	 * @param string $path The current path.
 	 * @param int $post_id The Post ID.
@@ -556,7 +552,7 @@
 
 		//* Reset cache.
 		$this->url_slashit = true;
-		$this->add_subdomain = '';
+		$this->unset_current_subdomain();
 
 		if ( ! isset( $sitepress ) )
 			return $path;
@@ -583,7 +579,7 @@
 		 * This should be put inside a callable function.
 		 * @since 2.6.0
 		 */
-		$lang_info = apply_filters( 'wpml_post_language_details', NULL, $post_id );
+		$lang_info = apply_filters( 'wpml_post_language_details', null, $post_id );
 
 		if ( is_wp_error( $lang_info ) ) {
 			//* Terms and Taxonomies.
@@ -623,10 +619,11 @@
 				 * @priority OMG WTF BBQ
 				 */
 				$contains_path = strpos( $path, '/' . $current_lang . '/' );
-				if ( false !== $contains_path && 0 === $contains_path )
+				if ( false !== $contains_path && 0 === $contains_path ) {
 					return $path;
-				else
+				} else {
 					return $path = trailingslashit( $current_lang ) . ltrim( $path, ' \\/' );
+				}
 				break;
 
 			case '2' :
@@ -639,7 +636,7 @@
 					return $path;
 
 				$current_lang_setting = $this->make_fully_qualified_url( $current_lang_setting );
-				$parsed = parse_url( $current_lang_setting );
+				$parsed = wp_parse_url( $current_lang_setting );
 
 				$this->current_host = isset( $parsed['host'] ) ? $parsed['host'] : '';
 				$current_path = isset( $parsed['path'] ) ? trailingslashit( $parsed['path'] ) : '';
@@ -671,7 +668,10 @@
 	/**
 	 * Generates relative URL for current term.
 	 *
-	 * @global WP_Rewrite object $wp_rewrite
+	 * @since 2.4.2
+	 * @since 2.7.0 Added home directory to output.
+	 * @global object $wp_rewrite
+	 * @NOTE: Handles full path, including home directory.
 	 *
 	 * @param object $term The term object.
 	 * @param array|bool $args {
@@ -679,9 +679,6 @@
 	 *		'paged'	: Whether to add pagination for all types.
 	 *		'paged_plural' : Whether to add pagination for the second or later page.
 	 * }
-	 *
-	 * @since 2.4.2
-	 *
 	 * @return Relative term or taxonomy URL.
 	 */
 	public function get_relative_term_url( $term = null, $args = array() ) {
@@ -692,7 +689,7 @@
 			 * @since 2.6.0
 			 * '$args = array()' replaced '$no_request = false'.
 			 */
-			$this->_doing_it_wrong( __CLASS__ . '::' . __FUNCTION__, 'Use $args = array() for parameters.', '2.6.0' );
+			$this->_doing_it_wrong( __METHOD__, 'Use $args = array() for parameters.', '2.6.0' );
 
 			$no_request = (bool) $args;
 			$args = $this->parse_url_args( '', '', true );
@@ -719,7 +716,7 @@
 
 			if ( 'category' === $taxonomy ) {
 				$path = '?cat=' . $term->term_id;
-			} else if ( isset( $t->query_var ) && '' !== $t->query_var ) {
+			} elseif ( isset( $t->query_var ) && '' !== $t->query_var ) {
 				$path = '?' . $t->query_var . '=' . $slug;
 			} else {
 				$path = '?taxonomy=' . $taxonomy . '&term=' . $slug;
@@ -755,8 +752,9 @@
 			$path = user_trailingslashit( $path, 'category' );
 		}
 
-		//* Leading Slash it..
-		$path = '/' . ltrim( $path, ' \\/' );
+		//* Add plausible domain subdirectories.
+		$url = trailingslashit( get_option( 'home' ) ) . ltrim( $path, ' \\/' );
+		$path = $this->set_url_scheme( $url, 'relative' );
 
 		return $path;
 	}
@@ -774,15 +772,11 @@
 	 */
 	public function set_url_scheme( $url, $scheme = null, $use_filter = true ) {
 
-		/**
-		 * Core should uphold the coding standards (Yoda code). Open issue @link Github.com?
-		 * @todo yoda-fy
-		 */
 		if ( ! isset( $scheme ) ) {
 			$scheme = is_ssl() ? 'https' : 'http';
-		} else if ( $scheme === 'admin' || $scheme === 'login' || $scheme === 'login_post' || $scheme === 'rpc' ) {
+		} elseif ( 'admin' === $scheme || 'login' === $scheme  || 'login_post' === $scheme || 'rpc' === $scheme ) {
 			$scheme = is_ssl() || force_ssl_admin() ? 'https' : 'http';
-		} else if ( $scheme !== 'http' && $scheme !== 'https' && $scheme !== 'relative' ) {
+		} elseif ( 'http' !== $scheme && 'https' !== $scheme && 'relative' !== $scheme ) {
 			$scheme = is_ssl() ? 'https' : 'http';
 		}
 
@@ -790,9 +784,8 @@
 
 		if ( 'relative' === $scheme ) {
 			$url = ltrim( preg_replace( '#^\w+://[^/]*#', '', $url ) );
-			if ( $url !== '' && $url[0] === '/' )
+			if ( '' !== $url && '/' === $url[0] )
 				$url = '/' . ltrim( $url , "/ \t\n\r\0\x0B" );
-
 		} else {
 			//* This will break if $scheme is set to false.
 			$url = preg_replace( '#^\w+://#', $scheme . '://', $url );
@@ -811,7 +804,6 @@
 	 *
 	 * @param string $url The url with scheme.
 	 * @param string $scheme The current scheme.
-	 *
 	 * @return $url with applied filters.
 	 */
 	public function set_url_scheme_filter( $url, $current_scheme ) {
@@ -820,12 +812,12 @@
 		 * Applies filters the_seo_framework_canonical_force_scheme : Changes scheme.
 		 *
 		 * Accepted variables:
-		 * (string) 'https'		: 	Force https
-		 * (bool) true 			: 	Force https
-		 * (bool) false			: 	Force http
-		 * (string) 'http'		: 	Force http
-		 * (string) 'relative' 	:	Scheme relative
-		 * (void) null			: 	Do nothing
+		 * (string) 'https'		: Force https
+		 * (bool) true 			: Force https
+		 * (bool) false			: Force http
+		 * (string) 'http'		: Force http
+		 * (string) 'relative' 	: Scheme relative
+		 * (void) null			: Do nothing
 		 *
 		 * @param string $current_scheme the current used scheme.
 		 *
@@ -841,9 +833,9 @@
 		if ( isset( $scheme_settings ) ) {
 			if ( 'https' === $scheme_settings || 'http' === $scheme_settings || 'relative' === $scheme_settings ) {
 				$url = $this->set_url_scheme( $url, $scheme_settings, false );
-			} else if ( ! $scheme_settings ) {
+			} elseif ( ! $scheme_settings ) {
 				$url = $this->set_url_scheme( $url, 'http', false );
-			} else if ( $scheme_setting ) {
+			} elseif ( $scheme_setting ) {
 				$url = $this->set_url_scheme( $url, 'https', false );
 			}
 		}
@@ -852,15 +844,13 @@
 	}
 
 	/**
-	 * Try to get an canonical URL when WPMUdev Domain Mapping is active.
+	 * Creates a full canonical URL when WPMUdev Domain Mapping is active from path.
 	 *
 	 * @since 2.3.0
+	 * @since 2.4.0 Added $get_scheme parameter.
 	 *
 	 * @param string $path The post relative path.
-	 *
 	 * @param bool $get_scheme Output array with scheme.
-	 * @since 2.4.0
-	 *
 	 * @return string|array|void The unescaped URL, the scheme
 	 */
 	public function the_url_wpmudev_domainmap( $path, $get_scheme = false ) {
@@ -878,7 +868,7 @@
 
 		$cache_key = 'wpmudev_mapped_domain_' . $revision . '_' . $blog_id;
 
-		//* Check if the domain is mapped
+		//* Check if the domain is mapped. Store in object cache.
 		$mapped_domain = $this->object_cache_get( $cache_key );
 		if ( false === $mapped_domain ) {
 
@@ -886,6 +876,7 @@
 
 			$primary_key = 0;
 			$domain_ids = array();
+
 			foreach ( $mapped_domains as $key => $domain ) {
 				if ( isset( $domain->is_primary ) && '1' === $domain->is_primary ) {
 					$primary_key = $key;
@@ -895,7 +886,7 @@
 				} else {
 					//* Save IDs.
 					if ( isset( $domain->id ) && $domain->id )
-						$domain_ids[$key] = $domain->id;
+						$domain_ids[ $key ] = $domain->id;
 				}
 			}
 
@@ -906,7 +897,7 @@
 			}
 
 			//* Set 0, as we check for false to begin with.
-			$mapped_domain = isset( $mapped_domains[$primary_key] ) ? $mapped_domains[$primary_key] : 0;
+			$mapped_domain = isset( $mapped_domains[ $primary_key ] ) ? $mapped_domains[ $primary_key ] : 0;
 
 			$this->object_cache_set( $cache_key, $mapped_domain, 3600 );
 		}
@@ -931,11 +922,10 @@
 			//* Put it all together.
 			$url = trailingslashit( $scheme_full . $domain ) . ltrim( $path, ' \\/' );
 
-			if ( ! $get_scheme ) {
+			if ( $get_scheme )
+				return array( $url, $scheme );
+			else
 				return $url;
-			} else {
-				return array( $url, $scheme );
-			}
 		}
 
 		return '';
@@ -944,11 +934,10 @@
 	/**
 	 * Try to get an canonical URL when Donncha Domain Mapping is active.
 	 *
+	 * @since 2.4.0
+	 *
 	 * @param string $path The post relative path.
 	 * @param bool $get_scheme Output array with scheme.
-	 *
-	 * @since 2.4.0
-	 *
 	 * @return string|array|void The unescaped URL, the scheme
 	 */
 	public function the_url_donncha_domainmap( $path, $get_scheme = false ) {
@@ -963,10 +952,9 @@
 
 		$request_uri = '';
 
-		if ( $url && $url !== untrailingslashit( $scheme . '://' . $current_blog->domain . $current_blog->path ) ) {
-			if ( ( defined( 'VHOST' ) && 'yes' !== VHOST ) || ( defined( 'SUBDOMAIN_INSTALL' ) && false === SUBDOMAIN_INSTALL ) ) {
+		if ( $url && untrailingslashit( $scheme . '://' . $current_blog->domain . $current_blog->path ) !== $url ) {
+			if ( ( defined( 'VHOST' ) && 'yes' !== VHOST ) || ( defined( 'SUBDOMAIN_INSTALL' ) && false === SUBDOMAIN_INSTALL ) )
 				$request_uri = str_replace( $current_blog->path, '/', $_SERVER['REQUEST_URI'] );
-			}
 
 			$url = trailingslashit( $url . $request_uri ) . ltrim( $path, '\\/ ' );
 
@@ -986,9 +974,8 @@
 	 * @since 2.2.2
 	 * @global object $wp_query
 	 *
-	 * @param int $post_id The post ID
-	 *
-	 * @return string|null Escaped site Shortlink URL
+	 * @param int $post_id The post ID.
+	 * @return string|null Escaped site Shortlink URL.
 	 */
 	public function get_shortlink( $post_id = 0 ) {
 
@@ -998,7 +985,6 @@
 
 			if ( false === $this->is_front_page() ) {
 				if ( $this->is_singular( $post_id ) ) {
-
 					if ( 0 === $post_id )
 						$post_id = $this->get_the_real_ID();
 
@@ -1010,16 +996,14 @@
 							$path = '?page_id=' . $post_id;
 						}
 					}
-				} else if ( $this->is_archive() ) {
-
+				} elseif ( $this->is_archive() ) {
 					if ( $this->is_category() ) {
 						$id = get_queried_object_id();
 						$path = '?cat=' . $id;
-					} else if ( $this->is_tag() ) {
+					} elseif ( $this->is_tag() ) {
 						$id = get_queried_object_id();
 						$path = '?post_tag=' . $id;
-					} else if ( $this->is_date() ) {
-						// This isn't exactly "short" for a shortlink...
+					} elseif ( $this->is_date() ) {
 						global $wp_query;
 
 						$query = $wp_query->query;
@@ -1033,10 +1017,10 @@
 						}
 
 						$path = $var;
-					} else if ( $this->is_author() ) {
+					} elseif ( $this->is_author() ) {
 						$id = get_queried_object_id();
 						$path = '?author=' . $id;
-					} else if ( $this->is_tax() ) {
+					} elseif ( $this->is_tax() ) {
 						//* Generate shortlink for object type and slug.
 						$object = get_queried_object();
 
@@ -1049,7 +1033,6 @@
 								$path = '?' . $t . '=' . $slug;
 						}
 					}
-
 				}
 			}
 
@@ -1064,10 +1047,11 @@
 
 				$additions = '';
 				if ( isset( $query ) ) {
-					if ( false !== strpos( $query, '&' ) )
+					if ( false !== strpos( $query, '&' ) ) {
 						$query = explode( '&', $query );
-					else
+					} else {
 						$query = array( $query );
+					}
 
 					foreach ( $query as $arg ) {
 						if ( false === strpos( $path, $arg ) )
@@ -1099,13 +1083,12 @@
 	}
 
 	/**
-	 * Generates Previous and Next links
+	 * Generates Previous and Next links.
 	 *
 	 * @since 2.2.4
 	 *
-	 * @param string $prev_next Previous or next page link
-	 * @param int $post_id The post ID
-	 *
+	 * @param string $prev_next Previous or next page link.
+	 * @param int $post_id The post ID.
 	 * @return string|null Escaped site Pagination URL
 	 */
 	public function get_paged_url( $prev_next = 'next', $post_id = 0 ) {
@@ -1130,12 +1113,11 @@
 
 				if ( 'prev' === $prev_next ) {
 					$prev = $page > 1 ? $this->get_paged_post_url( $page - 1, $post_id, 'prev' ) : '';
-				} else if ( 'next' === $prev_next ) {
+				} elseif ( 'next' === $prev_next ) {
 					$next = $page < $numpages ? $this->get_paged_post_url( $page + 1, $post_id, 'next' ) : '';
 				}
-
 			}
-		} else if ( $this->is_archive() || $this->is_home() ) {
+		} elseif ( $this->is_archive() || $this->is_home() ) {
 
 			$output_archive_paged = false;
 			if ( $this->is_front_page() ) {
@@ -1156,7 +1138,7 @@
 						$paged = 1;
 
 					$prev = get_pagenum_link( $paged, false );
-				} else if ( 'next' === $prev_next && $paged < $GLOBALS["wp_query"]->max_num_pages ) {
+				} elseif ( 'next' === $prev_next && $paged < $GLOBALS['wp_query']->max_num_pages ) {
 
 					if ( ! $paged )
 						$paged = 1;
@@ -1188,7 +1170,6 @@
 	 * @param int $i The page number to generate the URL from.
 	 * @param int $post_id The post ID
 	 * @param string $pos Which url to get, accepts next|prev
-	 *
 	 * @return string Unescaped URL
 	 */
 	public function get_paged_post_url( $i, $post_id = 0, $pos = 'prev' ) {
@@ -1198,7 +1179,7 @@
 		if ( empty( $post_id ) )
 			$post_id = $this->get_the_real_ID();
 
-		if ( $i === 1 ) {
+		if ( 1 === $i ) {
 			$url = $this->the_url_from_cache( '', $post_id, false, $from_option, false );
 		} else {
 			$post = get_post( $post_id );
@@ -1222,12 +1203,12 @@
 					//* We're adding a page.
 					$last_occurence = strrpos( $urlfromcache, '/' . $current . '/' );
 
-					if ( $last_occurence !== false )
+					if ( false !== $last_occurence )
 						$urlfromcache = substr_replace( $urlfromcache, '/', $last_occurence, strlen( '/' . $current . '/' ) );
 				}
 			}
 
-			if ( ! $this->pretty_permalinks || in_array( $post->post_status, array( 'draft', 'auto-draft', 'pending' ) ) ) {
+			if ( ! $this->pretty_permalinks || in_array( $post->post_status, array( 'draft', 'auto-draft', 'pending' ), true ) ) {
 
 				//* Put removed query arg back prior to adding pagination.
 				if ( isset( $query_arg ) )
@@ -1234,10 +1215,10 @@
 					$urlfromcache = $urlfromcache . '?' . $query_arg;
 
 				$url = add_query_arg( 'page', $i, $urlfromcache );
-			} else if ( $this->is_static_frontpage( $post_id ) ) {
+			} elseif ( $this->is_static_frontpage( $post_id ) ) {
 				global $wp_rewrite;
 
-				$url = trailingslashit( $urlfromcache ) . user_trailingslashit( $wp_rewrite->pagination_base . "/" . $i, 'single_paged' );
+				$url = trailingslashit( $urlfromcache ) . user_trailingslashit( $wp_rewrite->pagination_base . '/' . $i, 'single_paged' );
 
 				//* Add back query arg if removed.
 				if ( isset( $query_arg ) )
@@ -1255,7 +1236,7 @@
 	}
 
 	/**
-	 * Adds subdomain to URL.
+	 * Adds subdomain to input URL.
 	 *
 	 * @since 2.6.5
 	 *
@@ -1267,12 +1248,13 @@
 		$url = $this->make_fully_qualified_url( $url );
 
 		//* Add subdomain, if set.
-		if ( $this->add_subdomain ) {
-			$scheme = parse_url( $url, PHP_URL_SCHEME );
+		if ( $subdomain = $this->get_current_subdomain() ) {
+			$parsed_url = wp_parse_url( $url );
+			$scheme = isset( $parsed_url['scheme'] ) ? $parsed_url['scheme'] : 'http';
 			$url = str_replace( $scheme . '://', '', $url );
 
 			//* Put it together.
-			$url = $scheme . '://' . $this->add_subdomain . '.' . $url;
+			$url = $scheme . '://' . $subdomain . '.' . $url;
 		}
 
 		return $url;
@@ -1279,6 +1261,53 @@
 	}
 
 	/**
+	 * Fetches current subdomain set by $this->set_current_subdomain();
+	 *
+	 * @since 2.7.0
+	 * @staticvar string $subdomain
+	 *
+	 * @param null|string $set Whether to set a new subdomain.
+	 * @param bool $unset Whether to remove subdomain from cache.
+	 * @return string|bool The set subdomain, false if none is set.
+	 */
+	public function get_current_subdomain( $set = null, $unset = false ) {
+
+		static $subdomain = null;
+
+		if ( isset( $set ) )
+			$subdomain = esc_html( $set );
+
+		if ( $unset )
+			unset( $subdomain );
+
+		if ( isset( $subdomain ) )
+			return $subdomain;
+
+		return false;
+	}
+
+	/**
+	 * Sets current working subdomain.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param string $subdomain The current subdomain.
+	 * @return string The set subdomain.
+	 */
+	public function set_current_subdomain( $subdomain = '' ) {
+		return $this->get_current_subdomain( $subdomain );
+	}
+
+	/**
+	 * Unsets current working subdomain.
+	 *
+	 * @since 2.7.0
+	 */
+	public function unset_current_subdomain() {
+		$this->get_current_subdomain( null, true );
+	}
+
+	/**
 	 * Cached WordPress permalink structure settings.
 	 *
 	 * @since 2.6.0
@@ -1331,13 +1360,59 @@
 	 */
 	public function make_fully_qualified_url( $url ) {
 
-		if ( '//' === substr( $url, 0, 2 ) ) {
+		if ( '//' === substr( $url, 0, 2 ) )
 			$url = 'http:' . $url;
-		} else if ( 'http' !== substr( $url, 0, 4 ) ) {
+		elseif ( 'http' !== substr( $url, 0, 4 ) )
 			$url = 'http://' . $url;
-		}
 
 		return $url;
 	}
 
+	/**
+	 * Fetches home URL host. Like "wordpress.org".
+	 * If this fails, you're going to have a bad time.
+	 *
+	 * @since 2.7.0
+	 * @staticvar string $cache
+	 *
+	 * @return string The home URL host.
+	 */
+	public function get_home_host() {
+
+		static $cache = null;
+
+		if ( isset( $cache ) )
+			return $cache;
+
+		$parsed_url = wp_parse_url( get_option( 'home' ) );
+
+		$host = isset( $parsed_url['host'] ) ? $parsed_url['host'] : '';
+
+		return $cache = $host;
+	}
+
+	/**
+	 * Fetches home URL subdirectory path. Like "wordpress.org/plugins/".
+	 *
+	 * @since 2.7.0
+	 * @staticvar string $cache
+	 *
+	 * @return string The home URL path.
+	 */
+	public function get_home_path() {
+
+		static $cache = null;
+
+		if ( isset( $cache ) )
+			return $cache;
+
+		$path = '';
+
+		$parsed_url = wp_parse_url( get_option( 'home' ) );
+
+		if ( ! empty( $parsed_url['path'] ) && $path = ltrim( $parsed_url['path'], ' \\/' ) )
+			$path = '/' . $path;
+
+		return $cache = $path;
+	}
 }
Index: inc/classes/generate.class.php
===================================================================
--- inc/classes/generate.class.php	(revision 1475679)
+++ inc/classes/generate.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Generate
  *
@@ -26,6 +28,18 @@
 class AutoDescription_Generate extends AutoDescription_TermData {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -84,53 +98,27 @@
 				$meta['noindex'] = 'noindex';
 		}
 
-		if ( $this->is_category() || $this->is_tag() ) {
-			$term = get_queried_object();
+		if ( $this->is_category() || $this->is_tag() || $this->is_tax() ) {
 
-			$meta['noindex']   = empty( $meta['noindex'] ) && $term->admeta['noindex'] ? 'noindex' : $meta['noindex'];
-			$meta['nofollow']  = empty( $meta['nofollow'] ) && $term->admeta['nofollow'] ? 'nofollow' : $meta['nofollow'];
-			$meta['noarchive'] = empty( $meta['noarchive'] ) && $term->admeta['noarchive'] ? 'noarchive' : $meta['noarchive'];
+			$data = $this->get_term_data();
 
+			$meta['noindex']   = empty( $meta['noindex'] ) && ! empty( $data['noindex'] ) ? 'noindex' : $meta['noindex'];
+			$meta['nofollow']  = empty( $meta['nofollow'] ) && ! empty( $data['nofollow'] ) ? 'nofollow' : $meta['nofollow'];
+			$meta['noarchive'] = empty( $meta['noarchive'] ) && ! empty( $data['noarchive'] ) ? 'noarchive' : $meta['noarchive'];
+
+			//* If on custom Taxonomy page, but not a category or tag, then should've received specific term SEO settings.
 			if ( $this->is_category() ) {
 				$meta['noindex']   = empty( $meta['noindex'] ) && $this->is_option_checked( 'category_noindex' ) ? 'noindex' : $meta['noindex'];
 				$meta['nofollow']  = empty( $meta['nofollow'] ) && $this->is_option_checked( 'category_nofollow' ) ? 'nofollow' : $meta['nofollow'];
 				$meta['noarchive'] = empty( $meta['noarchive'] ) && $this->is_option_checked( 'category_noindex' ) ? 'noarchive' : $meta['noarchive'];
-			} else if ( $this->is_tag() ) {
+			} elseif ( $this->is_tag() ) {
 				$meta['noindex']   = empty( $meta['noindex'] ) && $this->is_option_checked( 'tag_noindex' ) ? 'noindex' : $meta['noindex'];
 				$meta['nofollow']  = empty( $meta['nofollow'] ) && $this->is_option_checked( 'tag_nofollow' ) ? 'nofollow' : $meta['nofollow'];
 				$meta['noarchive'] = empty( $meta['noarchive'] ) && $this->is_option_checked( 'tag_noindex' ) ? 'noarchive' : $meta['noarchive'];
 			}
-
-			$flag = isset( $term->admeta['saved_flag'] ) && $this->is_checked( $term->admeta['saved_flag'] );
-
-			if ( false === $flag && isset( $term->meta ) ) {
-				//* Genesis support.
-				$meta['noindex']   = empty( $meta['noindex'] ) && isset( $term->meta['noindex'] ) && $term->meta['noindex'] ? 'noindex' : $meta['noindex'];
-				$meta['nofollow']  = empty( $meta['nofollow'] ) && isset( $term->meta['nofollow'] ) && $term->meta['nofollow'] ? 'nofollow' : $meta['nofollow'];
-				$meta['noarchive'] = empty( $meta['noarchive'] ) && isset( $term->meta['noarchive'] ) && $term->meta['noarchive'] ? 'noarchive' : $meta['noarchive'];
-			}
 		}
 
-		// Is custom Taxonomy page. But not a category or tag. Should've recieved specific term SEO settings.
-		if ( $this->is_tax() ) {
-			$term = get_term_by( 'slug', get_query_var( 'term' ), get_query_var( 'taxonomy' ) );
-
-			$meta['noindex']   = empty( $meta['noindex'] ) && $term->admeta['noindex'] ? 'noindex' : $meta['noindex'];
-			$meta['nofollow']  = empty( $meta['nofollow'] ) && $term->admeta['nofollow'] ? 'nofollow' : $meta['nofollow'];
-			$meta['noarchive'] = empty( $meta['noarchive'] ) && $term->admeta['noarchive'] ? 'noarchive' : $meta['noarchive'];
-		}
-
 		if ( $this->is_author() ) {
-			// $author_id = (int) get_query_var( 'author' );
-
-			/**
-			 * @todo
-			 * @priority high 2.6.x
-			 */
-			// $meta['noindex']   = empty( $meta['noindex'] ) && get_the_author_meta( 'noindex', $author_id ) ? 'noindex' : $meta['noindex'];
-			// $meta['nofollow']  = empty( $meta['nofollow'] ) && get_the_author_meta( 'nofollow', $author_id ) ? 'nofollow' : $meta['nofollow'];
-			// $meta['noarchive'] = empty( $meta['noarchive'] ) && get_the_author_meta( 'noarchive', $author_id ) ? 'noarchive' : $meta['noarchive'];
-
 			$meta['noindex']   = empty( $meta['noindex'] ) && $this->is_option_checked( 'author_noindex' ) ? 'noindex' : $meta['noindex'];
 			$meta['nofollow']  = empty( $meta['nofollow'] ) && $this->is_option_checked( 'author_nofollow' ) ? 'nofollow' : $meta['nofollow'];
 			$meta['noarchive'] = empty( $meta['noarchive'] ) && $this->is_option_checked( 'author_noarchive' ) ? 'noarchive' : $meta['noarchive'];
@@ -183,15 +171,16 @@
 	 *
 	 * @since 2.3.9
 	 */
-	public function get_separator( $type = 'title', $escape = false ) {
+	public function get_separator( $type = 'title', $escape = true ) {
 
-		static $sepcache = array();
 		static $sep_esc = array();
 
-		if ( isset( $sep_esc[$type][$escape] ) )
-			return $sep_esc[$type][$escape];
+		if ( isset( $sep_esc[ $type ][ $escape ] ) )
+			return $sep_esc[ $type ][ $escape ];
 
-		if ( ! isset( $sepcache[$type] ) ) {
+		static $sepcache = array();
+
+		if ( ! isset( $sepcache[ $type ] ) ) {
 			if ( 'title' === $type ) {
 				$sep_option = $this->get_option( 'title_seperator' ); // Note: typo.
 			} else {
@@ -200,9 +189,9 @@
 
 			if ( 'pipe' === $sep_option ) {
 				$sep = '|';
-			} else if ( 'dash' === $sep_option ) {
+			} elseif ( 'dash' === $sep_option ) {
 				$sep = '-';
-			} else if ( '' !== $sep_option ) {
+			} elseif ( '' !== $sep_option ) {
 				//* Encapsulate within html entities.
 				$sep = '&' . $sep_option . ';';
 			} else {
@@ -210,23 +199,23 @@
 				$sep = '|';
 			}
 
-			$sepcache[$type] = $sep;
+			$sepcache[ $type ] = $sep;
 		}
 
 		if ( $escape ) {
-			return $sep_esc[$type][$escape] = esc_html( $sepcache[$type] );
+			return $sep_esc[ $type ][ $escape ] = esc_html( $sepcache[ $type ] );
 		} else {
-			return $sep_esc[$type][$escape] = $sepcache[$type];
+			return $sep_esc[ $type ][ $escape ] = $sepcache[ $type ];
 		}
 	}
 
 	/**
-	 * Fetch blogname
+	 * Fetches blogname.
 	 *
 	 * @staticvar string $blogname
 	 *
 	 * @since 2.5.2
-	 * @return string $blogname The trimmed and sanitized blogname
+	 * @return string $blogname The trimmed and sanitized blogname.
 	 */
 	public function get_blogname() {
 
@@ -287,7 +276,7 @@
 			//* Full locale is used.
 
 			//* Return the match if found.
-			if ( in_array( $match, $valid_locales ) )
+			if ( in_array( $match, $valid_locales, true ) )
 				return $match;
 
 			//* Convert to only language portion.
@@ -303,7 +292,7 @@
 			//* No need to do for each loop. Just match the keys.
 			if ( $key = array_search( $match, $locale_keys ) ) {
 				//* Fetch the corresponding value from key within the language array.
-				return $valid_locales[$key];
+				return $valid_locales[ $key ];
 			}
 		}
 
@@ -310,4 +299,39 @@
 		return $default;
 	}
 
+	/**
+	 * Generates the Open Graph type based on query status.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @return string The Open Graph type.
+	 */
+	public function generate_og_type() {
+
+		if ( $this->is_wc_product() ) {
+			$type = 'product';
+		} elseif ( $this->is_single() && $this->get_image_from_cache() ) {
+			$type = 'article';
+		} elseif ( $this->is_author() ) {
+			$type = 'profile';
+		} elseif ( $this->is_blog_page() || ( $this->is_front_page() && ! $this->has_page_on_front() ) ) {
+			$type = 'blog';
+		} else {
+			$type = 'website';
+		}
+
+		return $type;
+	}
+
+	/**
+	 * Generates the Twitter Card type. When there's an image found, it will
+	 * take the said option. Otherwise, it will fall back to 'summary'.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @return string The Twitter Card type.
+	 */
+	public function generate_twitter_card_type() {
+		return $this->get_image_from_cache() ? $this->get_option( 'twitter_card' ) : 'summary';
+	}
 }
Index: inc/classes/init.class.php
===================================================================
--- inc/classes/init.class.php	(revision 1475679)
+++ inc/classes/init.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Init
  *
@@ -35,6 +37,18 @@
 	protected $use_object_cache = true;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor. Initializes actions and loads parent constructor.
 	 */
 	public function __construct() {
@@ -44,8 +58,7 @@
 		add_action( 'template_redirect', array( $this, 'custom_field_redirect' ) );
 
 		/**
-		 * Applies filters : the_seo_framework_use_object_cache
-		 *
+		 * Applies filters 'the_seo_framework_use_object_cache' : bool
 		 * @since 2.4.3
 		 */
 		$this->use_object_cache = (bool) apply_filters( 'the_seo_framework_use_object_cache', true );
@@ -88,12 +101,11 @@
 		//* Earlier removal of the generator tag. Doesn't require filter.
 		remove_action( 'wp_head', 'wp_generator' );
 
-		if ( $this->is_theme( 'genesis', false ) ) {
+		if ( $this->is_theme( 'genesis' ) ) {
 			add_action( 'genesis_meta', array( $this, 'html_output' ), 5 );
 		} else {
 			add_action( 'wp_head', array( $this, 'html_output' ), 1 );
 		}
-
 	}
 
 	/**
@@ -113,7 +125,7 @@
 		//* Override bbPress title
 		add_filter( 'bbp_title', array( $this, 'title_from_cache' ), 99, 3 );
 		//* Override Woo Themes Title
-		add_filter( 'woo_title', array( $this, 'title_from_cache'), 99 );
+		add_filter( 'woo_title', array( $this, 'title_from_cache' ), 99 );
 
 		/**
 		 * Applies filters 'the_seo_framework_manipulate_title' : boolean
@@ -311,9 +323,9 @@
 			 */
 			$sybre = (bool) apply_filters( 'sybre_waaijer_<3', true );
 
-			$start = __( 'Start The Seo Framework', 'autodescription' );
-			$end = __( 'End The Seo Framework', 'autodescription' );
-			$me =  $sybre ? ' ' . __( 'by Sybre Waaijer', 'autodescription' ) : '';
+			$start = esc_html__( 'Start The Seo Framework', 'autodescription' );
+			$end = esc_html__( 'End The Seo Framework', 'autodescription' );
+			$me = $sybre ? ' ' . esc_html__( 'by Sybre Waaijer', 'autodescription' ) : '';
 
 			$indicatorbefore = '<!-- ' . $start . $me . ' -->' . "\r\n";
 
@@ -333,7 +345,9 @@
 
 		do_action( 'the_seo_framework_do_after_output' );
 
+		//* Already escaped.
 		echo $output;
+
 	}
 
 	/**
@@ -346,7 +360,7 @@
 	public function custom_field_redirect() {
 
 		//* Prevent redirect from options on uneditable pages.
-		if ( ! $this->is_singular() || $this->is_admin() )
+		if ( false === $this->is_singular() || $this->is_admin() )
 			return;
 
 		$url = $this->get_custom_field( 'redirect' );
@@ -360,45 +374,14 @@
 				$url = $this->set_url_scheme( $url, 'relative' );
 				$url = $this->add_url_host( $url );
 				$scheme = is_ssl() ? 'https' : 'http';
+
+				wp_safe_redirect( esc_url_raw( $url, array( $scheme ) ), 301 );
+				exit;
 			}
 
-			wp_redirect( esc_url_raw( $url, $scheme ), 301 );
+			//* @TODO set scheme filter, adjustable through (multisite) extensions?
+			wp_redirect( esc_url_raw( $url ), 301 );
 			exit;
 		}
-
 	}
-
-	/**
-	 * Well, this is annoying.
-	 *
-	 * @since 2.4.2
-	 * @return something that will make your head explode.
-	 */
-	public function explode() {
-		add_action( 'wp_head', array( $this, 'roll' ) );
-
-		/* the code to run this :
-		add_action( 'init', 'tsf_explode' );
-		function tsf_explode() {
-			if ( function_exists( 'the_seo_framework' ) ) {
-				$the_seo_framework = the_seo_framework();
-				if ( isset( $the_seo_framework ) )
-					$the_seo_framework->explode();
-			}
-		}
-		*/
-	}
-
-	/**
-	 * After using explosions, you tend to roll away.
-	 *
-	 * @since 2.5.2
-	 */
-	public function roll() {
-		?>
-		<style>div:hover>div{-webkit-animation:troll 5s infinite cubic-bezier(0,1.5,.5,1)1s;animation:troll 5s infinite cubic-bezier(0,1.5,.5,1)1s}@-webkit-keyframes troll{100%{-webkit-transform:rotate(0)}75%{-webkit-transform:rotate(30deg)}25%{-webkit-transorm:rotate(0)}0%{-webkit-transorm:rotate(30deg)}}@keyframes troll{100%,25%{transform:rotate(0)}0%,75%{transform:rotate(30deg)}}#container:hover,.site-container:hover{-webkit-animation:none;animation:none}</style>
-		<?php
-		echo "\r\n";
-	}
-
 }
Index: inc/classes/inpost.class.php
===================================================================
--- inc/classes/inpost.class.php	(revision 1475679)
+++ inc/classes/inpost.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Inpost
  *
@@ -35,11 +37,44 @@
 	protected $inpost_seo_bar = false;
 
 	/**
+	 * Defines inpost nonce name.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @var string The nonce name.
+	 */
+	public $inpost_nonce_name;
+
+	/**
+	 * Defines inpost nonce field.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @var string The nonce field.
+	 */
+	public $inpost_nonce_field;
+
+	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
 		parent::__construct();
 
+		$this->inpost_nonce_name = 'the_seo_framework_inpost_seo_settings';
+		$this->inpost_nonce_field = 'the_seo_framework_inpost';
+
 		//* Enqueue Inpost meta boxes.
 		add_action( 'add_meta_boxes', array( $this, 'add_inpost_seo_box_init' ), 5 );
 
@@ -59,12 +94,8 @@
 	}
 
 	/**
-	 * Render the SEO meta box
+	 * Adds the SEO meta box to post edit screens.
 	 *
-	 * Called outside autodescription_run
-	 *
-	 * Applies filters the_seo_framework_seobox_output : bool
-	 *
 	 * @since 2.0.0
 	 */
 	public function add_inpost_seo_box_init() {
@@ -72,6 +103,10 @@
 		if ( $this->detect_seo_plugins() )
 			return;
 
+		/**
+		 * Applies filters the_seo_framework_seobox_output : bool
+		 * @since 2.0.0
+		 */
 		$show_seobox = (bool) apply_filters( 'the_seo_framework_seobox_output', true );
 
 		if ( $show_seobox )
@@ -83,30 +118,26 @@
 	 * Adds SEO Meta boxes within Taxonomy screens.
 	 *
 	 * @since 2.1.8
+	 * @since 2.6.0 Can no longer run outside of the term edit scope.
+	 * @since 2.6.0 Can no longer run when another SEO plugin is active.
 	 */
 	public function add_taxonomy_seo_box_init() {
 
-		//* @since 2.6.0
-		if ( $this->detect_seo_plugins() )
+		if ( $this->detect_seo_plugins() || ! $this->is_term_edit() )
 			return;
 
-		//* @since 2.6.0
-		if ( $this->is_term_edit() ) {
+		/**
+		 * High priority, this box is seen right below the post/page edit screen.
+		 * Applies filters 'the_seo_framework_term_metabox_priority' : int
+		 *
+		 * @since 2.6.0
+		 */
+		$priority = (int) apply_filters( 'the_seo_framework_term_metabox_priority', 0 );
 
-			/**
-			 * High priority, this box is seen right below the post/page edit screen.
-			 * Applies filters 'the_seo_framework_term_metabox_priority' : int
-			 *
-			 * @since 2.6.0
-			 */
-			$priority = (int) apply_filters( 'the_seo_framework_term_metabox_priority', 0 );
+		//* Add taxonomy meta boxes
+		foreach ( get_taxonomies( array( 'public' => true ) ) as $tax_name )
+			add_action( $tax_name . '_edit_form', array( $this, 'pre_seo_box' ), $priority, 2 );
 
-			//* Add taxonomy meta boxes
-			foreach ( get_taxonomies( array( 'public' => true ) ) as $tax_name )
-				add_action( $tax_name . '_edit_form', array( $this, 'pre_seo_box' ), $priority, 2 );
-
-		}
-
 	}
 
 	/**
@@ -141,7 +172,7 @@
 					 * @TODO solve note.
 					 * @priority medium 2.7.0
 					 */
-					$id = (string) apply_filters( 'the_seo_framework_metabox_id', 'theseoframework-inpost-box' );
+					$id = (string) apply_filters( 'the_seo_framework_metabox_id', 'tsf-inpost-box' );
 					$context = 'normal';
 
 					/**
@@ -223,12 +254,12 @@
 
 			// Only add nonce on post/page edit screen
 			if ( 'is_post_page' === $page ) {
-				wp_nonce_field( 'inpost_seo_save', 'hmpl_ad_inpost_seo_nonce' );
+				wp_nonce_field( $this->inpost_nonce_field, $this->inpost_nonce_name );
 			} else {
 				// This shouldn't happen.
 				return;
 			}
-		} else if ( is_object( $object ) ) {
+		} elseif ( is_object( $object ) ) {
 
 			//* Singular name.
 			$type = $this->get_the_term_name( $object, true, false );
@@ -270,18 +301,18 @@
 		//* Get the language the Google page should assume.
 		$language = $this->google_language();
 
-		$data = $this->get_term_data( $object );
+		//* Fetch Term ID and taxonomy.
+		$term_id = $object->term_id;
+		$taxonomy = $object->taxonomy;
 
-		$title = isset( $data['title'] ) ? $data['title'] : '';
+		$data = $this->get_term_data( $object, $term_id );
+
+		$title = isset( $data['doctitle'] ) ? $data['doctitle'] : '';
 		$description = isset( $data['description'] ) ? $data['description'] : '';
 		$noindex = isset( $data['noindex'] ) ? $data['noindex'] : '';
 		$nofollow = isset( $data['nofollow'] ) ? $data['nofollow'] : '';
 		$noarchive = isset( $data['noarchive'] ) ? $data['noarchive'] : '';
 
-		//* Fetch Term ID and taxonomy.
-		$term_id = $object->term_id;
-		$taxonomy = $object->taxonomy;
-
 		$generated_doctitle_args = array(
 			'term_id' => $term_id,
 			'taxonomy' => $taxonomy,
@@ -308,7 +339,7 @@
 		 *
 		 * @since 2.3.4
 		 */
-		$doc_pre_rem = $add_additions ? $title . " | " . $blog_name : $title;
+		$doc_pre_rem = $add_additions ? $title . ' | ' . $blog_name : $title;
 		$title_len = $title ? $doc_pre_rem : $generated_doctitle;
 		$description_len = $description	? $description : $generated_description;
 
@@ -330,7 +361,7 @@
 		$description_placeholder = $generated_description;
 
 		?>
-		<h3><?php printf( __( '%s SEO Settings', 'autodescription' ), $type ); ?></h3>
+		<h3><?php printf( esc_html__( '%s SEO Settings', 'autodescription' ), $type ); ?></h3>
 
 		<table class="form-table">
 			<tbody>
@@ -337,7 +368,7 @@
 
 				<?php if ( 'above' === $this->inpost_seo_bar ) : ?>
 				<tr>
-					<th scope="row" valign="top"><?php _e( 'Doing it Right', 'autodescription' ); ?></th>
+					<th scope="row" valign="top"><?php esc_html_e( 'Doing it Right', 'autodescription' ); ?></th>
 					<td>
 						<?php echo $this->post_status( $term_id, $taxonomy, true ); ?>
 					</td>
@@ -347,16 +378,19 @@
 				<tr class="form-field">
 					<th scope="row" valign="top">
 						<label for="autodescription-meta[doctitle]">
-							<strong><?php printf( __( '%s Title', 'autodescription' ), $type ); ?></strong>
-							<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#3" target="_blank" title="<?php _e( 'Recommended Length: 50 to 55 characters', 'autodescription' ) ?>">[?]</a>
+							<strong><?php printf( esc_html__( '%s Title', 'autodescription' ), $type ); ?></strong>
+							<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#3" target="_blank" title="<?php esc_html_e( 'Recommended Length: 50 to 55 characters', 'autodescription' ) ?>">[?]</a>
 						</label>
 					</th>
 					<td>
-						<div id="autodescription-title-wrap">
+						<div id="tsf-title-wrap">
 							<input name="autodescription-meta[doctitle]" id="autodescription-meta[doctitle]" type="text" placeholder="<?php echo $title_placeholder ?>" value="<?php echo esc_attr( $title ); ?>" size="40" />
-							<span id="autodescription-title-offset" class="hide-if-no-js"></span><span id="autodescription-title-placeholder" class="hide-if-no-js"></span>
+							<span id="tsf-title-offset" class="hide-if-no-js"></span><span id="tsf-title-placeholder" class="hide-if-no-js"></span>
 						</div>
-						<p class="description theseoframework-counter"><?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription-meta[doctitle]_chars">'. mb_strlen( $tit_len_parsed ) .'</span>' ); ?></p>
+						<p class="description tsf-counter">
+							<?php printf( esc_html__( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription-meta[doctitle]_chars">'. mb_strlen( $tit_len_parsed ) .'</span>' ); ?>
+							<span class="hide-if-no-js tsf-ajax"></span>
+						</p>
 					</td>
 				</tr>
 
@@ -363,36 +397,39 @@
 				<tr class="form-field">
 					<th scope="row" valign="top">
 						<label for="autodescription-meta[description]">
-							<strong><?php printf( __( '%s Meta Description', 'autodescription' ), $type ); ?></strong>
-							<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#1" target="_blank" title="<?php _e( 'Recommended Length: 145 to 155 characters', 'autodescription' ) ?>">[?]</a>
+							<strong><?php printf( esc_html__( '%s Meta Description', 'autodescription' ), $type ); ?></strong>
+							<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#1" target="_blank" title="<?php esc_html_e( 'Recommended Length: 145 to 155 characters', 'autodescription' ) ?>">[?]</a>
 						</label>
 					</th>
 					<td>
 						<textarea name="autodescription-meta[description]" id="autodescription-meta[description]" placeholder="<?php echo $description_placeholder ?>" rows="5" cols="50" class="large-text"><?php echo esc_html( $description ); ?></textarea>
-						<p class="description theseoframework-counter"><?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription-meta[description]_chars">'. mb_strlen( $desc_len_parsed ) .'</span>' ); ?></p>
+						<p class="description tsf-counter">
+							<?php printf( esc_html__( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription-meta[description]_chars">'. mb_strlen( $desc_len_parsed ) .'</span>' ); ?>
+							<span class="hide-if-no-js tsf-ajax"></span>
+						</p>
 					</td>
 				</tr>
 
 				<tr>
-					<th scope="row" valign="top"><?php _e( 'Robots Meta Settings', 'autodescription' ); ?></th>
+					<th scope="row" valign="top"><?php esc_html_e( 'Robots Meta Settings', 'autodescription' ); ?></th>
 					<td>
 						<label for="autodescription-meta[noindex]"><input name="autodescription-meta[noindex]" id="autodescription-meta[noindex]" type="checkbox" value="1" <?php checked( $noindex ); ?> />
-							<?php printf( __( 'Apply %s to this term', 'autodescription' ), $this->code_wrap( 'noindex' ) ); ?>
-							<a href="https://support.google.com/webmasters/answer/93710?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( __( 'Tell Search Engines not to show this page in their search results', 'autodescription' ) ) ?>">[?]</a>
+							<?php printf( esc_html__( 'Apply %s to this term?', 'autodescription' ), $this->code_wrap( 'noindex' ) ); ?>
+							<a href="https://support.google.com/webmasters/answer/93710?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( esc_html__( 'Tell Search Engines not to show this page in their search results', 'autodescription' ) ) ?>">[?]</a>
 						</label>
 
 						<br>
 
 						<label for="autodescription-meta[nofollow]"><input name="autodescription-meta[nofollow]" id="autodescription-meta[nofollow]" type="checkbox" value="1" <?php checked( $nofollow ); ?> />
-							<?php printf( __( 'Apply %s to this term', 'autodescription' ), $this->code_wrap( 'nofollow' ) ); ?>
-							<a href="https://support.google.com/webmasters/answer/96569?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( __( 'Tell Search Engines not to follow links on this page', 'autodescription' ) ) ?>">[?]</a>
+							<?php printf( esc_html__( 'Apply %s to this term?', 'autodescription' ), $this->code_wrap( 'nofollow' ) ); ?>
+							<a href="https://support.google.com/webmasters/answer/96569?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( esc_html__( 'Tell Search Engines not to follow links on this page', 'autodescription' ) ) ?>">[?]</a>
 						</label>
 
 						<br>
 
 						<label for="autodescription-meta[noarchive]"><input name="autodescription-meta[noarchive]" id="autodescription-meta[noarchive]" type="checkbox" value="1" <?php checked( $noarchive ); ?> />
-							<?php printf( __( 'Apply %s to this term', 'autodescription' ), $this->code_wrap( 'noarchive' ) ); ?>
-							<a href="https://support.google.com/webmasters/answer/79812?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( __( 'Tell Search Engines not to save a cached copy of this page', 'autodescription' ) ) ?>">[?]</a>
+							<?php printf( esc_html__( 'Apply %s to this term?', 'autodescription' ), $this->code_wrap( 'noarchive' ) ); ?>
+							<a href="https://support.google.com/webmasters/answer/79812?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( esc_html__( 'Tell Search Engines not to save a cached copy of this page', 'autodescription' ) ) ?>">[?]</a>
 						</label>
 
 						<?php // Saved flag, if set then it won't fetch for Genesis meta anymore ?>
@@ -404,7 +441,7 @@
 
 				<?php if ( 'below' === $this->inpost_seo_bar ) : ?>
 				<tr>
-					<th scope="row" valign="top"><?php _e( 'Doing it Right', 'autodescription' ); ?></th>
+					<th scope="row" valign="top"><?php esc_html_e( 'Doing it Right', 'autodescription' ); ?></th>
 					<td>
 						<?php echo $this->post_status( $term_id, $taxonomy, true ); ?>
 					</td>
@@ -464,7 +501,7 @@
 				'is_home' => true,
 				'get_custom_field' => true,
 			);
-		} else if ( $this->is_blog_page( $post_id ) ) {
+		} elseif ( $this->is_blog_page( $post_id ) ) {
 			//* Page for posts.
 			$generated_doctitle_args = array(
 				'placeholder' => true,
@@ -496,11 +533,10 @@
 		 * @since 2.3.4
 		 */
 		if ( $is_static_frontpage ) {
-			if ( $this->get_option( 'homepage_tagline' ) ) {
+			if ( $this->get_option( 'homepage_tagline' ) )
 				$tit_len_pre = $title ? $title . " | " . $this->get_blogdescription() : $generated_doctitle;
-			} else {
+			else
 				$tit_len_pre = $title ? $title : $generated_doctitle;
-			}
 		} else {
 			/**
 			 * Separator doesn't matter. Since html_entity_decode is used.
@@ -508,11 +544,10 @@
 			 *
 			 * @since 2.3.4
 			 */
-			if ( $this->add_title_additions() ) {
+			if ( $this->add_title_additions() )
 				$tit_len_pre = $title ? $title . " | " . $this->get_blogname() : $generated_doctitle;
-			} else {
+			else
 				$tit_len_pre = $title ? $title : $generated_doctitle;
-			}
 		}
 
 		//* Fetch description from option.
@@ -562,29 +597,35 @@
 		?>
 		<?php if ( 'above' === $this->inpost_seo_bar ) : ?>
 		<p>
-			<strong><?php _e( 'Doing it Right', 'autodescription' ); ?></strong>
+			<strong><?php esc_html_e( 'Doing it Right', 'autodescription' ); ?></strong>
 			<div><?php echo $this->post_status( $post_id, 'inpost', true ); ?></div>
 		</p>
 		<?php endif; ?>
 
 		<p>
-			<label for="autodescription_title"><strong><?php printf( __( 'Custom %s Title', 'autodescription' ), $type ); ?></strong>
-				<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#3" target="_blank" title="<?php _e( 'Recommended Length: 50 to 55 characters', 'autodescription' ); ?>">[?]</a>
-				<span class="description theseoframework-counter"><?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription_title_chars">'. mb_strlen( $tit_len_parsed ) .'</span>' ); ?></span>
+			<label for="autodescription_title"><strong><?php printf( esc_html__( 'Custom %s Title', 'autodescription' ), $type ); ?></strong>
+				<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#3" target="_blank" title="<?php esc_html_e( 'Recommended Length: 50 to 55 characters', 'autodescription' ); ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( esc_html__( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription_title_chars">'. mb_strlen( $tit_len_parsed ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
 			</label>
 		</p>
 		<p>
-			<div id="autodescription-title-wrap">
+			<div id="tsf-title-wrap">
 				<input class="large-text" type="text" name="autodescription[_genesis_title]" id="autodescription_title" placeholder="<?php echo $doctitle_placeholder ?>" value="<?php echo esc_attr( $this->get_custom_field( '_genesis_title' ) ); ?>" />
-				<span id="autodescription-title-offset" class="hide-if-no-js"></span><span id="autodescription-title-placeholder" class="hide-if-no-js"></span>
+				<span id="tsf-title-offset" class="hide-if-no-js"></span><span id="tsf-title-placeholder" class="hide-if-no-js"></span>
 			</div>
 		</p>
 
 		<p>
 			<label for="autodescription_description">
-				<strong><?php printf( __( 'Custom %s Description', 'autodescription' ), $type ); ?></strong>
-				<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#1" target="_blank" title="<?php _e( 'Recommended Length: 145 to 155 characters', 'autodescription' ); ?>">[?]</a>
-				<span class="description theseoframework-counter"><?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription_description_chars">'. mb_strlen( $desc_len_parsed ) .'</span>' ); ?></span>
+				<strong><?php printf( esc_html__( 'Custom %s Description', 'autodescription' ), $type ); ?></strong>
+				<a href="https://support.google.com/webmasters/answer/35624?hl=<?php echo $language; ?>#1" target="_blank" title="<?php esc_html_e( 'Recommended Length: 145 to 155 characters', 'autodescription' ); ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( esc_html__( 'Characters Used: %s', 'autodescription' ), '<span id="autodescription_description_chars">'. mb_strlen( $desc_len_parsed ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
 			</label>
 		</p>
 		<p>
@@ -593,8 +634,8 @@
 
 		<p>
 			<label for="autodescription_canonical">
-				<strong><?php _e( 'Custom Canonical URL', 'autodescription' ); ?></strong>
-				<a href="https://support.google.com/webmasters/answer/139066?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( __( 'Preferred %s URL location', 'autodescription' ), $type ); ?>">[?]</a>
+				<strong><?php esc_html_e( 'Custom Canonical URL', 'autodescription' ); ?></strong>
+				<a href="https://support.google.com/webmasters/answer/139066?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( esc_html__( 'Preferred %s URL location', 'autodescription' ), $type ); ?>">[?]</a>
 			</label>
 		</p>
 		<p>
@@ -601,14 +642,14 @@
 			<input class="large-text" type="text" name="autodescription[_genesis_canonical_uri]" id="autodescription_canonical" placeholder="<?php echo $canonical_placeholder ?>" value="<?php echo esc_url( $this->get_custom_field( '_genesis_canonical_uri' ) ); ?>" />
 		</p>
 
-		<p><strong><?php _e( 'Robots Meta Settings', 'autodescription' ); ?></strong></p>
+		<p><strong><?php esc_html_e( 'Robots Meta Settings', 'autodescription' ); ?></strong></p>
 		<p>
 			<label for="autodescription_noindex"><input type="checkbox" name="autodescription[_genesis_noindex]" id="autodescription_noindex" value="1" <?php checked( $this->get_custom_field( '_genesis_noindex' ) ); ?> />
 				<?php
 					/* translators: 1: Option, 2: Post or Page */
-					printf( __( 'Apply %1$s to this %2$s', 'autodescription' ), $this->code_wrap( 'noindex' ), $type );
+					printf( esc_html__( 'Apply %1$s to this %2$s', 'autodescription' ), $this->code_wrap( 'noindex' ), $type );
 				?>
-				<a href="https://support.google.com/webmasters/answer/93710?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( __( 'Tell Search Engines not to show this %s in their search results', 'autodescription' ), $type ); ?>">[?]</a>
+				<a href="https://support.google.com/webmasters/answer/93710?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( esc_html__( 'Tell Search Engines not to show this %s in their search results', 'autodescription' ), $type ); ?>">[?]</a>
 			</label>
 
 			<br>
@@ -616,9 +657,9 @@
 			<label for="autodescription_nofollow"><input type="checkbox" name="autodescription[_genesis_nofollow]" id="autodescription_nofollow" value="1" <?php checked( $this->get_custom_field( '_genesis_nofollow' ) ); ?> />
 				<?php
 					/* translators: 1: Option, 2: Post or Page */
-					printf( __( 'Apply %1$s to this %2$s', 'autodescription' ), $this->code_wrap( 'nofollow' ), $type );
+					printf( esc_html__( 'Apply %1$s to this %2$s', 'autodescription' ), $this->code_wrap( 'nofollow' ), $type );
 				?>
-				<a href="https://support.google.com/webmasters/answer/96569?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( __( 'Tell Search Engines not to follow links on this %s', 'autodescription' ), $type ); ?>">[?]</a>
+				<a href="https://support.google.com/webmasters/answer/96569?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( esc_html__( 'Tell Search Engines not to follow links on this %s', 'autodescription' ), $type ); ?>">[?]</a>
 			</label>
 
 			<br>
@@ -626,24 +667,24 @@
 			<label for="autodescription_noarchive"><input type="checkbox" name="autodescription[_genesis_noarchive]" id="autodescription_noarchive" value="1" <?php checked( $this->get_custom_field( '_genesis_noarchive' ) ); ?> />
 				<?php
 					/* translators: 1: Option, 2: Post or Page */
-					printf( __( 'Apply %1$s to this %2$s', 'autodescription' ), $this->code_wrap( 'noarchive' ), $type );
+					printf( esc_html__( 'Apply %1$s to this %2$s', 'autodescription' ), $this->code_wrap( 'noarchive' ), $type );
 				?>
-				<a href="https://support.google.com/webmasters/answer/79812?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( __( 'Tell Search Engines not to save a cached copy of this %s', 'autodescription' ), $type ); ?>">[?]</a>
+				<a href="https://support.google.com/webmasters/answer/79812?hl=<?php echo $language; ?>" target="_blank" title="<?php printf( esc_html__( 'Tell Search Engines not to save a cached copy of this %s', 'autodescription' ), $type ); ?>">[?]</a>
 			</label>
 		</p>
 
-		<p><strong><?php _e( 'Local Search Settings', 'autodescription' ); ?></strong></p>
+		<p><strong><?php esc_html_e( 'Local Search Settings', 'autodescription' ); ?></strong></p>
 		<p>
 			<label for="autodescription_exclude_local_search"><input type="checkbox" name="autodescription[exclude_local_search]" id="autodescription_exclude_local_search" value="1" <?php checked( $this->get_custom_field( 'exclude_local_search' ) ); ?> />
-				<?php printf( __( 'Exclude this %s from local search', 'autodescription' ), $type ); ?>
-				<span title="<?php printf( __( 'This excludes this %s from local on-site search results', 'autodescription' ), $type ); ?>">[?]</span>
+				<?php printf( esc_html__( 'Exclude this %s from local search', 'autodescription' ), $type ); ?>
+				<span title="<?php printf( esc_html__( 'This excludes this %s from local on-site search results', 'autodescription' ), $type ); ?>">[?]</span>
 			</label>
 		</p>
 
 		<p>
 			<label for="autodescription_redirect">
-				<strong><?php _e( 'Custom 301 Redirect URL', 'autodescription' ); ?></strong>
-				<a href="https://support.google.com/webmasters/answer/93633?hl=<?php echo $language; ?>" target="_blank" title="<?php _e( 'This will force visitors to go to another URL', 'autodescription' ); ?>">[?]</a>
+				<strong><?php esc_html_e( 'Custom 301 Redirect URL', 'autodescription' ); ?></strong>
+				<a href="https://support.google.com/webmasters/answer/93633?hl=<?php echo $language; ?>" target="_blank" title="<?php esc_html_e( 'This will force visitors to go to another URL', 'autodescription' ); ?>">[?]</a>
 			</label>
 		</p>
 		<p>
@@ -652,7 +693,7 @@
 
 		<?php if ( 'below' === $this->inpost_seo_bar ) : ?>
 		<p>
-			<strong><?php _e( 'Doing it Right', 'autodescription' ); ?></strong>
+			<strong><?php esc_html_e( 'Doing it Right', 'autodescription' ); ?></strong>
 			<div><?php echo $this->post_status( $post_id, 'inpost', true ); ?></div>
 		</p>
 		<?php endif;
@@ -660,5 +701,4 @@
 		do_action( 'the_seo_framework_pro_page_inpost_box' );
 
 	}
-
 }
Index: inc/classes/metaboxes.class.php
===================================================================
--- inc/classes/metaboxes.class.php	(revision 1475679)
+++ inc/classes/metaboxes.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Metaboxes
  *
@@ -26,6 +28,18 @@
 class AutoDescription_Metaboxes extends AutoDescription_Siteoptions {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor.
 	 */
 	public function __construct() {
@@ -37,6 +51,9 @@
 	 *
 	 * @since 2.6.0
 	 *
+	 * @todo add filter.
+	 * @todo check if filter can propagate within all functions.
+	 *
 	 * @return array Title separators.
 	 */
 	public function get_separator_list() {
@@ -98,7 +115,7 @@
 	public function nav_tab_wrapper( $id, $tabs = array(), $version = '2.3.6', $use_tabs = true ) {
 
 		//* Whether tabs are active.
-		$use_tabs = $use_tabs && count( $tabs ) > 1 ? true : false;
+		$use_tabs = $use_tabs && count( $tabs ) > 1;
 
 		/**
 		 * Start navigation.
@@ -106,9 +123,8 @@
 		 * Don't output navigation if $use_tabs is false and the amount of tabs is 1 or lower.
 		 */
 		if ( $use_tabs ) {
-			?>
-			<div class="seoframework-nav-tab-wrapper hide-if-no-js" id="<?php echo $id; ?>-tabs-wrapper">
-			<?php
+
+			?><div class="tsf-nav-tab-wrapper hide-if-no-js" id="<?php echo esc_attr( $id . '-tabs-wrapper' ); ?>"><?php
 				$count = 1;
 				foreach ( $tabs as $tab => $value ) {
 
@@ -116,17 +132,17 @@
 					$name = isset( $value['name'] ) ? $value['name'] : '';
 
 					$checked = 1 === $count ? 'checked' : '';
-					$the_id = $id . '-tab-' . $tab;
-					$the_name = $id . '-tabs';
+					$the_id = esc_attr( $id . '-tab-' . $tab );
+					$the_name = esc_attr( $id . '-tabs' );
 
-					$label_class = $checked ? ' seoframework-active-tab' : ''; // maybe
+					$label_class = $checked ? ' tsf-active-tab' : ''; // maybe
 
 					?>
-					<div class="seoframework-tab">
-						<input type="radio" class="seoframework-tabs-radio" id="<?php echo $the_id ?>" name="<?php echo $the_name ?>" <?php echo $checked ?>>
-						<label for="<?php echo $the_id; ?>" class="seoframework-nav-tab">
-							<?php echo $dashicon ? '<span class="dashicons dashicons-' . esc_attr( $dashicon ) . ' seoframework-dashicons-tabs"></span>' : ''; ?>
-							<?php echo $name ? '<span class="seoframework-nav-desktop">' . esc_attr( $name ) . '</span>' : ''; ?>
+					<div class="tsf-tab">
+						<input type="radio" class="tsf-tabs-radio" id="<?php echo $the_id ?>" name="<?php echo $the_name ?>" <?php echo $checked ?>>
+						<label for="<?php echo $the_id; ?>" class="tsf-nav-tab">
+							<?php echo $dashicon ? '<span class="dashicons dashicons-' . esc_attr( $dashicon ) . ' tsf-dashicons-tabs"></span>' : ''; ?>
+							<?php echo $name ? '<span class="tsf-nav-desktop">' . esc_attr( $name ) . '</span>' : ''; ?>
 						</label>
 					</div>
 					<?php
@@ -133,9 +149,7 @@
 
 					$count++;
 				}
-			?>
-			</div>
-			<?php
+			?></div><?php
 		}
 
 		/**
@@ -150,12 +164,9 @@
 			$the_name = $id . '-tabs-content';
 
 			//* Current tab for JS.
-			$current = 1 === $count ? ' seoframework-active-tab-content' : '';
+			$current = 1 === $count ? ' tsf-active-tab-content' : '';
 
-			?>
-			<div class="seoframework-tabs-content <?php echo $the_name . $current; ?>" id="<?php echo $the_id; ?>" >
-			<?php
-
+			?><div class="tsf-tabs-content <?php echo esc_attr( $the_name . $current ); ?>" id="<?php echo esc_attr( $the_id ); ?>" ><?php
 				//* No-JS tabs.
 				if ( $use_tabs ) {
 					$dashicon = isset( $value['dashicon'] ) ? $value['dashicon'] : '';
@@ -163,9 +174,9 @@
 
 					?>
 					<div class="hide-if-js seoframework-content-no-js">
-						<div class="seoframework-tab seoframework-tab-no-js">
-							<span class="seoframework-nav-tab seoframework-active-tab">
-								<?php echo $dashicon ? '<span class="dashicons dashicons-' . esc_attr( $dashicon ) . ' seoframework-dashicons-tabs"></span>' : ''; ?>
+						<div class="tsf-tab tsf-tab-no-js">
+							<span class="tsf-nav-tab tsf-active-tab">
+								<?php echo $dashicon ? '<span class="dashicons dashicons-' . esc_attr( $dashicon ) . ' tsf-dashicons-tabs"></span>' : ''; ?>
 								<?php echo $name ? '<span>' . esc_attr( $name ) . '</span>' : ''; ?>
 							</span>
 						</div>
@@ -180,11 +191,8 @@
 					$output = $this->call_function( $callback, $version, $params );
 					echo $output;
 				}
+			?></div><?php
 
-				?>
-			</div>
-			<?php
-
 			$count++;
 		}
 
@@ -194,106 +202,14 @@
 	 * Title meta box on the Site SEO Settings page.
 	 *
 	 * @since 2.2.2
+	 * @see $this->title_metabox()	Callback for Title Settings box.
 	 *
+	 * @param object|null $post The current post object.
 	 * @param array $args The metabox arguments.
-	 *
-	 * @see $this->title_metabox()	Callback for Title Settings box.
 	 */
-	public function title_metabox( $args = array() ) {
-
+	public function title_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_title_metabox_before' );
-
-		$latest_post_id = $this->get_latest_post_id();
-
-		if ( $latest_post_id ) {
-			$post = get_post( $latest_post_id, OBJECT );
-			$title = esc_attr( $post->post_title );
-		} else {
-			$title = esc_attr__( 'Example Post Title', 'autodescription' );
-		}
-
-		$blogname = $this->get_blogname();
-		$sep = $this->get_separator( 'title', true );
-
-		$additions_left = '<span class="title-additions-js">' . $blogname . '<span class="autodescription-sep-js">' . " $sep " . '</span></span>';
-		$additions_right = '<span class="title-additions-js"><span class="autodescription-sep-js">' . " $sep " . '</span>' . $blogname . '</span>';
-
-		$example_left = '<em>' . $additions_left . $title . '</em>';
-		$example_right = '<em>' . $title . $additions_right . '</em>';
-
-		$showleft = 'left' === $this->get_option( 'title_location' ) ? true : false;
-		//* Check left first, as right is default (and thus fallback).
-		$example_nojs = $showleft ? $example_left : $example_right;
-
-		?>
-		<h4><?php printf( __( 'Automated Title Settings', 'autodescription' ) ); ?></h4>
-		<p><span class="description"><?php printf( __( "The page title is prominently shown within the browser tab as well as within the Search Engine results pages.", 'autodescription' ) ); ?></span></p>
-
-		<h4><?php _e( 'Example Automated Title Output', 'autodescription' ); ?></h4>
-		<p>
-			<span class="title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
-			<span class="title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
-		</p>
-
-		<hr>
-		<?php
-
-		/**
-		 * Parse tabs content
-		 *
-		 * @param array $default_tabs { 'id' = The identifier =>
-		 *			array(
-		 *				'name' 		=> The name
-		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
-		 *				'dashicon'	=> Desired dashicon
-		 *			)
-		 * }
-		 *
-		 * @since 2.2.2
-		 */
-		$default_tabs = array(
-			'general' => array(
-				'name' 		=> __( 'General', 'autodescription' ),
-				'callback'	=> array( $this, 'title_metabox_general_tab' ),
-				'dashicon'	=> 'admin-generic',
-			),
-			'additions' => array(
-				'name'		=> __( 'Additions', 'autodescription' ),
-				'callback'	=> array( $this, 'title_metabox_additions_tab' ),
-				'dashicon'	=> 'plus',
-				'args'		=> array(
-					'examples' => array(
-						'left'	=> $example_left,
-						'right' => $example_right,
-					),
-				),
-			),
-			'prefixes' => array(
-				'name'		=> __( 'Prefixes', 'autodescription' ),
-				'callback'	=> array( $this, 'title_metabox_prefixes_tab' ),
-				'dashicon'	=> 'plus-alt',
-				'args'		=> array(
-					'additions' => array(
-						'left'	=> $additions_left,
-						'right' => $additions_right,
-					),
-					'showleft' => $showleft,
-				),
-			)
-		);
-
-		/**
-		 * Applies filters the_seo_framework_title_settings_tabs : array see $default_tabs
-		 * @since 2.6.0
-		 *
-		 * Used to extend Description tabs.
-		 */
-		$defaults = (array) apply_filters( 'the_seo_framework_title_settings_tabs', $default_tabs, $args );
-
-		$tabs = wp_parse_args( $args, $defaults );
-
-		$this->nav_tab_wrapper( 'title', $tabs, '2.6.0' );
-
+		$this->get_view( 'metaboxes/title-metabox', $args );
 		do_action( 'the_seo_framework_title_metabox_after' );
 	}
 
@@ -301,28 +217,10 @@
 	 * Title meta box general tab.
 	 *
 	 * @since 2.6.0
-	 *
 	 * @see $this->title_metabox() : Callback for Title Settings box.
 	 */
 	public function title_metabox_general_tab() {
-
-		$title_separator = $this->get_separator_list();
-
-		$recommended = ' class="recommended" title="' . esc_attr__( 'Recommended', 'autodescription' ) . '"';
-
-		?>
-		<fieldset>
-			<legend><h4><?php _e( 'Document Title Separator', 'autodescription' ); ?></h4></legend>
-			<p id="title-separator" class="theseoframework-fields">
-			<?php foreach ( $title_separator as $name => $html ) { ?>
-				<input type="radio" name="<?php $this->field_name( 'title_seperator' ); ?>" id="<?php $this->field_id( 'title_seperator_' . $name ); ?>" value="<?php echo $name ?>" <?php checked( $this->get_field_value( 'title_seperator' ), $name ); ?> />
-				<label for="<?php $this->field_id( 'title_seperator_' . $name ); ?>" <?php echo ( $name === 'pipe' || $name === 'dash' ) ? $recommended : ''; ?>><?php echo $html ?></label>
-			<?php } ?>
-			</p>
-			<span class="description"><?php _e( 'If the title consists of two parts (original title and optional addition), then the separator will go in-between them.', 'autodescription' ); ?></span>
-		</fieldset>
-		<?php
-
+		$this->get_view( 'metaboxes/title-metabox', array(), 'general' );
 	}
 
 	/**
@@ -329,71 +227,15 @@
 	 * Title meta box general tab.
 	 *
 	 * @since 2.6.0
+	 * @see $this->title_metabox() : Callback for Title Settings box.
 	 *
 	 * @param array $examples : array {
 	 * 		'left'	=> Left Example
 	 * 		'right'	=> Right Example
 	 * }
-	 *
-	 * @see $this->title_metabox() : Callback for Title Settings box.
 	 */
 	public function title_metabox_additions_tab( $examples = array() ) {
-
-		$example_left = $examples['left'];
-		$example_right = $examples['right'];
-
-		$language = $this->google_language();
-
-		$home_page_has_option = __( 'The Home Page has a specific option.', 'autodescription' );
-
-		?>
-		<fieldset>
-			<legend><h4><?php _e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
-
-			<p>
-				<span class="description"><?php _e( 'Determines which side the added title text will go on.', 'autodescription' ); ?></span>
-			</p>
-			<p id="title-location" class="theseoframework-fields">
-				<span class="toblock">
-					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'title_location' ), 'left' ); ?> />
-					<label for="<?php $this->field_id( 'title_location_left' ); ?>">
-						<span><?php _e( 'Left:', 'autodescription' ); ?></span>
-						<?php echo $this->code_wrap_noesc( $example_left ) ?>
-					</label>
-				</span>
-				<span class="toblock">
-					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'title_location' ), 'right' ); ?> />
-					<label for="<?php $this->field_id( 'title_location_right' ); ?>">
-						<span><?php _e( 'Right:', 'autodescription' ); ?></span>
-						<?php echo $this->code_wrap_noesc( $example_right ); ?>
-					</label>
-				</span>
-			</p>
-			<span class="description"><?php echo $home_page_has_option; ?></span>
-		</fieldset>
-		<?php
-
-		/**
-		 * @todo use checkbox function
-		 * @priority low 2.6.x
-		 */
-
-		//* Only add this option if the theme is doing it right.
-		if ( $this->can_manipulate_title() ) : ?>
-			<hr>
-
-			<h4><?php _e( 'Remove Blogname from Title', 'autodescription' ); ?></h4>
-			<p id="title-additions-toggle">
-				<label for="<?php $this->field_id( 'title_rem_additions' ); ?>">
-					<input type="checkbox" name="<?php $this->field_name( 'title_rem_additions' ); ?>" id="<?php $this->field_id( 'title_rem_additions' ); ?>" <?php $this->is_conditional_checked( 'title_rem_additions' ); ?> value="1" <?php checked( $this->get_field_value( 'title_rem_additions' ) ); ?> />
-					<?php _e( 'Remove Blogname from title?', 'autodescription' ); ?>
-				</label>
-				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3' ); ?>" target="_blank" title="<?php _e( 'This might decouple your posts and pages from the rest of the website.', 'autodescription' ); ?>">[?]</a>
-			</p>
-			<span class="description"><?php _e( 'Only use this option if you are aware of its SEO effects.', 'autodescription' ); ?></span>
-			<span class="description"><?php echo $home_page_has_option; ?></span>
-		<?php endif;
-
+		$this->get_view( 'metaboxes/title-metabox', get_defined_vars(), 'additions' );
 	}
 
 	/**
@@ -400,6 +242,7 @@
 	 * Title meta box prefixes tab.
 	 *
 	 * @since 2.6.0
+	 * @see $this->title_metabox() : Callback for Title Settings box.
 	 *
 	 * @param array $additions : array {
 	 * 		'left'	=> Left Example Addtitions
@@ -406,73 +249,9 @@
 	 * 		'right'	=> Right Example Additions
 	 * }
 	 * @param bool $showleft The example location.
-	 *
-	 * @see $this->title_metabox() : Callback for Title Settings box.
 	 */
 	public function title_metabox_prefixes_tab( $additions = array(), $showleft = false ) {
-
-		$left_additions = $additions['left'];
-		$right_additions = $additions['right'];
-
-		//* Get translated category label, if it exists. Otherwise, fallback to translation.
-		$term_labels = $this->get_tax_labels( 'category' );
-		$label = isset( $term_labels->singular_name ) ? $term_labels->singular_name : __( 'Category', 'autodescription' );
-
-		$cats = get_terms( array( 'taxonomy' => 'category', 'fields' => 'ids', 'hide_empty' => false, 'order' => 'ASC', 'number' => 1 ) );
-		if ( is_array( $cats ) && ! empty( $cats ) ) {
-			//* Category should exist.
-			$cat = reset( $cats );
-		} else {
-			//* Default fallback category.
-			$cat = 1;
-		}
-		//* If cat is found, it will return its name. Otherwise it's an empty string.
-		$cat_name = get_cat_name( $cat );
-		$cat_name = $cat_name ? $cat_name : __( 'Example Category', 'autodescription' );
-
-		$display_prefix = $this->is_option_checked( 'title_rem_prefixes' ) ? 'none' : 'inline';
-		$title = '<span class="title-prefix-example" style="display:' . $display_prefix . '">' . $label . ': </span>' . $cat_name;
-
-		$example_left = '<em>' . $left_additions . $title . '</em>';
-		$example_right = '<em>' . $title . $right_additions . '</em>';
-
-		$example_nojs = $showleft ? $example_left : $example_right;
-
-		$language = $this->google_language();
-
-		/**
-		 * @todo use checkbox function
-		 * @priority low 2.6.x
-		 */
-
-		?>
-		<h4><?php _e( 'Title prefix options', 'autodescription' ); ?></h4>
-		<p><span class="description"><?php _e( "On archives a descriptive prefix may be added to the title.", 'autodescription' ); ?></span></p>
-
-		<h4><?php _e( 'Example Automated Archive Title Output' ); ?></h4>
-		<p>
-			<span class="title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
-			<span class="title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
-		</p>
-
-		<hr>
-
-		<h4><?php _e( 'Remove Archive Title Prefixes', 'autodescription' ); ?></h4>
-		<p id="title-prefixes-toggle">
-			<label for="<?php $this->field_id( 'title_rem_prefixes' ); ?>">
-				<input type="checkbox" name="<?php $this->field_name( 'title_rem_prefixes' ); ?>" id="<?php $this->field_id( 'title_rem_prefixes' ); ?>" <?php $this->is_conditional_checked( 'title_rem_prefixes' ); ?> value="1" <?php checked( $this->get_field_value( 'title_rem_prefixes' ) ); ?> />
-				<?php _e( 'Remove Prefixes from title?', 'autodescription' ); ?>
-			</label>
-			<?php
-			$this->make_info(
-				__( "The prefix helps visitors and Search Engines determine what kind of page they're visiting", 'autodescription' ),
-				'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3',
-				true
-			);
-			?>
-		</p>
-		<?php
-
+		$this->get_view( 'metaboxes/title-metabox', get_defined_vars(), 'prefixes' );
 	}
 
 	/**
@@ -480,99 +259,13 @@
 	 *
 	 * @since 2.3.4
 	 *
+	 * @param object|null $post The current post object.
 	 * @param array $args The metabox arguments.
-	 *
-	 * @see $this->description_metabox()	Callback for Description Settings box.
 	 */
-	public function description_metabox( $args = array() ) {
-
+	public function description_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_description_metabox_before' );
-
-		$blogname = $this->get_blogname();
-		$sep = $this->get_separator( 'description', true );
-
-		/**
-		 * Generate example.
-		 */
-		$page_title = __( 'Example Title', 'autodescription' );
-		$on = _x( 'on', 'Placement. e.g. Post Title "on" Blog Name', 'autodescription' );
-		$excerpt = __( 'This is an example description...', 'autodescription' );
-
-		$page_title = $this->escape_description( $page_title );
-		$on = $this->escape_description( $on );
-		$excerpt = $this->escape_description( $excerpt );
-
-		//* Put it together.
-		$example 	= '<span id="description-additions-js">'
-						. $page_title
-						. '<span id="on-blogname-js">' . " $on " . $blogname . '</span>'
-						. '<span id="autodescription-descsep-js">' . " $sep " . '</span>'
-					. '</span>'
-					. $excerpt
-					;
-
-		$nojs_additions = '';
-		//* Add or remove additions based on option.
-		if ( $this->add_description_additions() ) {
-			$description_blogname_additions = $this->get_option( 'description_blogname' );
-
-			$example_nojs_onblog = $description_blogname_additions ? $page_title . " $on " . $blogname : $page_title;
-			$nojs_additions = $example_nojs_onblog . " $sep ";
-		}
-
-		$example_nojs = $nojs_additions . $excerpt;
-
-		?>
-		<h4><?php printf( __( 'Automated Description Settings', 'autodescription' ) ); ?></h4>
-		<p><span class="description"><?php printf( __( "The meta description can be used to determine the text used under the title on Search Engine results pages.", 'autodescription' ) ); ?></span></p>
-
-		<h4><?php _e( 'Example Automated Description Output', 'autodescription' ); ?></h4>
-		<p class="hide-if-no-js"><?php echo $this->code_wrap_noesc( $example ); ?></p>
-		<p class="hide-if-js"><?php echo $this->code_wrap( $example_nojs ); ?></p>
-
-		<hr>
-		<?php
-
-		/**
-		 * Parse tabs content
-		 *
-		 * @param array $default_tabs { 'id' = The identifier =>
-		 *			array(
-		 *				'name' 		=> The name
-		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
-		 *				'dashicon'	=> Desired dashicon
-		 *			)
-		 * }
-		 *
-		 * @since 2.6.0
-		 */
-		$default_tabs = array(
-			'general' => array(
-				'name' 		=> __( 'General', 'autodescription' ),
-				'callback'	=> array( $this, 'description_metabox_general_tab' ),
-				'dashicon'	=> 'admin-generic',
-			),
-			'additions' => array(
-				'name'		=> __( 'Additions', 'autodescription' ),
-				'callback'	=> array( $this, 'description_metabox_additions_tab' ),
-				'dashicon'	=> 'plus',
-			),
-		);
-
-		/**
-		 * Applies filters the_seo_framework_description_settings_tabs : array see $default_tabs
-		 * @since 2.6.0
-		 *
-		 * Used to extend Description tabs.
-		 */
-		$defaults = (array) apply_filters( 'the_seo_framework_description_settings_tabs', $default_tabs, $args );
-
-		$tabs = wp_parse_args( $args, $defaults );
-
-		$this->nav_tab_wrapper( 'description', $tabs, '2.6.0' );
-
+		$this->get_view( 'metaboxes/description-metabox', $args );
 		do_action( 'the_seo_framework_description_metabox_after' );
-
 	}
 
 	/**
@@ -579,31 +272,10 @@
 	 * Description meta box general tab.
 	 *
 	 * @since 2.6.0
-	 *
-	 * @see $this->description_metabox()	Callback for Description Settings box.
+	 * @see $this->description_metabox() Callback for Description Settings box.
 	 */
 	public function description_metabox_general_tab() {
-
-		//* Let's use the same separators as for the title.
-		$description_separator = $this->get_separator_list();
-		$sep_option = $this->get_option( 'description_separator' );
-		$sep_option = $sep_option ? $sep_option : 'pipe';
-
-		$recommended = ' class="recommended" title="' . __( 'Recommended', 'autodescription' ) . '"';
-
-		?>
-		<fieldset>
-			<legend><h4><?php _e( 'Description Excerpt Separator', 'autodescription' ); ?></h4></legend>
-			<p id="description-separator" class="theseoframework-fields">
-			<?php foreach ( $description_separator as $name => $html ) { ?>
-				<input type="radio" name="<?php $this->field_name( 'description_separator' ); ?>" id="<?php $this->field_id( 'description_separator' . $name ); ?>" value="<?php echo $name ?>" <?php checked( $sep_option, $name ); ?> />
-				<label for="<?php $this->field_id( 'description_separator' . $name ); ?>" <?php echo ( 'pipe' === $name || 'dash' === $name ) ? $recommended : ''; ?>><?php echo $html ?></label>
-			<?php } ?>
-			</p>
-			<span class="description"><?php _e( 'If the Automated Description consists of two parts (title and excerpt), then the separator will go in-between them.', 'autodescription' ); ?></span>
-		</fieldset>
-		<?php
-
+		$this->get_view( 'metaboxes/description-metabox', array(), 'general' );
 	}
 
 	/**
@@ -610,43 +282,10 @@
 	 * Description meta box additions tab.
 	 *
 	 * @since 2.6.0
-	 *
-	 * @see $this->description_metabox()	Callback for Description Settings box.
+	 * @see $this->description_metabox() Callback for Description Settings box.
 	 */
 	public function description_metabox_additions_tab() {
-
-		$language = $this->google_language();
-		$google_explanation = esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' );
-
-		/**
-		 * @todo use checkbox functions.
-		 * @priority low 2.6.x
-		 */
-		?>
-		<h4><?php printf( __( 'Description Additions Settings', 'autodescription' ) ); ?></h4>
-		<p><span class="description"><?php printf( __( "To create a more organic description, a small introduction can be added before the description.", 'autodescription' ) ); ?></span></p>
-		<p><span class="description"><?php printf( __( "The introduction consists of the title and optionally the blogname.", 'autodescription' ) ); ?></span></p>
-
-		<hr>
-
-		<h4><?php _e( 'Add descriptive Additions to Description', 'autodescription' ); ?></h4>
-		<p id="description-additions-toggle">
-			<label for="<?php $this->field_id( 'description_additions' ); ?>" class="toblock">
-				<input type="checkbox" name="<?php $this->field_name( 'description_additions' ); ?>" id="<?php $this->field_id( 'description_additions' ); ?>" <?php $this->is_conditional_checked( 'description_additions' ); ?> value="1" <?php checked( $this->get_field_value( 'description_additions' ) ); ?> />
-				<?php _e( 'Add Additions to automated description?', 'autodescription' ); ?>
-				<a href="<?php echo esc_url( $google_explanation ); ?>" target="_blank" class="description" title="<?php _e( 'This creates good meta descriptions', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-
-		<h4><?php _e( 'Add Blogname to Additions', 'autodescription' ); ?></h4>
-		<p id="description-onblogname-toggle">
-			<label for="<?php $this->field_id( 'description_blogname' ); ?>" class="toblock">
-				<input type="checkbox" name="<?php $this->field_name( 'description_blogname' ); ?>" id="<?php $this->field_id( 'description_blogname' ); ?>" <?php $this->is_conditional_checked( 'description_blogname' ); ?> value="1" <?php checked( $this->get_field_value( 'description_blogname' ) ); ?> />
-				<?php _e( 'Add Blogname to automated description additions?', 'autodescription' ); ?>
-			</label>
-		</p>
-		<?php
-
+		$this->get_view( 'metaboxes/description-metabox', array(), 'additions' );
 	}
 
 	/**
@@ -653,644 +292,85 @@
 	 * Robots meta box on the Site SEO Settings page.
 	 *
 	 * @since 2.2.2
+	 *
+	 * @param object|null $post The current post object.
+	 * @param array $args The metabox arguments.
 	 */
-	public function robots_metabox( $args = array() ) {
-
+	public function robots_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_robots_metabox_before' );
-
-		//* Robots types
-		$types = array(
-			'category' => __( 'Category', 'autodescription' ),
-			'tag' => __( 'Tag', 'autodescription' ),
-			'author' => __( 'Author', 'autodescription' ),
-			'date' => __( 'Date', 'autodescription' ),
-			'search' => __( 'Search Pages', 'autodescription' ),
-			'attachment' => __( 'Attachment Pages', 'autodescription' ),
-			'site' => _x( 'the entire site', '...for the entire site', 'autodescription' ),
-		);
-
-		//* Robots i18n
-		$robots = array(
-			'noindex' =>  array(
-				'value' => 'noindex',
-				'name' 	=> __( 'NoIndex', 'autodescription' ),
-				'desc' 	=> __( 'These options prevent indexing of the selected archives and pages. If you enable this, the selected archives or pages will be removed from Search Engine results pages.', 'autodescription' ),
-			),
-			'nofollow' =>  array(
-				'value' => 'nofollow',
-				'name'	=> __( 'NoFollow', 'autodescription' ),
-				'desc'	=> __( 'These options prevent links from being followed on the selected archives and pages. If you enable this, the selected archives or pages in-page links will gain no SEO value, including your own links.', 'autodescription' ),
-			),
-			'noarchive' =>  array(
-				'value' => 'noarchive',
-				'name'	=> __( 'NoArchive', 'autodescription' ),
-				'desc'	=> __( 'These options prevent caching of the selected archives and pages. If you enable this, Search Engines will not create a cached copy of the selected archives or pages.', 'autodescription' ),
-			),
-		);
-
-		/**
-		 * Parse tabs content
-		 *
-		 * @param array $default_tabs { 'id' = The identifier =>
-		 *			array(
-		 *				'name' 		=> The name
-		 *				'callback'	=> function callback
-		 *				'dashicon'	=> WordPress Dashicon
-		 *				'args'		=> function args
-		 *			)
-		 * }
-		 *
-		 * @since 2.2.2
-		 */
-		$default_tabs = array(
-				'general' => array(
-					'name' 		=> __( 'General', 'autodescription' ),
-					'callback'	=> array( $this, 'robots_metabox_general_tab' ),
-					'dashicon'	=> 'admin-generic',
-					'args'		=> '',
-				),
-				'index' => array(
-					'name' 		=> __( 'Indexing', 'autodescription' ),
-					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
-					'dashicon'	=> 'filter',
-					'args'		=> array( $types, $robots['noindex'] ),
-				),
-				'follow' => array(
-					'name'		=> __( 'Following', 'autodescription' ),
-					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
-					'dashicon'	=> 'editor-unlink',
-					'args'		=> array( $types, $robots['nofollow'] ),
-				),
-				'archive' => array(
-					'name'		=> __( 'Archiving', 'autodescription' ),
-					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
-					'dashicon'	=> 'download',
-					'args'		=> array( $types, $robots['noarchive'] ),
-				),
-			);
-
-		/**
-		 * Applies filters 'the_seo_framework_robots_settings_tabs' : array see $default_tabs
-		 *
-		 * Used to extend Social tabs
-		 * @since 2.2.4
-		 */
-		$defaults = (array) apply_filters( 'the_seo_framework_robots_settings_tabs', $default_tabs, $args );
-
-		$tabs = wp_parse_args( $args, $defaults );
-
-		$this->nav_tab_wrapper( 'robots', $tabs, '2.2.4' );
-
+		$this->get_view( 'metaboxes/robots-metabox', $args );
 		do_action( 'the_seo_framework_robots_metabox_after' );
-
 	}
 
 	/**
-	 * Robots Metabox General Tab output
+	 * Robots Metabox General Tab output.
 	 *
 	 * @since 2.2.4
-	 *
 	 * @see $this->robots_metabox() Callback for Robots Settings box.
 	 */
 	protected function robots_metabox_general_tab() {
-
-		?>
-		<h4><?php _e( 'Open Directory Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php printf( __( "Sometimes, Search Engines use resources from certain Directories to find titles and descriptions for your content. You generally don't want them to. Turn these options on to prevent them from doing so.", 'autodescription' ), $this->code_wrap( 'noodp' ), $this->code_wrap( 'noydir' ) ); ?></p>
-		<p class="description"><?php _e( "The Open Directory Project and the Yahoo! Directory may contain outdated SEO values. Therefore, it's best to leave these options checked.", 'autodescription' ); ?></p>
-		<?php
-
-		$this->wrap_fields(
-		 	array(
-				$this->make_checkbox(
-					'noodp',
-					sprintf( __( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noodp' ) ),
-					''
-				),
-				$this->make_checkbox(
-					'noydir',
-					sprintf( __( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noydir' ) ),
-					''
-				),
-			),
-			true
-		);
-
-		?>
-		<hr>
-
-		<h4><?php _e( 'Paginated Archive Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php printf( __( "Indexing the second or later page of any archive might cause duplication errors. Search Engines look down upon them; therefore, it's recommended to disable indexing of those pages.", 'autodescription' ), $this->code_wrap( 'noodp' ), $this->code_wrap( 'noydir' ) ); ?></p>
-		<?php
-
-		$this->wrap_fields(
-			$this->make_checkbox(
-				'paged_noindex',
-				sprintf( __( 'Apply %s to every second or later archive page?', 'autodescription' ), $this->code_wrap( 'noindex' ) ),
-				''
-			),
-		true
-		);
-
+		$this->get_view( 'metaboxes/robots-metabox', array(), 'general' );
 	}
 
 	/**
-	 * Robots Metabox
-	 *		No-: Index/Follow/Archive
-	 * Tab output
+	 * Robots Metabox "No-: Index/Follow/Archive" Tab output.
 	 *
 	 * @since 2.2.4
+	 * @see $this->robots_metabox() Callback for Robots Settings box.
+	 *
+	 * @param array $types The post types
+	 * @param array $robots The robots option values : {
+	 *		'value' string The robots option value.
+	 *		'name' string The robots name.
+	 *		'desc' string Explains what the robots type does.
+	 * }
 	 */
 	protected function robots_metabox_no_tab( $types, $robots ) {
-
-		$ro_value = $robots['value'];
-		$ro_name = $robots['name'];
-		$ro_i18n = $robots['desc'];
-
-		?>
-		<h4><?php printf( __( '%s Robots Settings', 'autodescription' ), $ro_name ); ?></h4>
-		<p><span class="description"><?php echo $ro_i18n ?></span></p>
-		<p class="theseoframework-fields">
-			<?php
-
-			$checkboxes = '';
-
-			foreach ( $types as $type => $i18n ) {
-
-				if ( 'site' === $type || 'attachment' === $type || 'search' === $type ) {
-					//* Singular.
-					/* translators: 1: Option, 2: Post Type */
-					$label = sprintf( __( 'Apply %1$s to %2$s?', 'autodescription' ), $this->code_wrap( $ro_name ), $i18n );
-				} else {
-					//* Archive.
-					/* translators: 1: Option, 2: Post Type */
-					$label = sprintf( __( 'Apply %1$s to %2$s Archives?', 'autodescription' ), $this->code_wrap( $ro_name ), $i18n );
-				}
-
-				$id = $type . '_' . $ro_value;
-
-				//* Add <hr> if it's 'site'
-				$checkboxes .= ( 'site' === $type ) ? '<hr class="theseoframework-option-spacer">' : '';
-
-				$checkboxes .= $this->make_checkbox( $id, $label, '' );
-			}
-
-			//* Echo checkboxes.
-			echo $this->wrap_fields( $checkboxes );
-			?>
-		</p>
-		<?php
-
+		$this->get_view( 'metaboxes/robots-metabox', get_defined_vars(), 'no' );
 	}
 
 	/**
 	 * Home Page meta box on the Site SEO Settings page.
 	 *
+	 * @since 2.2.2
+	 *
+	 * @param object|null $post The current post object.
 	 * @param array $args The navigation tabs args.
-	 *
-	 * @since 2.2.2
 	 */
-	public function homepage_metabox( $args = array() ) {
-
+	public function homepage_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_homepage_metabox_before' );
-
-		?>
-		<p><span class="description"><?php printf( __( 'These settings will take precedence over the settings set within the Home Page edit screen, if any.', 'autodescription' ) ); ?></span></p>
-
-		<hr>
-		<?php
-
-		/**
-		 * Parse tabs content
-		 *
-		 * @param array $default_tabs { 'id' = The identifier =>
-		 *			array(
-		 *				'name' 		=> The name
-		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
-		 *				'dashicon'	=> Desired dashicon
-		 *			)
-		 * }
-		 *
-		 * @since 2.6.0
-		 */
-		$default_tabs = array(
-			'general' => array(
-				'name' 		=> __( 'General', 'autodescription' ),
-				'callback'	=> array( $this, 'homepage_metabox_general' ),
-				'dashicon'	=> 'admin-generic',
-			),
-			'additions' => array(
-				'name'		=> __( 'Additions', 'autodescription' ),
-				'callback'	=> array( $this, 'homepage_metabox_additions' ),
-				'dashicon'	=> 'plus',
-			),
-			'robots' => array(
-				'name'		=> __( 'Robots', 'autodescription' ),
-				'callback'	=> array( $this, 'homepage_metabox_robots' ),
-				'dashicon'	=> 'visibility',
-			),
-		);
-
-		/**
-		 * Applies filters the_seo_framework_homepage_settings_tabs : array see $default_tabs
-		 * @since 2.6.0
-		 *
-		 * Used to extend HomePage tabs.
-		 */
-		$defaults = (array) apply_filters( 'the_seo_framework_homepage_settings_tabs', $default_tabs, $args );
-
-		$tabs = wp_parse_args( $args, $defaults );
-
-		$this->nav_tab_wrapper( 'homepage', $tabs, '2.6.0' );
-
+		$this->get_view( 'metaboxes/homepage-metabox', $args );
 		do_action( 'the_seo_framework_homepage_metabox_after' );
-
 	}
 
 	/**
-	 * HomePage Metabox General Tab Output
+	 * HomePage Metabox General Tab Output.
 	 *
-	 * @since 2.6.0
-	 *
+	 * @since 2.7.0
 	 * @see $this->homepage_metabox() Callback for HomePage Settings box.
 	 */
-	public function homepage_metabox_general() {
-
-		/**
-		 * @param string $language The language for help pages. See $this->google_language();
-		 */
-		$language = $this->google_language();
-
-		/**
-		 * @param bool $page_on_front False if homepage is blog, true if single page/post
-		 * @param bool $home_description_frompost True if home inpost title is filled in. False if not.
-		 */
-		$page_on_front = $this->has_page_on_front();
-		$home_description_frompost = false;
-
-		/**
-		 * Notify the user that the data is pulled from the post.
-		 */
-		$description_from_post_message = '';
-		$title_from_post_message  = '';
-
-		// Setting up often used Translations
-		$title_i18n = __( 'Title', 'autodescription' );
-		$description_i18n = __( 'Description', 'autodescription' );
-		$home_page_i18n = __( 'Home Page', 'autodescription' );
-
-		//* Get home page ID. If blog on front, it's 0.
-		$home_id = $this->get_the_front_page_ID();
-
-		$home_title = $this->escape_title( $this->get_option( 'homepage_title' ) );
-
-		//* Get blog tagline
-		$blog_description = $this->get_blogdescription();
-
-		/**
-		 * Home Page Tagline settings.
-		 * @since 2.3.8
-		 *
-		 * @param string $home_tagline The tagline option.
-		 * @param string $home_tagline_placeholder The option placeholder. Always defaults to description.
-		 * @param string|void $home_tagline_value The tagline input value.
-		 * @param string $blog_description Override blog description with option if applicable.
-		 */
-		$home_tagline = $this->get_field_value( 'homepage_title_tagline' );
-		$home_tagline_placeholder = $blog_description;
-		$home_tagline_value = $home_tagline ? $home_tagline : '';
-		$blog_description = $home_tagline_value ? $home_tagline_value : $blog_description;
-
-		/**
-		 * Create a placeholder for when there's no custom HomePage title found.
-		 * @since 2.2.4
-		 */
-		$home_title_args = $this->generate_home_title( true, '', '', true, false );
-		if ( $this->home_page_add_title_tagline() ) {
-			$home_title_placeholder = $this->process_title_additions( $home_title_args['blogname'], $home_title_args['title'], $home_title_args['seplocation'] );
-		} else {
-			$home_title_placeholder = $home_title_args['title'];
-		}
-
-		/**
-		 * If the home title is fetched from the post, notify about that instead.
-		 * @since 2.2.4
-		 *
-		 * Nesting often used translations
-		 */
-		if ( empty( $home_title ) && $page_on_front && $this->get_custom_field( '_genesis_title', $home_id ) ) {
-			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
-			$title_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $title_i18n, __( 'Page SEO Settings', 'autodescription' ), $home_page_i18n );
-		}
-
-		/**
-		 * Check for options to calculate title length.
-		 *
-		 * @since 2.3.4
-		 */
-		if ( $home_title ) {
-			$home_title_args = $this->generate_home_title();
-			$tit_len_pre = $this->process_title_additions( $home_title_args['title'], $home_title_args['blogname'], $home_title_args['seplocation'] );
-		} else {
-			$tit_len_pre = $home_title_placeholder;
-		}
-
-		//* Fetch the description from the home page.
-		$frompost_description = $page_on_front ? $this->get_custom_field( '_genesis_description', $home_id ) : '';
-
-		//* Fetch the HomePage Description option.
-		$home_description = $this->get_field_value( 'homepage_description' );
-
-		/**
-		 * Create a placeholder if there's no custom HomePage description found.
-		 * @since 2.2.4
-		 *
-		 * Reworked. Always create a placeholder.
-		 * @since 2.3.4
-		 */
-		if ( $frompost_description ) {
-			$description_placeholder = $frompost_description;
-		} else {
-			$description_args = array(
-				'id' => $home_id,
-				'is_home' => true,
-				'get_custom_field' => false
-			);
-
-			$description_placeholder = $this->generate_description( '', $description_args );
-		}
-
-		/**
-		 * Checks if the home is blog, the Home Page Metabox description and
-		 * the frompost description.
-		 * @since 2.3.4
-		 */
-		if ( empty( $home_description ) && $page_on_front && $frompost_description )
-			$home_description_frompost = true;
-
-		/**
-		 *
-		 * If the HomePage Description empty, it will check for the InPost
-		 * Description set on the Home Page. And it will set the InPost
-		 * Description as placeholder.
-		 *
-		 * Nesting often used translations.
-		 *
-		 * Notify that the homepage is a blog.
-		 * @since 2.2.2
-		 */
-		if ( $home_description_frompost ) {
-			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
-			$description_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $description_i18n, __( 'Page SEO Settings', 'autodescription' ), $home_page_i18n );
-		}
-
-		$desc_len_pre = $home_description ? $home_description : $description_placeholder;
-
-		/**
-		 * Convert to what Google outputs.
-		 *
-		 * This will convert e.g. &raquo; to a single length character.
-		 * @since 2.3.4
-		 */
-		$tit_len = html_entity_decode( $this->escape_title( $tit_len_pre ) );
-		$desc_len = html_entity_decode( $this->escape_title( $desc_len_pre ) );
-
-		?>
-		<p>
-			<label for="<?php $this->field_id( 'homepage_title_tagline' ); ?>" class="toblock">
-				<strong><?php printf( __( 'Custom %s Title Tagline', 'autodescription' ), $home_page_i18n ); ?></strong>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'homepage_title_tagline' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title_tagline' ); ?>" placeholder="<?php echo $home_tagline_placeholder ?>" value="<?php echo esc_attr( $home_tagline_value ); ?>" />
-		</p>
-
-		<hr>
-
-		<p>
-			<label for="<?php $this->field_id( 'homepage_title' ); ?>" class="toblock">
-				<strong><?php printf( __( 'Custom %s Title', 'autodescription' ), $home_page_i18n ); ?></strong>
-				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3' ); ?>" target="_blank" title="<?php _e( 'Recommended Length: 50 to 55 characters', 'autodescription' ) ?>">[?]</a>
-				<span class="description theseoframework-counter"><?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_title', false ) . '_chars">'. mb_strlen( $tit_len ) .'</span>' ); ?></span>
-			</label>
-		</p>
-		<p id="autodescription-title-wrap">
-			<input type="text" name="<?php $this->field_name( 'homepage_title' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title' ); ?>" placeholder="<?php echo $home_title_placeholder ?>" value="<?php echo esc_attr( $home_title ); ?>" />
-			<span id="autodescription-title-offset" class="hide-if-no-js"></span><span id="autodescription-title-placeholder" class="hide-if-no-js"></span>
-		</p>
-		<?php
-		if ( $title_from_post_message ) {
-			echo '<p class="description">' . $title_from_post_message . '</p>';
-		}
-		?>
-		<hr>
-
-		<p>
-			<label for="<?php $this->field_id( 'homepage_description' ); ?>" class="toblock">
-				<strong><?php printf( __( 'Custom %s Description', 'autodescription' ), $home_page_i18n ); ?></strong>
-				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' ); ?>" target="_blank" title="<?php _e( 'Recommended Length: 145 to 155 characters', 'autodescription' ) ?>">[?]</a>
-				<span class="description theseoframework-counter"><?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_description', false ) . '_chars">'. mb_strlen( $desc_len ) .'</span>' ); ?></span>
-			</label>
-		</p>
-		<p>
-			<textarea name="<?php $this->field_name( 'homepage_description' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_description' ); ?>" rows="3" cols="70"  placeholder="<?php echo $description_placeholder ?>"><?php echo esc_textarea( $home_description ); ?></textarea>
-		</p>
-		<p class="description">
-			<?php _e( 'The meta description can be used to determine the text used under the title on Search Engine results pages.', 'autodescription' ); ?>
-		</p>
-		<?php
-		if ( $description_from_post_message ) {
-			echo '<p class="description">' . $description_from_post_message . '</p>';
-		}
-
+	public function homepage_metabox_general_tab() {
+		$this->get_view( 'metaboxes/homepage-metabox', array(), 'general' );
 	}
 
 	/**
-	 * HomePage Metabox Additions Tab Output
+	 * HomePage Metabox Additions Tab Output.
 	 *
-	 * @since 2.6.0
-	 *
+	 * @since 2.7.0
 	 * @see $this->homepage_metabox() Callback for HomePage Settings box.
 	 */
-	public function homepage_metabox_additions() {
-
-		$home_page_i18n = __( 'Home Page', 'autodescription' );
-
-		/**
-		 * Generate example for Title Additions Location.
-		 */
-		$title_args = $this->generate_home_title();
-
-		//* I know, brilliant.
-		$title = $title_args['title'];
-		$blogname = $title_args['blogname'];
-
-		// Get title separator
-		$sep = $this->get_separator( 'title', true );
-
-		/**
-		 * Generate Examples for both left and right seplocations.
-		 */
-		$example_left = '<em><span class="custom-title-js">' . esc_attr( $title ) . '</span><span class="custom-blogname-js"><span class="autodescription-sep-js"> ' . esc_attr( $sep ) . ' </span><span class="custom-tagline-js">' . esc_attr( $blogname ) . '</span></span></span>' . '</em>';
-		$example_right = '<em>' . '<span class="custom-blogname-js"><span class="custom-tagline-js">' . esc_attr( $blogname ) . '</span><span class="autodescription-sep-js"> ' . esc_attr( $sep ) . ' </span></span><span class="custom-title-js">' . esc_attr( $title ) . '</span></em>';
-
-		?>
-		<fieldset>
-			<legend><h4><?php _e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
-			<p>
-				<span class="description"><?php _e( 'Determines which side the added title text will go on.', 'autodescription' ); ?></span>
-			</p>
-
-			<p id="home-title-location" class="theseoframework-fields">
-				<span class="toblock">
-					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'home_title_location' ), 'left' ); ?> />
-					<label for="<?php $this->field_id( 'home_title_location_left' ); ?>">
-						<span><?php _e( 'Left:', 'autodescription' ); ?></span>
-						<?php echo ( $example_left ) ? $this->code_wrap_noesc( $example_left ) : ''; ?>
-					</label>
-				</span>
-				<span class="toblock">
-					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'home_title_location' ), 'right' ); ?> />
-					<label for="<?php $this->field_id( 'home_title_location_right' ); ?>">
-						<span><?php _e( 'Right:', 'autodescription' ); ?></span>
-						<?php echo ( $example_right ) ? $this->code_wrap_noesc( $example_right ) : ''; ?>
-					</label>
-				</span>
-			</p>
-		</fieldset>
-
-		<hr>
-		<?php
-		/**
-		 * @TODO work on this checkbox.
-		 * @priority low 2.6.x
-		 */
-		?>
-		<h4><?php printf( __( '%s Tagline', 'autodescription' ), $home_page_i18n ); ?></h4>
-		<p id="title-tagline-toggle">
-			<label for="<?php $this->field_id( 'homepage_tagline' ); ?>" class="toblock">
-				<input type="checkbox" name="<?php $this->field_name( 'homepage_tagline' ); ?>" id="<?php $this->field_id( 'homepage_tagline' ); ?>" <?php $this->is_conditional_checked( 'homepage_tagline' ); ?> value="1" <?php checked( $this->get_field_value( 'homepage_tagline' ) ); ?> />
-				<?php printf( __( 'Add site description (tagline) to the Title on the %s?', 'autodescription' ), $home_page_i18n ); ?>
-			</label>
-		</p>
-		<?php
+	public function homepage_metabox_additions_tab() {
+		$this->get_view( 'metaboxes/homepage-metabox', array(), 'additions' );
 	}
 
 	/**
 	 * HomePage Metabox Robots Tab Output
 	 *
-	 * @since 2.6.0
-	 *
+	 * @since 2.7.0
 	 * @see $this->homepage_metabox() Callback for HomePage Settings box.
 	 */
-	public function homepage_metabox_robots() {
-
-		$home_page_i18n = __( 'Home Page', 'autodescription' );
-		$language = $this->google_language();
-
-		//* Get home page ID. If blog on front, it's 0.
-		$home_id = $this->get_the_front_page_ID();
-
-		$noindex_post = $this->get_custom_field( '_genesis_noindex', $home_id );
-		$nofollow_post = $this->get_custom_field( '_genesis_nofollow', $home_id );
-		$noarchive_post = $this->get_custom_field( '_genesis_noarchive', $home_id );
-
-		/**
-		 * Shows user that the setting is checked on the home page.
-		 * Adds starting - with space to maintain readability.
-		 *
-		 * @since 2.2.4
-		 */
-		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
-			$checked_home = ' - <a href="' . esc_url( admin_url( 'post.php?post=' . $home_id . '&action=edit#theseoframework-inpost-box' ) ) . '" target="_blank" class="attention" title="' . __( 'View Home Page Settings', 'autodescription' ) . '" >' . __( 'Checked in Page', 'autodescription' ) . '</a>';
-		} else {
-			$checked_home = '';
-		}
-
-		?>
-		<h4><?php _e( 'Home Page Robots Meta Settings', 'autodescription' ); ?></h4>
-		<?php
-
-		$noindex_note = $noindex_post ? $checked_home : '';
-		$nofollow_note = $nofollow_post ? $checked_home : '';
-		$noarchive_note = $noarchive_post ? $checked_home : '';
-
-		/* translators: 1: Option, 2: Location */
-		$i_label 	= sprintf( __( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n );
-		$i_label	.= ' ';
-		$i_label	.= $this->make_info(
-							__( 'Tell Search Engines not to show this page in their search results', 'autodescription' ),
-							'https://support.google.com/webmasters/answer/93710?hl=' . $language,
-							false
-						)
-					. $noindex_note;
-
-		/* translators: 1: Option, 2: Location */
-		$f_label 	= sprintf( __( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'nofollow' ), $home_page_i18n );
-		$f_label	.= ' ';
-		$f_label	.= $this->make_info(
-							__( 'Tell Search Engines not to follow links on this page', 'autodescription' ),
-							'https://support.google.com/webmasters/answer/96569?hl=' . $language,
-							false
-						)
-					. $nofollow_note;
-
-		/* translators: 1: Option, 2: Location */
-		$a_label 	= sprintf( __( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noarchive' ), $home_page_i18n );
-		$a_label	.= ' ';
-		$a_label 	.=	$this->make_info(
-						__( 'Tell Search Engines not to save a cached copy of this page', 'autodescription' ),
-						'https://support.google.com/webmasters/answer/79812?hl=' . $language,
-						false
-					)
-					. $noarchive_note;
-
-		//* Echo checkboxes.
-		$this->wrap_fields(
-			array(
-				$this->make_checkbox(
-					'homepage_noindex',
-					$i_label,
-					''
-				),
-				$this->make_checkbox(
-					'homepage_nofollow',
-					$f_label,
-					''
-				),
-				$this->make_checkbox(
-					'homepage_noarchive',
-					$a_label,
-					''
-				),
-			),
-			true
-		);
-
-		// Add notice if any options are checked on the post.
-		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
-			?><p class="description"><?php printf( __( 'Note: If any of these options are unchecked, but are checked on the Home Page, they will be outputted regardless.', 'autodescription' ) ); ?></p><?php
-		}
-		?>
-
-		<hr>
-
-		<h4><?php _e( 'Home Page Pagination Robots Settings', 'autodescription' ); ?></h4>
-
-		<p class="description"><?php _e( "If your Home Page is paginated and outputs content that's also found elsewhere on the website, enabling this option might prevent duplicate content.", 'autodescription' ); ?></p>
-
-		<?php
-		//* Echo checkbox.
-		$this->wrap_fields(
-			$this->make_checkbox(
-				'home_paged_noindex',
-				/* translators: 1: Option, 2: Location */
-				sprintf( __( 'Apply %1$s to every second or later page on the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n ),
-				''
-			),
-			true
-		);
-
+	public function homepage_metabox_robots_tab() {
+		$this->get_view( 'metaboxes/homepage-metabox', array(), 'robots' );
 	}
 
 	/**
@@ -1298,151 +378,27 @@
 	 *
 	 * @since 2.2.2
 	 *
-	 * @uses $this->social_metabox_general_tab()
-	 * @uses $this->social_metabox_facebook_tab()
-	 * @uses $this->social_metabox_twitter_tab()
-	 *
-	 * @applies filter 'social_settings_tabs'
-	 *
-	 * @param array $args the social tabs arguments
+	 * @param object|null $post The current post object.
+	 * @param array $args the social tabs arguments.
 	 */
-	public function social_metabox( $args = array() ) {
-
+	public function social_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_social_metabox_before' );
-
-		/**
-		 * Parse tabs content
-		 *
-		 * @param array $default_tabs { 'id' = The identifier =>
-		 *			array(
-		 *				'name' 		=> The name
-		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
-		 *				'dashicon'	=> Desired dashicon
-		 *			)
-		 * }
-		 *
-		 * @since 2.2.2
-		 */
-		$default_tabs = array(
-			'general' => array(
-				'name' 		=> __( 'General', 'autodescription' ),
-				'callback'	=> array( $this, 'social_metabox_general_tab' ),
-				'dashicon'	=> 'admin-generic',
-			),
-			'facebook' => array(
-				'name'		=> 'Facebook',
-				'callback'	=> array( $this, 'social_metabox_facebook_tab' ),
-				'dashicon'	=> 'facebook-alt',
-			),
-			'twitter' => array(
-				'name'		=> 'Twitter',
-				'callback'	=> array( $this, 'social_metabox_twitter_tab' ),
-				'dashicon'	=> 'twitter',
-			),
-			'postdates' => array(
-				'name'		=> __( 'Post Dates', 'autodescription' ),
-				'callback'	=> array( $this, 'social_metabox_postdates_tab' ),
-				'dashicon'	=> 'backup',
-			),
-			'relationships' => array(
-				'name'		=> __( 'Link Relationships', 'autodescription' ),
-				'callback'	=> array( $this, 'social_metabox_relationships_tab' ),
-				'dashicon'	=> 'leftright',
-			),
-		);
-
-		/**
-		 * Applies filters the_seo_framework_social_settings_tabs : array see $default_tabs
-		 *
-		 * Used to extend Social tabs
-		 */
-		$defaults = (array) apply_filters( 'the_seo_framework_social_settings_tabs', $default_tabs, $args );
-
-		$tabs = wp_parse_args( $args, $defaults );
-
-		$this->nav_tab_wrapper( 'social', $tabs, '2.2.2' );
-
+		$this->get_view( 'metaboxes/social-metabox', $args );
 		do_action( 'the_seo_framework_social_metabox_after' );
-
 	}
 
 	/**
-	 * Social Metabox General Tab output
+	 * Social Metabox General Tab output.
 	 *
 	 * @since 2.2.2
-	 *
 	 * @see $this->social_metabox() Callback for Social Settings box.
 	 */
 	protected function social_metabox_general_tab() {
-
-		?>
-		<h4><?php _e( 'Site Shortlink Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php printf( __( 'The shortlink tag might have some use for 3rd party service discoverability, but it has little to no SEO value whatsoever.', 'autodescription' ) ); ?></p>
-		<?php
-
-		//* Echo checkboxes.
-		$this->wrap_fields(
-			$this->make_checkbox(
-				'shortlink_tag',
-				__( 'Output shortlink tag?', 'autodescription' ),
-				''
-			),
-			true
-		);
-
-		?>
-		<hr>
-
-		<h4><?php _e( 'Social Meta Tags Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php _e( 'Output various meta tags for social site integration, among other 3rd party services.', 'autodescription' ); ?></p>
-
-		<hr>
-		<?php
-
-		//* Echo Open Graph Tags checkboxes.
-		$this->wrap_fields(
-			$this->make_checkbox(
-				'og_tags',
-				__( 'Output Open Graph meta tags?', 'autodescription' ),
-				__( 'Facebook, Twitter, Pinterest and many other social sites make use of these tags.', 'autodescription' )
-			),
-			true
-		);
-
-		if ( $this->detect_og_plugin() )
-			echo '<p class="description">' . __( 'Note: Another Open Graph plugin has been detected.', 'autodescription' ) . '</p>';
-
-		?><hr><?php
-
-		//* Echo Facebook Tags checkbox.
-		$this->wrap_fields(
-			$this->make_checkbox(
-				'facebook_tags',
-				__( 'Output Facebook meta tags?', 'autodescription' ),
-				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Facebook' )
-			),
-			true
-		);
-
-		?><hr><?php
-
-		//* Echo Twitter Tags checkboxes.
-		$this->wrap_fields(
-			$this->make_checkbox(
-				'twitter_tags',
-				__( 'Output Twitter meta tags?', 'autodescription' ),
-				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Twitter' )
-			),
-			true
-		);
-
-		if ( $this->detect_twitter_card_plugin() )
-			echo '<p class="description">' . __( 'Note: Another Twitter Card plugin has been detected.', 'autodescription' ) . '</p>';
-
+		$this->get_view( 'metaboxes/social-metabox', array(), 'general' );
 	}
 
 	/**
-	 * Social Metabox Facebook Tab Output
+	 * Social Metabox Facebook Tab output.
 	 *
 	 * @since 2.2.2
 	 *
@@ -1449,218 +405,37 @@
 	 * @see $this->social_metabox() Callback for Social Settings box.
 	 */
 	protected function social_metabox_facebook_tab() {
-
-		$fb_author = $this->get_field_value( 'facebook_author' );
-		$fb_author_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourPersonalProfile', 'Example Facebook Personal URL', 'autodescription' ) : '';
-
-		$fb_publisher = $this->get_field_value( 'facebook_publisher' );
-		$fb_publisher_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourVerifiedBusinessProfile', 'Example Verified Facebook Business URL', 'autodescription' ) : '';
-
-		$fb_appid = $this->get_field_value( 'facebook_appid' );
-		$fb_appid_placeholder = empty( $fb_appid ) ? '123456789012345' : '';
-
-		?>
-		<h4><?php _e( 'Default Facebook Integration Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php _e( 'Facebook post sharing works mostly through Open Graph. However, you can also link your Business and Personal Facebook pages, among various other options.', 'autodescription' ); ?></p>
-		<p class="description"><?php _e( 'When these options are filled in, Facebook might link your Facebook profile to be followed and liked when your post or page is shared.', 'autodescription' ); ?></p>
-
-		<hr>
-
-		<p>
-			<label for="<?php $this->field_id( 'facebook_author' ); ?>">
-				<strong><?php _e( 'Article Author Facebook URL', 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( 'https://facebook.com/me' ); ?>" class="description" target="_blank" title="<?php _e( 'Your Facebook Profile', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'facebook_author' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_author' ); ?>" placeholder="<?php echo $fb_author_placeholder ?>" value="<?php echo esc_attr( $fb_author ); ?>" />
-		</p>
-
-		<p>
-			<label for="<?php $this->field_id( 'facebook_publisher' ); ?>">
-				<strong><?php _e( 'Article Publisher Facebook URL', 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( 'https://instantarticles.fb.com/' ); ?>" class="description" target="_blank" title="<?php _e( 'To use this, you need to be a verified business', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'facebook_publisher' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_publisher' ); ?>" placeholder="<?php echo $fb_publisher_placeholder ?>" value="<?php echo esc_attr( $fb_publisher ); ?>" />
-		</p>
-
-		<p>
-			<label for="<?php $this->field_id( 'facebook_appid' ); ?>">
-				<strong><?php _e( 'Facebook App ID', 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( 'https://developers.facebook.com/apps' ); ?>" target="_blank" class="description" title="<?php _e( 'Get Facebook App ID', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'facebook_appid' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_appid' ); ?>" placeholder="<?php echo $fb_appid_placeholder ?>" value="<?php echo esc_attr( $fb_appid ); ?>" />
-		</p>
-		<?php
-
+		$this->get_view( 'metaboxes/social-metabox', array(), 'facebook' );
 	}
 
 	/**
-	 * Social Metabox Twitter Tab Output
+	 * Social Metabox Twitter Tab output.
 	 *
 	 * @since 2.2.2
-	 *
 	 * @see $this->social_metabox() Callback for Social Settings box.
 	 */
 	protected function social_metabox_twitter_tab() {
-
-		$tw_site = $this->get_field_value( 'twitter_site' );
-		$tw_site_placeholder = empty( $tw_site ) ? _x( '@your-site-username', 'Twitter @username', 'autodescription' ) : '';
-
-		$tw_creator = $this->get_field_value( 'twitter_creator' );
-		$tw_creator_placeholder = empty( $tw_creator ) ? _x( '@your-personal-username', 'Twitter @username', 'autodescription' ) : '';
-
-		$twitter_card = $this->get_twitter_card_types();
-
-		?>
-		<h4><?php _e( 'Default Twitter Integration Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php printf( __( 'Twitter post sharing works mostly through Open Graph. However, you can also link your Business and Personal Twitter pages, among various other options.', 'autodescription' ) ); ?></p>
-
-		<hr>
-
-		<fieldset id="twitter-cards">
-			<legend><h4><?php _e( 'Twitter Card Type', 'autodescription' ); ?></h4></legend>
-			<p class="description"><?php printf( __( 'What kind of Twitter card would you like to use? It will default to %s if no image is found.', 'autodescription' ), $this->code_wrap( 'Summary' ) ); ?></p>
-
-			<p class="theseoframework-fields">
-			<?php
-				foreach ( $twitter_card as $type => $name ) {
-					?>
-						<span class="toblock">
-							<input type="radio" name="<?php $this->field_name( 'twitter_card' ); ?>" id="<?php $this->field_id( 'twitter_card_' . $type ); ?>" value="<?php echo $type ?>" <?php checked( $this->get_field_value( 'twitter_card' ), $type ); ?> />
-							<label for="<?php $this->field_id( 'twitter_card_' . $type ); ?>">
-								<span><?php echo $this->code_wrap( ucfirst( $name ) ); ?></span>
-								<a class="description" href="<?php echo esc_url('https://dev.twitter.com/cards/types/' . $name ); ?>" target="_blank" title="Twitter Card <?php echo ucfirst( $name ) . ' ' . __( 'Example', 'autodescription' ); ?>"><?php _e( 'Example', 'autodescription' ); ?></a>
-							</label>
-						</span>
-					<?php
-				}
-			?>
-			</p>
-		</fieldset>
-
-		<hr>
-
-		<p class="description"><?php printf( __( 'When the following options are filled in, Twitter might link your Twitter Site or Personal Profile when your post or page is shared.', 'autodescription' ) ); ?></p>
-		<p>
-			<label for="<?php $this->field_id( 'twitter_site' ); ?>" class="toblock">
-				<strong><?php _e( "Your Website's Twitter Profile", 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php _e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'twitter_site' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_site' ); ?>" placeholder="<?php echo $tw_site_placeholder ?>" value="<?php echo esc_attr( $tw_site ); ?>" />
-		</p>
-
-		<p>
-			<label for="<?php $this->field_id( 'twitter_creator' ); ?>" class="toblock">
-				<strong><?php _e( 'Your Personal Twitter Profile', 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php _e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'twitter_creator' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_creator' ); ?>" placeholder="<?php echo $tw_creator_placeholder ?>" value="<?php echo esc_attr( $tw_creator ); ?>" />
-		</p>
-		<?php
-
+		$this->get_view( 'metaboxes/social-metabox', array(), 'twitter' );
 	}
 
 	/**
-	 * Social Metabox PostDates Tab Output
+	 * Social Metabox PostDates Tab output.
 	 *
 	 * @since 2.2.4
-	 *
 	 * @see $this->social_metabox() Callback for Social Settings box.
 	 */
 	public function social_metabox_postdates_tab() {
-
-		$pages_i18n = __( 'Pages', 'autodescription' );
-		$posts_i18n = __( 'Posts', 'autodescription' );
-		$home_i18n = __( 'Home Page', 'autodescription' );
-
-		?>
-		<h4><?php _e( 'Post Date Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php _e( "Some Search Engines output the publishing date and modified date next to the search results. These help Search Engines find new content and could impact the SEO value.", 'autodescription' ); ?></p>
-		<p class="description"><?php _e( "It's recommended on posts, but it's not recommended on pages unless you modify or create new pages frequently.", 'autodescription' ); ?></p>
-
-		<?php
-			/* translators: 1: Option, 2: Post Type */
-			$post_publish_time_label = sprintf( __( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $posts_i18n );
-			$post_publish_time_checkbox = $this->make_checkbox( 'post_publish_time', $post_publish_time_label, '' );
-
-			/* translators: 1: Option, 2: Post Type */
-			$page_publish_time_label = sprintf( __( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $pages_i18n );
-			$page_publish_time_checkbox = $this->make_checkbox( 'page_publish_time', $page_publish_time_label, '' );
-
-			//* Echo checkboxes.
-			echo $this->wrap_fields( $post_publish_time_checkbox . $page_publish_time_checkbox );
-
-			/* translators: 1: Option, 2: Post Type */
-			$post_modify_time_label = sprintf( __( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $posts_i18n );
-			$post_modify_time_checkbox = $this->make_checkbox( 'post_modify_time', $post_modify_time_label, '' );
-
-			/* translators: 1: Option, 2: Post Type */
-			$page_modify_time_label = sprintf( __( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $pages_i18n );
-			$page_modify_time_checkbox = $this->make_checkbox( 'page_modify_time', $page_modify_time_label, '' );
-
-			//* Echo checkboxes.
-			echo $this->wrap_fields( $post_modify_time_checkbox . $page_modify_time_checkbox );
-		?>
-
-		<hr>
-
-		<h4><?php _e( 'Home Page', 'autodescription' ); ?></h4>
-		<p class="description"><?php _e( "Because you only publish the Home Page once, Search Engines might think your website is outdated. This can be prevented by disabling the following options.", 'autodescription' ); ?></p>
-
-		<?php
-			/* translators: 1: Option, 2: Post Type */
-			$home_publish_time_label = sprintf( __( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $home_i18n );
-			$home_publish_time_checkbox = $this->make_checkbox( 'home_publish_time', $home_publish_time_label, '' );
-
-			/* translators: 1: Option, 2: Post Type */
-			$home_modify_time_label = sprintf( __( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $home_i18n );
-			$home_modify_time_checkbox = $this->make_checkbox( 'home_modify_time', $home_modify_time_label, '' );
-
-			//* Echo checkboxes.
-			echo $this->wrap_fields( $home_publish_time_checkbox . $home_modify_time_checkbox );
-
+		$this->get_view( 'metaboxes/social-metabox', array(), 'postdates' );
 	}
 
 	/**
-	 * Social Metabox Relationships Tab Output
+	 * Social Metabox Relationships Tab output.
 	 *
 	 * @since 2.2.4
-	 *
 	 * @see $this->social_metabox() Callback for Social Settings box.
 	 */
 	public function social_metabox_relationships_tab() {
-
-		?>
-		<h4><?php _e( 'Link Relationship Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php _e( "Some Search Engines look for relations between the content of your pages. If you have multiple pages for a single Post or Page, or have archives indexed, this option will help Search Engines look for the right page to display in the Search Results.", 'autodescription' ); ?></p>
-		<p class="description"><?php _e( "It's recommended to turn this option on for better SEO consistency and to prevent duplicate content errors.", 'autodescription' ); ?></p>
-
-		<hr>
-		<?php
-			/* translators: %s = <code>rel</code> */
-			$prev_next_posts_label = sprintf( __( 'Add %s link tags to Posts and Pages?', 'autodescription' ), $this->code_wrap( 'rel' ) );
-			$prev_next_posts_checkbox = $this->make_checkbox( 'prev_next_posts', $prev_next_posts_label, '' );
-
-			/* translators: %s = <code>rel</code> */
-			$prev_next_archives_label = sprintf( __( 'Add %s link tags to Archives?', 'autodescription' ), $this->code_wrap( 'rel' ) );
-			$prev_next_archives_checkbox = $this->make_checkbox( 'prev_next_archives', $prev_next_archives_label, '' );
-
-			/* translators: %s = <code>rel</code> */
-			$prev_next_frontpage_label = sprintf( __( 'Add %s link tags to the Home Page?', 'autodescription' ), $this->code_wrap( 'rel' ) );
-			$prev_next_frontpage_checkbox = $this->make_checkbox( 'prev_next_frontpage', $prev_next_frontpage_label, '' );
-
-			//* Echo checkboxes.
-			echo $this->wrap_fields( $prev_next_posts_checkbox . $prev_next_archives_checkbox . $prev_next_frontpage_checkbox );
-
+		$this->get_view( 'metaboxes/social-metabox', array(), 'relationships' );
 	}
 
 	/**
@@ -1667,69 +442,14 @@
 	 * Webmaster meta box on the Site SEO Settings page.
 	 *
 	 * @since 2.2.4
+	 *
+	 * @param object|null $post The current post object.
+	 * @param array $args the social tabs arguments.
 	 */
-	public function webmaster_metabox() {
-
+	public function webmaster_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_webmaster_metabox_before' );
-
-		$site_url = $this->the_home_url_from_cache();
-		$language = $this->google_language();
-
-		$bing_site_url = "https://www.bing.com/webmaster/configure/verify/ownership?url=" . urlencode( $site_url );
-		$google_site_url = "https://www.google.com/webmasters/verification/verification?hl=" . $language . "&siteUrl=" . $site_url;
-		$pint_site_url = "https://analytics.pinterest.com/";
-		$yandex_site_url = "https://webmaster.yandex.com/site/verification.xml";
-
-		?>
-		<h4><?php _e( 'Webmaster Integration Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php _e( "When adding your website to Google, Bing and other Webmaster Tools, you'll be asked to add a code or file to your website for verification purposes. These options will help you easily integrate those codes.", 'autodescription' ); ?></p>
-		<p class="description"><?php _e( "Verifying your website has no SEO value whatsoever. But you might gain added benefits such as search ranking insights to help you improve your website's content.", 'autodescription' ); ?></p>
-
-		<hr>
-
-		<p>
-			<label for="<?php $this->field_id( 'google_verification' ); ?>" class="toblock">
-				<strong><?php _e( "Google Webmaster Verification Code", 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( $google_site_url ); ?>" target="_blank" class="description" title="<?php _e( 'Get the Google Verification code', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'google_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'google_verification' ); ?>" placeholder="ABC1d2eFg34H5iJ6klmNOp7qRstUvWXyZaBc8dEfG9" value="<?php echo esc_attr( $this->get_field_value( 'google_verification' ) ); ?>" />
-		</p>
-
-		<p>
-			<label for="<?php $this->field_id( 'bing_verification' ); ?>" class="toblock">
-				<strong><?php _e( "Bing Webmaster Verification Code", 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( $bing_site_url ); ?>" target="_blank" class="description" title="<?php _e( 'Get the Bing Verification Code', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'bing_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'bing_verification' ); ?>" placeholder="123A456B78901C2D3456E7890F1A234D" value="<?php echo esc_attr( $this->get_field_value( 'bing_verification' ) ); ?>" />
-		</p>
-
-		<p>
-			<label for="<?php $this->field_id( 'yandex_verification' ); ?>" class="toblock">
-				<strong><?php _e( "Yandex Webmaster Verification Code", 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( $yandex_site_url ); ?>" target="_blank" class="description" title="<?php _e( 'Get the Yandex Verification Code', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'yandex_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'yandex_verification' ); ?>" placeholder="12345abc678901d2" value="<?php echo esc_attr( $this->get_field_value( 'yandex_verification' ) ); ?>" />
-		</p>
-
-		<p>
-			<label for="<?php $this->field_id( 'pint_verification' ); ?>" class="toblock">
-				<strong><?php _e( "Pinterest Analytics Verification Code", 'autodescription' ); ?></strong>
-				<a href="<?php echo esc_url( $pint_site_url ); ?>" target="_blank" class="description" title="<?php _e( 'Get the Pinterest Verification Code', 'autodescription' ); ?>">[?]</a>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'pint_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'pint_verification' ); ?>" placeholder="123456a7b8901de2fa34bcdef5a67b98" value="<?php echo esc_attr( $this->get_field_value( 'pint_verification' ) ); ?>" />
-		</p>
-		<?php
-
+		$this->get_view( 'metaboxes/webmaster-metabox', $args );
 		do_action( 'the_seo_framework_webmaster_metabox_after' );
-
 	}
 
 	/**
@@ -1737,251 +457,43 @@
 	 *
 	 * @since 2.2.8
 	 *
-	 * @see $this->knowledge_metabox() Callback for Social Settings box.
+	 * @param object|null $post The current post object.
+	 * @param array $args the social tabs arguments.
 	 */
-	public function knowledge_metabox( $args = array() ) {
-
+	public function knowledge_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_knowledge_metabox_before' );
-
-		/**
-		 * Parse tabs content
-		 *
-		 * @param array $default_tabs { 'id' = The identifier =>
-		 *			array(
-		 *				'name' 		=> The name
-		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
-		 *				'dashicon'	=> Desired dashicon
-		 *			)
-		 * }
-		 *
-		 * @since 2.2.8
-		 */
-		$default_tabs = array(
-			'general' => array(
-				'name' 		=> __( 'General', 'autodescription' ),
-				'callback'	=> array( $this, 'knowledge_metabox_general_tab' ),
-				'dashicon'	=> 'admin-generic',
-			),
-			'website' => array(
-				'name'		=> __( 'Website', 'autodescription' ),
-				'callback'	=> array( $this, 'knowledge_metabox_about_tab' ),
-				'dashicon'	=> 'admin-home',
-			),
-			'social' => array(
-				'name'		=> 'Social Sites',
-				'callback'	=> array( $this, 'knowledge_metabox_social_tab' ),
-				'dashicon'	=> 'networking',
-			),
-		);
-
-		/**
-		 * Applies filter knowledgegraph_settings_tabs : Array see $default_tabs
-		 *
-		 * Used to extend Knowledge Graph tabs
-		 */
-		$defaults = (array) apply_filters( 'the_seo_framework_knowledgegraph_settings_tabs', $default_tabs, $args );
-
-		$tabs = wp_parse_args( $args, $defaults );
-
-		$this->nav_tab_wrapper( 'knowledge', $tabs, '2.2.8' );
-
+		$this->get_view( 'metaboxes/knowledge-metabox', $args );
 		do_action( 'the_seo_framework_knowledge_metabox_after' );
-
 	}
 
 	/**
-	 * Knowledge Graph Metabox General Tab Output
+	 * Knowledge Graph Metabox General Tab output.
 	 *
 	 * @since 2.2.8
-	 *
 	 * @see $this->knowledge_metabox() Callback for Knowledge Graph Settings box.
 	 */
 	public function knowledge_metabox_general_tab() {
-
-		?>
-		<h4><?php _e( 'Knowledge Graph Settings', 'autodescription' ); ?></h4>
-		<p><span class="description"><?php printf( __( "The Knowledge Graph lets Google and other Search Engines know where to find you or your organization and its relevant content.", 'autodescription' ) ); ?></span></p>
-		<p><span class="description"><?php printf( __( "Google is becoming more of an 'Answer Engine' than a 'Search Engine'. Setting up these options could have a positive impact on the SEO value of your website.", 'autodescription' ) ); ?></span></p>
-
-		<?php
-			$knowledge_output_label = __( 'Output Knowledge tags?', 'autodescription' );
-			$knowledge_output_checkbox = $this->make_checkbox( 'knowledge_output', $knowledge_output_label, '' );
-
-			//* Echo checkbox.
-			echo $this->wrap_fields( $knowledge_output_checkbox );
-
-		if ( $this->wp_version( '4.2.999', '>=' ) ) :
-		?>
-			<hr>
-
-			<h4><?php printf( _x( "Website logo", 'WordPress Customizer', 'autodescription' ) ); ?></h4>
-			<?php
-				$knowledge_logo_label = __( 'Use the Favicon from Customizer as the Organization Logo?', 'autodescription' );
-				$knowledge_logo_description = __( "This option only has an effect when this site represents an Organization. If left disabled, Search Engines will look elsewhere for a logo, if it exists and is assigned as a logo.", 'autodescription' );
-				$knowledge_logo_checkbox = $this->make_checkbox( 'knowledge_logo', $knowledge_logo_label, $knowledge_logo_description );
-
-				//* Echo checkbox.
-				echo $this->wrap_fields( $knowledge_logo_checkbox );
-		endif;
-
+		$this->get_view( 'metaboxes/knowledge-metabox', array(), 'general' );
 	}
 
 	/**
-	 * Knowledge Graph Metabox About Tab Output
+	 * Knowledge Graph Metabox About Tab output.
 	 *
 	 * @since 2.2.8
-	 *
 	 * @see $this->knowledge_metabox() Callback for Knowledge Graph Settings box.
 	 */
 	public function knowledge_metabox_about_tab() {
-
-		$blogname = $this->get_blogname();
-
-		?>
-		<h4><?php _e( 'About this website', 'autodescription' ); ?></h4>
-		<p><span class="description"><?php printf( __( 'Who or what is your website about?', 'autodescription' ) ); ?></span></p>
-
-		<hr>
-
-		<p>
-			<label for="<?php $this->field_id( 'knowledge_type' ); ?>"><?php _ex( 'This website represents:', '...Organization or Person.', 'autodescription' ); ?></label>
-			<select name="<?php $this->field_name( 'knowledge_type' ); ?>" id="<?php $this->field_id( 'knowledge_type' ); ?>">
-			<?php
-			$knowledge_type = (array) apply_filters(
-				'the_seo_framework_knowledge_types',
-				array(
-					'organization'	=> __( 'An Organization', 'autodescription' ),
-					'person' 		=> __( 'A Person', 'autodescription' ),
-				)
-			);
-			foreach ( $knowledge_type as $value => $name )
-				echo '<option value="' . esc_attr( $value ) . '"' . selected( $this->get_field_value( 'knowledge_type' ), esc_attr( $value ), false ) . '>' . esc_html( $name ) . '</option>' . "\n";
-			?>
-			</select>
-		</p>
-
-		<hr>
-
-		<p>
-			<label for="<?php $this->field_id( 'knowledge_name' ); ?>">
-				<strong><?php _e( "The organization or personal name", 'autodescription' ); ?></strong>
-			</label>
-		</p>
-		<p>
-			<input type="text" name="<?php $this->field_name( 'knowledge_name' ); ?>" class="large-text" id="<?php $this->field_id( 'knowledge_name' ); ?>" placeholder="<?php echo esc_attr( $blogname ) ?>" value="<?php echo esc_attr( $this->get_field_value( 'knowledge_name' ) ); ?>" />
-		</p>
-		<?php
-
+		$this->get_view( 'metaboxes/knowledge-metabox', array(), 'about' );
 	}
 
 	/**
-	 * Knowledge Graph Metabox Social Tab Output
+	 * Knowledge Graph Metabox Social Tab output.
 	 *
 	 * @since 2.2.8
-	 *
 	 * @see $this->knowledge_metabox() Callback for Knowledge Graph Settings box.
 	 */
 	public function knowledge_metabox_social_tab() {
-
-		?>
-		<h4><?php _e( 'Social Pages connected to this website', 'autodescription' ); ?></h4>
-		<p><span class="description"><?php _e( "Don't have a page at a site or is the profile only privately accessible? Leave that field empty. Unsure? Fill it in anyway.", 'autodescription' ); ?></span></p>
-		<p><span class="description"><?php _e( "Add the link that leads directly to the social page of this website.", 'autodescription' ); ?></span></p>
-
-		<hr>
-
-		<?php
-		$connectedi18n = _x( 'RelatedProfile', 'No spaces. E.g. https://facebook.com/RelatedProfile', 'autodescription' );
-		$profile18n = _x( 'Profile', 'Social Profile', 'autodescription' );
-
-		/**
-		 * @todo maybe genericons?
-		 */
-
-		$socialsites = array(
-			'facebook' => array(
-				'option'		=> 'knowledge_facebook',
-				'dashicon'		=> 'dashicons-facebook',
-				'desc' 			=> 'Facebook ' . __( 'Page', 'autodescription' ),
-				'placeholder'	=> 'http://www.facebook.com/' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://facebook.com/me' ),
-			),
-			'twitter' => array(
-				'option'		=> 'knowledge_twitter',
-				'dashicon'		=> 'dashicons-twitter',
-				'desc' 			=> 'Twitter ' . $profile18n,
-				'placeholder'	=> 'http://www.twitter.com/' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://twitter.com/home' ), // No example link available.
-			),
-			'gplus' => array(
-				'option'		=> 'knowledge_gplus',
-				'dashicon'		=> 'dashicons-googleplus',
-				'desc' 			=>  'Google+ ' . $profile18n,
-				'placeholder'	=> 'https://plus.google.com/' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://plus.google.com/me' ),
-			),
-			'instagram' => array(
-				'option'		=> 'knowledge_instagram',
-				'dashicon'		=> 'genericon-instagram',
-				'desc' 			=> 'Instagram ' . $profile18n,
-				'placeholder'	=> 'http://instagram.com/' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://instagram.com/' ), // No example link available.
-			),
-			'youtube' => array(
-				'option'		=> 'knowledge_youtube',
-				'dashicon'		=> 'genericon-youtube',
-				'desc' 			=> 'Youtube ' . $profile18n,
-				'placeholder'	=> 'http://www.youtube.com/' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://www.youtube.com/user/%2f' ), // Yes a double slash.
-			),
-			'linkedin' => array(
-				'option'		=> 'knowledge_linkedin',
-				'dashicon'		=> 'genericon-linkedin-alt',
-				'desc' 			=> 'LinkedIn ' . $profile18n . ' ID',
-				'placeholder'	=> 'http://www.linkedin.com/profile/view?id=' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://www.linkedin.com/profile/view' ), // This generates a query arg. We should allow that.
-			),
-			'pinterest' => array(
-				'option'		=> 'knowledge_pinterest',
-				'dashicon'		=> 'genericon-pinterest-alt',
-				'desc' 			=> 'Pinterest ' . $profile18n,
-				'placeholder'	=> 'https://www.pinterest.com/' . $connectedi18n . '/',
-				'examplelink'	=> esc_url( 'https://www.pinterest.com/me/' ),
-			),
-			'soundcloud' => array(
-				'option'		=> 'knowledge_soundcloud',
-				'dashicon'		=> 'genericon-cloud', // I know, it's not the real one. D:
-				'desc' 			=> 'SoundCloud ' . $profile18n,
-				'placeholder'	=> 'https://soundcloud.com/' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://soundcloud.com/you' ),
-			),
-			'tumblr' => array(
-				'option'		=> 'knowledge_tumblr',
-				'dashicon'		=> 'genericon-tumblr',
-				'desc' 			=> 'Tumblr ' . __( 'Blog', 'autodescription' ),
-				'placeholder'	=> 'https://tumblr.com/blog/' . $connectedi18n,
-				'examplelink'	=> esc_url( 'https://www.tumblr.com/dashboard' ),  // No example link available.
-			),
-		);
-
-		foreach ( $socialsites as $key => $value ) {
-			?>
-			<p>
-				<label for="<?php $this->field_id( $value['option'] ); ?>">
-					<strong><?php echo $value['desc'] ?></strong>
-					<?php
-					if ( $value['examplelink'] ) {
-						?><a href="<?php echo esc_url( $value['examplelink'] ); ?>" target="_blank">[?]</a><?php
-					}
-					?>
-				</label>
-			</p>
-			<p>
-				<input type="text" name="<?php $this->field_name( $value['option'] ); ?>" class="large-text" id="<?php $this->field_id( $value['option'] ); ?>" placeholder="<?php echo esc_attr( $value['placeholder'] ) ?>" value="<?php echo esc_attr( $this->get_field_value( $value['option'] ) ); ?>" />
-			</p>
-			<?php
-		}
-
+		$this->get_view( 'metaboxes/knowledge-metabox', array(), 'social' );
 	}
 
 	/**
@@ -1988,437 +500,82 @@
 	 * Sitemaps meta box on the Site SEO Settings page.
 	 *
 	 * @since 2.2.9
+	 * @see $this->sitemaps_metabox() Callback for Sitemaps Settings box.
 	 *
-	 * @see $this->sitemaps_metabox() Callback for Sitemaps Settings box.
+	 * @param object|null $post The current post object.
+	 * @param array $args the social tabs arguments.
 	 */
-	public function sitemaps_metabox( $args = array() ) {
-
+	public function sitemaps_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_sitemaps_metabox_before' );
-
-		if ( ! $this->pretty_permalinks ) {
-
-			$permalink_settings_url = esc_url( admin_url( 'options-permalink.php' ) );
-			$here = '<a href="' . $permalink_settings_url  . '" target="_blank" title="' . __( 'Permalink Settings', 'autodescription' ) . '">' . _x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
-
-			?>
-			<h4><?php _e( "You're using the plain permalink structure.", 'autodescription' ); ?></h4>
-			<p><span class="description"><?php _e( "This means we can't output the sitemap through the WordPress rewrite rules.", 'autodescription' ); ?></span></p>
-			<hr>
-			<p><span class="description"><?php printf( _x( "Change your Permalink Settings %s (Recommended: 'postname').", '%s = here', 'autodescription' ), $here ); ?></span></p>
-			<?php
-
-		} else {
-
-			/**
-			 * Parse tabs content
-			 *
-			 * @param array $default_tabs { 'id' = The identifier =>
-			 *			array(
-			 *				'name' 		=> The name
-			 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
-			 *				'dashicon'	=> Desired dashicon
-			 *			)
-			 * }
-			 *
-			 * @since 2.2.9
-			 */
-			$default_tabs = array(
-				'general' => array(
-					'name' 		=> __( 'General', 'autodescription' ),
-					'callback'	=> array( $this, 'sitemaps_metabox_general_tab' ),
-					'dashicon'	=> 'admin-generic',
-				),
-				'robots' => array(
-					'name'		=> 'Robots.txt',
-					'callback'	=> array( $this, 'sitemaps_metabox_robots_tab' ),
-					'dashicon'	=> 'share-alt2',
-				),
-				'timestamps' => array(
-					'name'		=> __( 'Timestamps', 'autodescription' ),
-					'callback'	=> array( $this, 'sitemaps_metabox_timestamps_tab' ),
-					'dashicon'	=> 'backup',
-				),
-				'notify' => array(
-					'name'		=> _x( 'Ping', 'Ping or notify Search Engine', 'autodescription' ),
-					'callback'	=> array( $this, 'sitemaps_metabox_notify_tab' ),
-					'dashicon'	=> 'megaphone',
-				),
-			);
-
-			/**
-			 * Applies filters the_seo_framework_sitemaps_settings_tabs : array see $default_tabs
-			 *
-			 * Used to extend Knowledge Graph tabs
-			 */
-			$defaults = (array) apply_filters( 'the_seo_framework_sitemaps_settings_tabs', $default_tabs, $args );
-
-			$tabs = wp_parse_args( $args, $defaults );
-			$use_tabs = true;
-
-			$sitemap_plugin = $this->detect_sitemap_plugin();
-			$sitemap_detected = $this->has_sitemap_xml();
-			$robots_detected = $this->has_robots_txt();
-
-			/**
-			 * Remove the timestamps and notify submenus
-			 * @since 2.5.2
-			 */
-			if ( $sitemap_plugin || $sitemap_detected ) {
-				unset( $tabs['timestamps'] );
-				unset( $tabs['notify'] );
-			}
-
-			/**
-			 * Remove the robots submenu
-			 * @since 2.5.2
-			 */
-			if ( $robots_detected ) {
-				unset( $tabs['robots'] );
-			}
-
-			if ( $robots_detected && ( $sitemap_plugin || $sitemap_detected ) )
-				$use_tabs = false;
-
-			$this->nav_tab_wrapper( 'sitemaps', $tabs, '2.2.8', $use_tabs );
-
-		}
-
+		$this->get_view( 'metaboxes/sitemaps-metabox', $args );
 		do_action( 'the_seo_framework_sitemaps_metabox_after' );
-
 	}
 
 	/**
-	 * Sitemaps Metabox General Tab Output
+	 * Sitemaps Metabox General Tab output.
 	 *
 	 * @since 2.2.9
-	 *
 	 * @see $this->sitemaps_metabox() Callback for Sitemaps Settings box.
 	 */
 	public function sitemaps_metabox_general_tab() {
-
-		$site_url = $this->the_home_url_from_cache( true );
-
-		$sitemap_url = $site_url . 'sitemap.xml';
-		$has_sitemap_plugin = $this->detect_sitemap_plugin();
-		$sitemap_detected = $this->has_sitemap_xml();
-
-		?>
-		<h4><?php _e( 'Sitemap Integration Settings', 'autodescription' ); ?></h4>
-		<?php
-
-		if ( $has_sitemap_plugin ) {
-			?>
-			<p class="description"><?php _e( "Another active sitemap plugin has been detected. This means that the sitemap functionality has been replaced.", 'autodescription' ); ?></p>
-			<?php
-		} else if ( $sitemap_detected ) {
-			?>
-			<p class="description"><?php _e( "A sitemap has been detected in the root folder of your website. This means that the sitemap functionality has no effect.", 'autodescription' ); ?></p>
-			<?php
-		} else {
-			?>
-			<p class="description"><?php _e( "The Sitemap is an XML file that lists pages and posts for your website along with optional metadata about each post or page. This helps Search Engines crawl your website more easily.", 'autodescription' ); ?></p>
-			<p class="description"><?php _e( "The optional metadata include the post and page modified time and a page priority indication, which is automated.", 'autodescription' ); ?></p>
-
-			<hr>
-
-			<h4><?php _e( 'Sitemap Output', 'autodescription' ); ?></h4>
-			<?php
-				$sitemaps_output_label = __( 'Output Sitemap?', 'autodescription' );
-				$sitemaps_output_checkbox = $this->make_checkbox( 'sitemaps_output', $sitemaps_output_label, '' );
-
-				//* Echo checkbox.
-				echo $this->wrap_fields( $sitemaps_output_checkbox );
-		}
-
-		if ( ! ( $has_sitemap_plugin || $sitemap_detected ) && $this->get_option( 'sitemaps_output' ) ) {
-			$here = '<a href="' . $sitemap_url  . '" target="_blank" title="' . __( 'View sitemap', 'autodescription' ) . '">' . _x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
-
-			?><p class="description"><?php printf( _x( 'The sitemap can be found %s.', '%s = here', 'autodescription' ), $here ); ?></p><?php
-		}
-
+		$this->get_view( 'metaboxes/sitemaps-metabox', array(), 'general' );
 	}
 
 	/**
-	 * Sitemaps Metabox Robots Tab Output
+	 * Sitemaps Metabox Robots Tab output.
 	 *
 	 * @since 2.2.9
-	 *
 	 * @see $this->sitemaps_metabox() Callback for Sitemaps Settings box.
 	 */
 	public function sitemaps_metabox_robots_tab() {
-
-		$site_url = $this->the_home_url_from_cache( true );
-
-		$robots_url = trailingslashit( $site_url ) . 'robots.txt';
-		$here =  '<a href="' . $robots_url  . '" target="_blank" title="' . __( 'View robots.txt', 'autodescription' ) . '">' . _x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
-
-		?>
-		<h4><?php _e( 'Robots.txt Settings', 'autodescription' ); ?></h4>
-		<?php
-		if ( $this->can_do_sitemap_robots() ) :
-			?>
-			<p class="description"><?php _e( 'The robots.txt file is the first thing Search Engines look for. If you add the sitemap location in the robots.txt file, then Search Engines will look for and index the sitemap.', 'autodescription' ); ?></p>
-			<p class="description"><?php _e( 'If you do not add the sitemap location to the robots.txt file, you will need to notify Search Engines manually through the Webmaster Console provided by the Search Engines.', 'autodescription' ); ?></p>
-
-			<hr>
-
-			<h4><?php _e( 'Add sitemap location in robots.txt', 'autodescription' ); ?></h4>
-			<?php
-			//* Echo checkbox.
-			$this->wrap_fields(
-				$this->make_checkbox(
-					'sitemaps_robots',
-					__( 'Add sitemap location in robots?', 'autodescription' ),
-					''
-				), true
-			);
-		else :
-			?>
-			<p class="description"><?php _e( 'Another robots.txt sitemap Location addition has been detected.', 'autodescription' ); ?></p>
-			<?php
-		endif;
-
-		?>
-		<p class="description"><?php printf( _x( 'The robots.txt file can be found %s.', '%s = here', 'autodescription' ), $here ); ?></p>
-		<?php
-
+		$this->get_view( 'metaboxes/sitemaps-metabox', array(), 'robots' );
 	}
 
 	/**
-	 * Sitemaps Metabox Timestamps Tab Output
+	 * Sitemaps Metabox Timestamps Tab output.
 	 *
 	 * @since 2.2.9
-	 *
 	 * @see $this->sitemaps_metabox() Callback for Sitemaps Settings box.
 	 */
 	public function sitemaps_metabox_timestamps_tab() {
-
-		//* Sets timezone according to WordPress settings.
-		$this->set_timezone();
-
-		$timestamp_0 = date( 'Y-m-d' );
-
-		/**
-		 * @link https://www.w3.org/TR/NOTE-datetime
-		 * We use the second expression of the time zone offset handling.
-		 */
-		$timestamp_1 = date( 'Y-m-d\TH:iP' );
-
-		//* Reset timezone to previous value.
-		$this->reset_timezone();
-
-		?>
-		<h4><?php _e( 'Timestamps Settings', 'autodescription' ); ?></h4>
-		<p><span class="description"><?php _e( 'The modified time suggests to Search Engines where to look for content changes. It has no impact on the SEO value unless you drastically change pages or posts. It then depends on how well your content is constructed.', 'autodescription' ); ?></span></p>
-		<p><span class="description"><?php _e( "By default, the sitemap only outputs the modified date if you've enabled them within the Social Metabox. This setting overrides those settings for the Sitemap.", 'autodescription' ); ?></span></p>
-
-		<hr>
-
-		<h4><?php _e( 'Output Modified Date', 'autodescription' ); ?></h4>
-		<?php
-			$sitemaps_modified_label = sprintf( __( 'Add %s to the sitemap?', 'autodescription' ), $this->code_wrap( '<lastmod>' ) );
-			$sitemaps_modified_checkbox = $this->make_checkbox( 'sitemaps_modified', $sitemaps_modified_label, '' );
-
-			//* Echo checkbox.
-			echo $this->wrap_fields( $sitemaps_modified_checkbox );
-		?>
-
-		<hr>
-
-		<fieldset>
-			<legend><h4><?php _e( 'Timestamp Format Settings', 'autodescription' ); ?></h4></legend>
-			<p>
-				<span class="description"><?php _e( 'Determines how specific the modification timestamp is.', 'autodescription' ); ?></span>
-			</p>
-
-			<p id="sitemaps-timestamp-format" class="theseoframework-fields">
-				<span class="toblock">
-					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>" value="0" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '0' ); ?> />
-					<label for="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>">
-						<span title="<?php _e( 'Complete date', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_0 ) ?> [?]</span>
-					</label>
-				</span>
-				<span class="toblock">
-					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>" value="1" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '1' ); ?> />
-					<label for="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>">
-						<span title="<?php _e( 'Complete date plus hours, minutes and timezone', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_1 ); ?> [?]</span>
-					</label>
-				</span>
-			</p>
-		</fieldset>
-		<?php
-
+		$this->get_view( 'metaboxes/sitemaps-metabox', array(), 'timestamps' );
 	}
 
 	/**
-	 * Sitemaps Metabox Notify Tab Output
+	 * Sitemaps Metabox Notify Tab output.
 	 *
 	 * @since 2.2.9
-	 *
 	 * @see $this->sitemaps_metabox() Callback for Sitemaps Settings box.
 	 */
 	public function sitemaps_metabox_notify_tab() {
-
-		?>
-		<h4><?php _e( 'Ping Settings', 'autodescription' ); ?></h4>
-		<p><span class="description"><?php _e( "Notifying Search Engines of a sitemap change is helpful to get your content indexed as soon as possible.", 'autodescription' ); ?></span></p>
-		<p><span class="description"><?php _e( "By default this will happen at most once an hour.", 'autodescription' ); ?></span></p>
-
-		<hr>
-
-		<h4><?php _e( 'Notify Search Engines', 'autodescription' ); ?></h4>
-		<?php
-			$engines = array(
-				'ping_google'	=> 'Google',
-				'ping_bing' 	=> 'Bing',
-				'ping_yandex'	=> 'Yandex'
-			);
-
-			$ping_checkbox = '';
-
-			foreach ( $engines as $option => $engine ) {
-				$ping_label = sprintf( __( 'Notify %s about sitemap changes?', 'autodescription' ), $engine );
-				$ping_checkbox .= $this->make_checkbox( $option, $ping_label, '' );
-			}
-
-			//* Echo checkbox.
-			$this->wrap_fields( $ping_checkbox, true );
-
+		$this->get_view( 'metaboxes/sitemaps-metabox', array(), 'notify' );
 	}
 
 	/**
-	 * Feed meta box on the Site SEO Settings page.
+	 * Feed Metabox on the Site SEO Settings page.
 	 *
 	 * @since 2.5.2
+	 *
+	 * @param object|null $post The current post object.
+	 * @param array $args the social tabs arguments.
 	 */
-	public function feed_metabox() {
-
+	public function feed_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_feed_metabox_before' );
-
-		?>
-		<h4><?php _e( 'Content Feed Settings', 'autodescription' ); ?></h4>
-		<p class="description"><?php _e( "Sometimes, your content can get stolen by robots through the WordPress feeds. This can cause duplicate content issues. To prevent this from happening, it's recommended to convert the feed's content into an excerpt.", 'autodescription' ); ?></p>
-		<p class="description"><?php _e( "Adding a backlink below the feed's content will also let the visitors know where the content came from.", 'autodescription' ); ?></p>
-
-		<hr>
-
-		<h4><?php _e( 'Change Feed Settings', 'autodescription' ); ?></h4>
-		<?php
-			$excerpt_the_feed_label = __( 'Convert feed content into excerpts?', 'autodescription' );
-			$excerpt_the_feed_label .= ' ' . $this->make_info( __( "By default the excerpt will be at most 400 characters long", 'autodescription' ), '', false );
-
-			$source_the_feed_label = __( 'Add backlinks below the feed content?', 'autodescription' );
-			$source_the_feed_label .= ' ' . $this->make_info( __( "This link will not be followed by Search Engines", 'autodescription' ), '', false );
-
-			//* Echo checkboxes.
-			$this->wrap_fields(
-				array(
-					$this->make_checkbox( 'excerpt_the_feed', $excerpt_the_feed_label, '' ),
-					$this->make_checkbox( 'source_the_feed', $source_the_feed_label, '' ),
-				), true
-			);
-
-		if ( $this->rss_uses_excerpt() ) {
-			$reading_settings_url = esc_url( admin_url( 'options-reading.php' ) );
-			$reading_settings = '<a href="' . $reading_settings_url  . '" target="_blank" title="' . __( 'Reading Settings', 'autodescription' ) . '">' . __( 'Reading Settings', 'autodescription' ) . '</a>';
-
-			?><p><span class="description"><?php
-				printf( _x( "Note: The feed is already converted into an excerpt through the %s.", '%s = Reading Settings', 'autodescription' ), $reading_settings );
-			?></span></p><?php
-		}
-
-		$feed_url = esc_url( get_feed_link() );
-		$here = '<a href="' . $feed_url  . '" target="_blank" title="' . __( 'View feed', 'autodescription' ) . '">' . _x( 'here', 'The feed can be found %s.', 'autodescription' ) . '</a>';
-
-		?><p class="description"><?php printf( _x( 'The feed can be found %s.', '%s = here', 'autodescription' ), $here ); ?></p><?php
-
+		$this->get_view( 'metaboxes/feed-metabox', $args );
 		do_action( 'the_seo_framework_feed_metabox_after' );
-
 	}
 
 	/**
-	 * Schema metabox.
+	 * Schema Metabox on the Site SEO Settings page.
 	 *
 	 * @since 2.6.0
+	 *
+	 * @param object|null $post The current post object.
+	 * @param array $args the social tabs arguments.
 	 */
-	public function schema_metabox() {
-
+	public function schema_metabox( $post = null, $args = array() ) {
 		do_action( 'the_seo_framework_schema_metabox_before' );
-
-		?>
-		<h4><?php _e( 'Schema.org Output Settings', 'autodescription' ); ?></h4>
-
-		<?php if ( $this->has_json_ld_plugin() ) : ?>
-			<p class="description"><?php _e( 'Another Schema.org plugin has been detected.', 'autodescription' ); ?></p>
-		<?php else : ?>
-			<p class="description"><?php _e( "The Schema.org markup is a standard way of annotating structured data for Search Engines. This markup is represented within hidden scripts throughout the website.", 'autodescription' ); ?></p>
-			<p class="description"><?php _e( "When your web pages include structured data markup, Search Engines can use that data to index your content better, present it more prominently in Search Results, and use it in several different applications.", 'autodescription' ); ?></p>
-
-			<hr>
-
-			<?php /* translators: https://developers.google.com/search/docs/data-types/sitelinks-searchbox */ ?>
-			<h4><?php _ex( 'Sitelinks Searchbox', 'Product name', 'autodescription' ); ?></h4>
-			<p class="description"><?php _e( 'When Search users search for your brand name, the following option allows them to search through your website directly from the Search Results.', 'autodescription' ); ?></p>
-			<?php
-			$info = $this->make_info(
-				_x( 'Sitelinks Searchbox', 'Product name', 'autodescription' ),
-				'https://developers.google.com/search/docs/data-types/sitelinks-searchbox',
-				false
-			);
-			$this->wrap_fields(
-				$this->make_checkbox(
-					'ld_json_searchbox',
-					_x( 'Enable Sitelinks Searchbox?', 'Product name', 'autodescription' ) . ' ' . $info,
-					''
-				),
-				true
-			);
-			?>
-
-			<hr>
-
-			<h4><?php _e( 'Site Name', 'autodescription' ); ?></h4>
-			<p class="description"><?php _e( "When using breadcrumbs, the first entry is by default your website's address. Using the following option will convert it to the Site Name.", 'autodescription' ); ?></p>
-			<?php
-			$info = $this->make_info(
-				__( 'Include your Site Name in Search Results', 'autodescription' ),
-				'https://developers.google.com/search/docs/data-types/sitename',
-				false
-			);
-			$description = sprintf( __( "The Site Name is: %s", 'autodescription' ), $this->code_wrap( $this->get_blogname() ) );
-			$this->wrap_fields(
-				$this->make_checkbox(
-					'ld_json_sitename',
-					__( 'Convert URL to Site Name?', 'autodescription' ) . ' ' . $info,
-					$description
-				),
-				true
-			);
-			?>
-
-			<hr>
-
-			<h4><?php _e( 'Breadcrumbs', 'autodescription' ); ?></h4>
-			<p class="description"><?php _e( "Breadcrumb trails indicate the page's position in the site hierarchy. Using the following option will show the hierarchy within the Search Results when available.", 'autodescription' ); ?></p>
-			<?php
-			$info = $this->make_info(
-				__( 'About Breadcrumbs', 'autodescription' ),
-				'https://developers.google.com/search/docs/data-types/breadcrumbs',
-				false
-			);
-			$description = __( "Multiple trails can be outputted. The longest trail is prioritized.", 'autodescription' );
-			$this->wrap_fields(
-				$this->make_checkbox(
-					'ld_json_breadcrumbs',
-					__( 'Enable Breadcrumbs?', 'autodescription' ) . ' ' . $info,
-					$description
-				),
-				true
-			);
-		endif;
-
+		$this->get_view( 'metaboxes/schema-metabox', $args );
 		do_action( 'the_seo_framework_schema_metabox_after' );
-
 	}
-
 }
Index: inc/classes/postdata.class.php
===================================================================
--- inc/classes/postdata.class.php	(revision 1475679)
+++ inc/classes/postdata.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_PostData
  *
@@ -26,6 +28,18 @@
 class AutoDescription_PostData extends AutoDescription_Detect {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -52,7 +66,10 @@
 		if ( ! isset( $_POST['autodescription'] ) )
 			return;
 
-		//* Merge user submitted options with fallback defaults
+		/**
+		 * Merge user submitted options with fallback defaults
+		 * Passes through nonce at the end of the function.
+		 */
 		$data = wp_parse_args( $_POST['autodescription'], array(
 			'_genesis_title'         => '',
 			'_genesis_description'   => '',
@@ -67,19 +84,19 @@
 		foreach ( (array) $data as $key => $value ) {
 			//* Sanitize the title
 			if ( '_genesis_title' === $key )
-				$data[$key] = trim( strip_tags( $value ) );
+				$data[ $key ] = trim( strip_tags( $value ) );
 
 			//* Sanitize the description
 			if ( '_genesis_description' === $key )
-				$data[$key] = $this->s_description( $value );
+				$data[ $key ] = $this->s_description( $value );
 
 			//* Sanitize the URL. Make sure it's an absolute URL
 			if ( 'redirect' === $key )
-				$data[$key] = $this->s_redirect_url( $value );
+				$data[ $key ] = $this->s_redirect_url( $value );
 
 		}
 
-		$this->save_custom_fields( $data, 'inpost_seo_save', 'hmpl_ad_inpost_seo_nonce', $post );
+		$this->save_custom_fields( $data, $this->inpost_nonce_field, $this->inpost_nonce_name, $post );
 	}
 
 	/**
@@ -140,23 +157,17 @@
 	}
 
 	/**
-	 * Fetches or parses the excerpt of the post
+	 * Fetches or parses the excerpt of the post.
 	 *
 	 * @since 1.0.0
 	 *
-	 * @param string $excerpt the Excerpt
+	 * @param string $excerpt the Excerpt.
 	 * @param int $the_id The Post ID.
-	 * @param int $tt_id The Taxonomy Term ID
-	 *
-	 * @return string The Excerpt
+	 * @param int $tt_id The Taxonomy Term ID.
+	 * @return string The escaped Excerpt.
 	 */
 	public function get_excerpt_by_id( $excerpt = '', $the_id = '', $tt_id = '' ) {
 
-		static $cache = array();
-
-		if ( isset( $cache[$excerpt][$the_id][$tt_id] ) )
-			return $cache[$excerpt][$the_id][$tt_id];
-
 		if ( empty( $excerpt ) )
 			$excerpt = $this->fetch_excerpt( $the_id, $tt_id );
 
@@ -168,15 +179,13 @@
 		 * Applies filters 'the_seo_framework_allow_excerpt_shortcode_tags' : boolean
 		 * @since 2.6.6.1
 		 */
-		if ( apply_filters( 'the_seo_framework_allow_excerpt_shortcode_tags', false ) ) {
+		if ( apply_filters( 'the_seo_framework_allow_excerpt_shortcode_tags', false ) && false === $this->is_feed() ) {
 			$excerpt = wp_strip_all_tags( $excerpt );
 		} else {
 			$excerpt = wp_strip_all_tags( strip_shortcodes( $excerpt ) );
 		}
 
-		$output = $this->s_description( $excerpt );
-
-		return $output;
+		return $this->s_description( $excerpt );
 	}
 
 	/**
@@ -202,9 +211,9 @@
 		 * Fetch custom excerpt, if not empty, from the post_excerpt field.
 		 * @since 2.5.2
 		 */
-		if ( isset( $post->post_excerpt ) && $post->post_excerpt ) {
+		if ( ! empty( $post->post_excerpt ) ) {
 			$excerpt = $post->post_excerpt;
-		} else if ( isset( $post->post_content ) ) {
+		} elseif ( isset( $post->post_content ) ) {
 			$uses_builder = $this->uses_page_builder( $post->ID );
 			$excerpt = $uses_builder ? '' : $post->post_content;
 		} else {
@@ -257,7 +266,7 @@
 			} else {
 				$post = get_post( $the_id );
 			}
-		} else if ( '' !== $tt_id ) {
+		} elseif ( '' !== $tt_id ) {
 			/**
 			 * @since 2.3.3 Match the descriptions in admin as on the front end.
 			 */
@@ -345,7 +354,9 @@
 				AND post_status IN ($post_status_in_string)
 				ORDER BY post_date DESC
 				LIMIT %d",
-				'', 1 );
+				'',
+				1
+			);
 
 			$page_id = (int) $wpdb->get_var( $sql );
 			$this->object_cache_set( $latest_posts_key, $page_id, DAY_IN_SECONDS );
@@ -425,5 +436,4 @@
 
 		return false;
 	}
-
 }
Index: inc/classes/query.class.php
===================================================================
--- inc/classes/query.class.php	(revision 1475679)
+++ inc/classes/query.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Query
  *
@@ -29,6 +31,18 @@
 class AutoDescription_Query extends AutoDescription_Compat {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor. Load parent constructor.
 	 */
 	public function __construct() {
@@ -61,24 +75,22 @@
 	}
 
 	/**
-	 * Get the real page ID, also depending on CPT.
+	 * Get the real page ID, also from CPT, archives, author, blog, etc.
 	 *
-	 * @param bool $use_cache Whether to use the cache or not.
-	 *
+	 * @since 2.5.0
 	 * @staticvar int $id the ID.
 	 *
-	 * @since 2.5.0
-	 *
+	 * @param bool $use_cache Whether to use the cache or not.
 	 * @return int|false The ID.
 	 */
 	public function get_the_real_ID( $use_cache = true ) {
 
-		$is_admin = $this->is_admin();
+		if ( $this->is_admin() )
+			return $this->get_the_real_admin_ID();
+
 		$can_cache = $this->can_cache_query();
+		$use_cache = $can_cache ? $use_cache : false;
 
-		//* Never use cache for this in admin. Only causes bugs.
-		$use_cache = $is_admin || false === $can_cache ? false : $use_cache;
-
 		if ( $use_cache ) {
 			static $id = null;
 
@@ -87,19 +99,11 @@
 		}
 
 		//* Try to get ID from plugins.
-		$id = $is_admin || false === $can_cache ? 0 : $this->check_the_real_ID();
+		$id = $can_cache ? $this->check_the_real_ID() : 0;
 
 		if ( empty( $id ) ) {
-			//* The Post ID can be this ID as well.
+			//* This catches most ID's. Even Post IDs.
 			$id = get_queried_object_id();
-
-			//* Never get this when this is an archive. It will always return the wrong value.
-			if ( empty( $id ) && false === is_archive() && false === is_home() )
-				$id = get_the_ID();
-
-			//* Determine the Archive ID on term edit.
-			if ( empty( $id ) && $is_admin && $this->is_archive_admin() )
-				$id = $this->get_admin_term_id();
 		}
 
 		/**
@@ -112,46 +116,68 @@
 		 *
 		 * @since 2.6.2
 		 */
-		$id = (int) apply_filters( 'the_seo_framework_current_object_id', $id, $this->can_cache_query() );
+		return $id = (int) apply_filters( 'the_seo_framework_current_object_id', $id, $can_cache );
+	}
 
-		//* Turn ID into 0 if empty.
-		return $id = empty( $id ) ? 0 : $id;
+	/**
+	 * Fetches post or term ID within the admin.
+	 * Alters while in the loop. Therefore, this can't be cached and must be called within the loop.
+	 *
+	 * @since 2.7.0
+	 */
+	public function get_the_real_admin_ID() {
+
+		/**
+		 * This is get_the_ID() with WordPress 3.9 compatibility.
+		 * @todo convert to get_the_ID()
+		 * @priority OMGWTFBBQ 2.7.x (I warned you.)
+		 */
+		$post = get_post();
+		$id = empty( $post ) ? 0 : $post->ID;
+
+		//* Current term ID (outside loop).
+		if ( empty( $id ) && $this->is_archive_admin() )
+			$id = $this->get_admin_term_id();
+
+		return $id;
 	}
 
 	/**
 	 * Get the real ID from plugins.
 	 *
-	 * Only works in front-end as there's no need to check for inconsistent
+	 * Only works on front-end as there's no need to check for inconsistent
 	 * functions for the current ID in the admin.
 	 *
 	 * @since 2.5.0
 	 *
-	 * Applies filters the_seo_framework_real_id : The Real ID for plugins on front-end.
-	 *
-	 * @staticvar int $cached_id The cached ID.
-	 *
 	 * @return int|empty the ID.
 	 */
 	public function check_the_real_ID() {
 
-		static $cached_id = null;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
+			return $cache;
 
-		if ( isset( $cached_id ) && $this->can_cache_query() )
-			return $cached_id;
-
 		$id = '';
 
 		if ( $this->is_wc_shop() ) {
 			//* WooCommerce Shop
 			$id = get_option( 'woocommerce_shop_page_id' );
-		} else if ( function_exists( 'get_question_id' ) && did_action( 'template_redirect' ) ) {
+		} elseif ( function_exists( 'get_question_id' ) && did_action( 'template_redirect' ) ) {
 			//* AnsPress
 			$id = get_question_id();
 		}
 
-		$cached_id = (int) apply_filters( 'the_seo_framework_real_id', $id );
+		/**
+		 * Applies filters the_seo_framework_real_id : The Real ID for plugins on front-end.
+		 * @since 2.5.0
+		 * @TODO add to Filters API.
+		 */
+		$this->set_query_cache(
+			__METHOD__,
+			$id = (int) apply_filters( 'the_seo_framework_real_id', $id )
+		);
 
-		return $cached_id;
+		return $id;
 	}
 
 	/**
@@ -159,26 +185,37 @@
 	 *
 	 * @since 2.6.0
 	 * @since 2.6.6 Moved from class AutoDescription_TermData.
-	 * @staticvar int $term_id The Term ID.
 	 *
 	 * @return int Term ID.
 	 */
 	public function get_admin_term_id() {
 
-		static $term_id = null;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
+			return $cache;
 
-		if ( isset( $term_id ) )
-			return $term_id;
+		if ( false === $this->is_archive_admin() )
+			return 0;
 
-		if ( isset( $_REQUEST['tag_ID'] ) && $_REQUEST['tag_ID'] ) {
+		$term_id = 0;
+
+		/**
+		 * is_archive_admin() determines if admin referer checks have run
+		 * through global $current_screen. Will output 'Invalid taxonomy' on try.
+		 */
+		if ( ! empty( $_GET['tag_ID'] ) ) {
 			//* WordPress 4.5+
-			$term_id = $_REQUEST['tag_ID'];
-		} else if ( isset( $_REQUEST['term_id'] ) && $_REQUEST['term_id'] ) {
+			$term_id = $_GET['tag_ID'];
+		} elseif ( ! empty( $_GET['term_id'] ) ) {
 			//* Older WordPress versions.
-			$term_id = $_REQUEST['term_id'];
+			$term_id = $_GET['term_id'];
 		}
 
-		return $term_id = $term_id ? absint( $term_id ) : 0;
+		$this->set_query_cache(
+			__METHOD__,
+			$term_id = intval( $term_id ) ? absint( $term_id ) : 0
+		);
+
+		return $term_id;
 	}
 
 	/**
@@ -185,21 +222,11 @@
 	 * Detects 404.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 *
 	 * @return bool
 	 */
 	public function is_404() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( is_404() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_404();
 	}
 
 	/**
@@ -206,21 +233,11 @@
 	 * Detects admin screen.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 *
 	 * @return bool
 	 */
 	public function is_admin() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( is_admin() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_admin();
 	}
 
 	/**
@@ -227,24 +244,25 @@
 	 * Detects attachment page.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
-	 * @uses $this->is_singular()
 	 *
-	 * @param int|string|array|object $attachment Attachment ID, title, slug, or array of such.
-	 *
+	 * @param mixed $attachment Attachment ID, title, slug, or array of such.
 	 * @return bool
 	 */
 	public function is_attachment( $attachment = '' ) {
 
-		static $cache = array();
+		if ( empty( $attachment ) )
+			return is_attachment();
 
-		if ( isset( $cache[$attachment] ) && $this->can_cache_query() )
-			return $cache[$attachment];
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $attachment ) )
+			return $cache;
 
-		if ( $this->is_singular( $attachment ) && is_attachment( $attachment ) )
-			return $cache[$attachment] = true;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_attachment = is_attachment( $attachment ),
+			$attachment
+		);
 
-		return $cache[$attachment] = false;
+		return $is_attachment;
 	}
 
 	/**
@@ -251,8 +269,6 @@
 	 * Detects archive pages. Also in admin.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
-	 *
 	 * @global object $wp_query
 	 *
 	 * @return bool
@@ -262,22 +278,17 @@
 		if ( $this->is_admin() )
 			return $this->is_archive_admin();
 
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
 		if ( is_archive() && false === $this->is_singular() )
-			return $cache = true;
+			return true;
 
 		if ( $this->can_cache_query() && false === $this->is_singular() ) {
 			global $wp_query;
 
 			if ( $wp_query->is_post_type_archive || $wp_query->is_date || $wp_query->is_author || $wp_query->is_category || $wp_query->is_tag || $wp_query->is_tax )
-				return $cache = true;
+				return true;
 		}
 
-		return $cache = false;
+		return false;
 	}
 
 	/**
@@ -284,25 +295,17 @@
 	 * Extends default WordPress is_archive() and determines screen in admin.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
-	 *
 	 * @global object $current_screen
 	 *
 	 * @return bool Post Type is archive
 	 */
 	public function is_archive_admin() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
 		global $current_screen;
 
 		if ( isset( $current_screen->base ) && ( 'edit-tags' === $current_screen->base || 'term' === $current_screen->base ) )
-			return $cache = true;
+			return true;
 
-		return $cache = false;
+		return false;
 	}
 
 	/**
@@ -309,7 +312,6 @@
 	 * Detects Term edit screen in WP Admin.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 * @global object $current_screen
 	 *
 	 * @return bool We're on Term Edit screen.
@@ -316,22 +318,27 @@
 	 */
 	public function is_term_edit() {
 
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
 			return $cache;
 
 		global $current_screen;
 
-		if ( $this->wp_version( '4.4.9999', '>=' ) ) {
+		$is_term_edit = false;
+
+		if ( $this->wp_version( '4.4.9999', '>' ) ) {
 			if ( isset( $current_screen->base ) && ( 'term' === $current_screen->base ) )
-				return $cache = true;
+				$is_term_edit = true;
 		} else {
 			if ( isset( $current_screen->base ) && ( 'edit-tags' === $current_screen->base ) )
-				return $cache = true;
+				$is_term_edit = true;
 		}
 
-		return $cache = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_term_edit
+		);
+
+		return $is_term_edit;
 	}
 
 	/**
@@ -338,24 +345,17 @@
 	 * Detects Post edit screen in WP Admin.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 * @global object $current_screen
 	 *
 	 * @return bool We're on Post Edit screen.
 	 */
 	public function is_post_edit() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
 		global $current_screen;
 
 		if ( isset( $current_screen->base ) && 'post' === $current_screen->base )
-			return $cache = true;
+			return true;
 
-		return $cache = false;
+		return false;
 	}
 
 	/**
@@ -362,25 +362,19 @@
 	 * Detects Post or Archive Lists in Admin.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 * @global object $current_screen
+	 * @access private
 	 *
 	 * @return bool We're on the edit screen.
 	 */
 	public function is_wp_lists_edit() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
 		global $current_screen;
 
-		//* @NOTE USE WITH CAUTION - WP 4.5 & < 4.5 conflict.
+		//* @NOTE WP >= 4.5 & WP < 4.5 conflict.
 		if ( isset( $current_screen->base ) && ( 'edit' === $current_screen->base || 'edit-tags' === $current_screen->base ) )
-			return $cache = true;
+			return true;
 
-		return $cache = false;
+		return false;
 	}
 
 	/**
@@ -387,24 +381,26 @@
 	 * Detects author archives.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 * @uses $this->is_archive()
 	 *
 	 * @param mixed $author Optional. User ID, nickname, nicename, or array of User IDs, nicknames, and nicenames
-	 *
 	 * @return bool
 	 */
 	public function is_author( $author = '' ) {
 
-		static $cache = array();
+		if ( empty( $author ) )
+			return is_author();
 
-		if ( isset( $cache[$author] ) && $this->can_cache_query() )
-			return $cache[$author];
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $author ) )
+			return $cache;
 
-		if ( $this->is_archive() && is_author( $author ) )
-			return $cache[$author] = true;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_author = is_author( $author ),
+			$author
+		);
 
-		return $cache[$author] = false;
+		return $is_author;
 	}
 
 	/**
@@ -411,31 +407,36 @@
 	 * Detect the separated blog page.
 	 *
 	 * @since 2.3.4
-	 * @staticvar bool $is_blog_page
 	 *
 	 * @param int $id the Page ID.
 	 * @return bool true if is blog page. Always false if blog page is homepage.
 	 */
-	public function is_blog_page( $id = '' ) {
+	public function is_blog_page( $id = 0 ) {
 
-		if ( '' === $id )
+		if ( empty( $id ) )
 			$id = $this->get_the_real_ID();
 
-		static $is_blog_page = array();
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $id ) )
+			return $cache;
 
-		if ( isset( $is_blog_page[$id] ) && $this->can_cache_query() )
-			return $is_blog_page[$id];
+		$is_blog_page = false;
 
 		$pfp = (int) get_option( 'page_for_posts' );
 
-		if ( $id === $pfp ) {
-			//* Don't use $this->is_archive (will loop).
-			if ( $this->has_page_on_front() && false === $this->is_front_page() && false === is_archive() ) {
-				return $is_blog_page[$id] = true;
-			}
+		if ( $this->has_page_on_front() ) {
+			if ( $id === $pfp && false === is_archive() )
+				$is_blog_page = true;
+			elseif ( is_home() )
+				$is_blog_page = true;
 		}
 
-		return $is_blog_page[$id] = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_blog_page,
+			$id
+		);
+
+		return $is_blog_page;
 	}
 
 	/**
@@ -442,7 +443,6 @@
 	 * Detects category archives.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 * @uses $this->is_archive()
 	 *
 	 * @param mixed $category Optional. Category ID, name, slug, or array of Category IDs, names, and slugs.
@@ -453,15 +453,16 @@
 		if ( $this->is_admin() )
 			return $this->is_category_admin();
 
-		static $cache = array();
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $category ) )
+			return $cache;
 
-		if ( isset( $cache[$category] ) && $this->can_cache_query() )
-			return $cache[$category];
+		$this->set_query_cache(
+			__METHOD__,
+			$is_category = is_category( $category ),
+			$category
+		);
 
-		if ( $this->is_archive() && is_category( $category ) )
-			return $cache[$category] = true;
-
-		return $cache[$category] = false;
+		return $is_category;
 	}
 
 	/**
@@ -468,7 +469,6 @@
 	 * Extends default WordPress is_category() and determines screen in admin.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 * @global object $current_screen
 	 *
 	 * @return bool Post Type is category
@@ -475,13 +475,13 @@
 	 */
 	public function is_category_admin() {
 
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
 			return $cache;
 
 		global $current_screen;
 
+		$is_category = false;
+
 		if ( $this->is_archive_admin() && isset( $current_screen->taxonomy ) ) {
 
 			$tax = $current_screen->taxonomy;
@@ -488,13 +488,17 @@
 			$len = strlen( $tax );
 
 			if ( $len >= 8 && false !== strrpos( $tax, 'category', -8 ) )
-				return $cache = true;
-
-			if ( $len >= 3 && false !== strrpos( $tax, 'cat', -3 ) )
-				return $cache = true;
+				$is_category = true;
+			elseif ( $len >= 3 && false !== strrpos( $tax, 'cat', -3 ) )
+				$is_category = true;
 		}
 
-		return $cache = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_category
+		);
+
+		return $is_category;
 	}
 
 	/**
@@ -501,28 +505,16 @@
 	 * Detects date archives.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
-	 * @uses $this->is_archive()
 	 *
 	 * @return bool
 	 */
 	public function is_date() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( $this->is_archive() && is_date() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_date();
 	}
 
 	/**
 	 * Detects day archives.
 	 *
-	 * @staticvar bool $cache
 	 * @since 2.6.0
 	 * @uses $this->is_date()
 	 *
@@ -529,16 +521,7 @@
 	 * @return bool
 	 */
 	public function is_day() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( is_day() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_day();
 	}
 
 	/**
@@ -545,22 +528,12 @@
 	 * Detects feed.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 *
 	 * @param string|array $feeds Optional feed types to check.
 	 * @return bool
 	 */
 	public function is_feed( $feeds = '' ) {
-
-		static $cache = array();
-
-		if ( is_string( $feeds ) && isset( $cache[$feeds] ) && $this->can_cache_query() )
-			return $cache[$feeds];
-
-		if ( is_feed( $feeds ) )
-			return $cache[$feeds] = true;
-
-		return $cache[$feeds] = false;
+		return is_feed( $feeds );
 	}
 
 	/**
@@ -567,9 +540,8 @@
 	 * Detects front page.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 *
-	 * @param int $id The page or Post ID.
+	 * @param int $id The Page or Post ID.
 	 * @return bool
 	 */
 	public function is_front_page( $id = 0 ) {
@@ -576,31 +548,40 @@
 
 		static $cache = array();
 
-		if ( isset( $cache[$id] ) && $this->can_cache_query() )
-			return $cache[$id];
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $id ) )
+			return $cache;
 
+		$is_front_page = false;
+
 		if ( is_front_page() && empty( $id ) )
-			return $cache[$id] = true;
+			$is_front_page = true;
 
 		//* Elegant Themes Support.
-		if ( empty( $id ) && $this->is_home() ) {
+		if ( false === $is_front_page && empty( $id ) && $this->is_home() ) {
 			$sof = get_option( 'show_on_front' );
 
 			if ( 'page' !== $sof && 'posts' !== $sof )
-				return $cache[$id] = true;
+				$is_front_page = true;
 		}
 
-		if ( $id ) {
+		//* Compare against $id
+		if ( false === $is_front_page && $id ) {
 			$sof = get_option( 'show_on_front' );
 
-			if ( 'page' === $sof && $id === (int) get_option( 'page_on_front' ) )
-				return $cache[$id] = true;
+			if ( 'page' === $sof && (int) get_option( 'page_on_front' ) === $id )
+				$is_front_page = true;
 
-			if ( 'posts' === $sof && $id === (int) get_option( 'page_for_posts' ) )
-				return $cache[$id] = true;
+			if ( 'posts' === $sof && (int) get_option( 'page_for_posts' ) === $id )
+				$is_front_page = true;
 		}
 
-		return $cache[$id] = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_front_page,
+			$id
+		);
+
+		return $is_front_page;
 	}
 
 	/**
@@ -612,16 +593,7 @@
 	 * @return bool
 	 */
 	public function is_home() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( is_home() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_home();
 	}
 
 	/**
@@ -628,26 +600,16 @@
 	 * Detects month archives.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
-	 * @uses $this->is_date()
 	 *
 	 * @return bool
 	 */
 	public function is_month() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( is_month() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_month();
 	}
 
 	/**
 	 * Detects pages.
+	 * When $page is supplied, it will check against the current object. So it will not work in the admin screens.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $cache
@@ -658,20 +620,22 @@
 	 */
 	public function is_page( $page = '' ) {
 
-		static $cache = array();
+		if ( $this->is_admin() )
+			return $this->is_page_admin();
 
-		if ( isset( $cache[$page] ) && $this->can_cache_query() )
-			return $cache[$page];
+		if ( empty( $page ) )
+			return is_page();
 
-		if ( $this->is_singular( $page ) ) {
-			if ( is_page( $page ) )
-				return $cache[$page] = true;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $page ) )
+			return $cache;
 
-			if ( $this->is_admin() )
-				return $cache[$page] = $this->is_page_admin( $page );
-		}
+		$this->set_query_cache(
+			__METHOD__,
+			$is_page = is_page( $page ),
+			$page
+		);
 
-		return $cache[$page] = false;
+		return $is_page;
 	}
 
 	/**
@@ -681,10 +645,9 @@
 	 * @see $this->is_page()
 	 * @global object $current_screen;
 	 *
-	 * @param int|string|array $page Optional. Page ID, title, slug, or array of such. Default empty.
 	 * @return bool
 	 */
-	public function is_page_admin( $page = '' ) {
+	public function is_page_admin() {
 		global $current_screen;
 
 		if ( isset( $current_screen->post_type ) && 'page' === $current_screen->post_type )
@@ -702,16 +665,7 @@
 	 * @return bool
 	 */
 	public function is_preview() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( is_preview() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_preview();
 	}
 
 	/**
@@ -723,24 +677,16 @@
 	 * @return bool
 	 */
 	public function is_search() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		if ( is_search() )
-			return $cache = true;
-
-		return $cache = false;
+		return is_search();
 	}
 
 	/**
 	 * Detects posts.
+	 * When $post is supplied, it will check against the current object. So it will not work in the admin screens.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $cache
-	 * @uses $this->is_singular()
+	 * @uses AutoDescription_Query::is_single_admin()
 	 *
 	 * @param int|string|array $post Optional. Post ID, title, slug, or array of such. Default empty.
 	 * @return bool
@@ -747,20 +693,22 @@
 	 */
 	public function is_single( $post = '' ) {
 
-		static $cache = array();
+		if ( $this->is_admin() )
+			return $this->is_single_admin();
 
-		if ( isset( $cache[$post] ) && $this->can_cache_query() )
-			return $cache[$post];
+		if ( empty( $post ) )
+			return is_single();
 
-		if ( $this->is_singular( $post ) ) {
-			if ( is_single( $post ) )
-				return $cache[$post] = true;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $post ) )
+			return $cache;
 
-			if ( $this->is_admin() )
-				return $cache[$post] = $this->is_single_admin( $post );
-		}
+		$this->set_query_cache(
+			__METHOD__,
+			$is_single = is_single( $post ),
+			$post
+		);
 
-		return $cache[$post] = false;
+		return $is_single;
 	}
 
 	/**
@@ -768,12 +716,11 @@
 	 *
 	 * @since 2.6.0
 	 * @global object $current_screen
-	 * @see $this->is_single()
+	 * @see AutoDescription_Query::is_single()
 	 *
-	 * @param int|string|array $post Optional. Page ID, title, slug, or array of such. Default empty.
 	 * @return bool
 	 */
-	public function is_single_admin( $post = '' ) {
+	public function is_single_admin() {
 		global $current_screen;
 
 		if ( isset( $current_screen->post_type ) && 'post' === $current_screen->post_type )
@@ -787,41 +734,44 @@
 	 * Replaces and expands default WordPress is_singular().
 	 *
 	 * @since 2.5.2
-	 * @staticvar bool $cache
-	 * @uses $this->is_blog_page()
-	 * @uses $this->is_wc_shop()
+	 * @uses AutoDescription_Query::is_singular_admin()
+	 * @uses AutoDescription_Query::is_blog_page()
+	 * @uses AutoDescription_Query::is_wc_shop()
+	 * @access private
 	 *
-	 * @param string|array $post_types Optional. Post type or array of post types. Default empty.
+	 * @param string|array $post_types Optional. Post type or array of post types. Default empty string.
 	 * @return bool Post Type is singular
 	 */
 	public function is_singular( $post_types = '' ) {
 
-		static $cache = array();
-
-		if ( isset( $cache[$post_types] ) && $this->can_cache_query() )
-			return $cache[$post_types];
-
 		//* WP_Query functions require loop, do alternative check.
 		if ( $this->is_admin() )
-			return $cache[$post_types] = $this->is_singular_admin();
+			return $this->is_singular_admin();
 
 		if ( is_int( $post_types ) ) {
-			//* Cache ID. Core is_singlar() doesn't accept integers.
+			//* Cache ID. Core is_singular() doesn't accept integers.
 			$id = $post_types;
 			$post_types = '';
 		}
 
-		//* Default check.
-		if ( is_singular( $post_types ) )
-			return $cache[$post_types] = true;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $post_types ) )
+			return $cache;
 
-		$id = isset( $id ) ? $id : $this->get_the_real_ID();
+		if ( ! $is_singular = is_singular( $post_types ) ) {
+			$id = isset( $id ) ? $id : $this->get_the_real_ID();
 
-		//* Check for somewhat singulars. We need this to adjust Meta data filled in Posts.
-		if ( $this->is_blog_page( $id ) || $this->is_wc_shop() )
-			return $cache[$post_types] = true;
+			//* Check for somewhat singulars. We need this to adjust Meta data filled in Posts.
+			if ( $this->is_blog_page( $id ) || $this->is_wc_shop() )
+				$is_singular = true;
+		}
 
-		return $cache[$post_types] = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_singular,
+			$post_types
+		);
+
+		return $is_singular;
 	}
 
 	/**
@@ -828,24 +778,17 @@
 	 * Determines if the page is singular within the admin screen.
 	 *
 	 * @since 2.5.2
-	 * @staticvar bool $cache
 	 * @global object $current_screen
 	 *
 	 * @return bool Post Type is singular
 	 */
 	public function is_singular_admin() {
-
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
 		global $current_screen;
 
 		if ( isset( $current_screen->base ) && ( 'edit' === $current_screen->base || 'post' === $current_screen->base ) )
-			return $cache = true;
+			return true;
 
-		return $cache = false;
+		return false;
 	}
 
 	/**
@@ -852,7 +795,6 @@
 	 * Detects the static front page.
 	 *
 	 * @since 2.3.8
-	 * @staticvar array $cache
 	 *
 	 * @param int $id the Page ID to check. If empty, the current ID will be fetched.
 	 * @return bool true if is blog page. Always false if the homepage is a blog.
@@ -862,21 +804,10 @@
 		if ( empty( $id ) )
 			$id = $this->get_the_real_ID();
 
-		static $cache = array();
+		if ( 'page' === get_option( 'show_on_front' ) )
+			return (int) get_option( 'page_on_front' ) === $id;
 
-		if ( isset( $cache[$id] ) && $this->can_cache_query() )
-			return $cache[$id];
-
-		$sof = (string) get_option( 'show_on_front' );
-
-		if ( 'page' === $sof ) {
-			$pof = (int) get_option( 'page_on_front' );
-
-			if ( $id === $pof )
-				return $cache[$id] = true;
-		}
-
-		return $cache[$id] = false;
+		return false;
 	}
 
 	/**
@@ -891,19 +822,20 @@
 	 */
 	public function is_tag( $tag = '' ) {
 
-		static $cache = array();
-
-		if ( isset( $cache[$tag] ) && $this->can_cache_query() )
-			return $cache[$tag];
-
 		//* Admin requires another check.
 		if ( $this->is_admin() )
-			return $cache[$tag] = $this->is_tag_admin();
+			return $this->is_tag_admin();
 
-		if ( is_tag( $tag ) )
-			return $cache[$tag] = true;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $tag ) )
+			return $cache;
 
-		return $cache[$tag] = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_tag = is_tag( $tag ),
+			$tag
+		);
+
+		return $is_tag;
 	}
 
 	/**
@@ -910,26 +842,30 @@
 	 * Determines if the page is a tag within the admin screen.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
 	 * @global object $current_screen
 	 *
-	 * @return bool Post Type is category
+	 * @return bool Post Type is category.
 	 */
 	public function is_tag_admin() {
 
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
 			return $cache;
 
+		$is_tag = false;
+
 		if ( $this->is_archive_admin() ) {
 			global $current_screen;
 
 			if ( isset( $current_screen->taxonomy ) && strlen( $current_screen->taxonomy ) >= 3 && false !== strrpos( $current_screen->taxonomy, 'tag', -3 ) )
-				return $cache = true;
+				$is_tag = true;
 		}
 
-		return $cache = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_tag
+		);
+
+		return $is_tag;
 	}
 
 	/**
@@ -936,8 +872,6 @@
 	 * Detects taxonomy archives.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
-	 * @uses $this->is_archive()
 	 *
 	 * @param string|array     $taxonomy Optional. Taxonomy slug or slugs.
 	 * @param int|string|array $term     Optional. Term ID, name, slug or array of Term IDs, names, and slugs.
@@ -945,15 +879,16 @@
 	 */
 	public function is_tax( $taxonomy = '', $term = '' ) {
 
-		static $cache = null;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $taxonomy, $term ) )
+			return $cache;
 
-		if ( isset( $cache[$taxonomy][$term] ) && $this->can_cache_query() )
-			return $cache[$taxonomy][$term];
+		$this->set_query_cache(
+			__METHOD__,
+			$is_tax = is_tax( $taxonomy, $term ),
+			$taxonomy, $term
+		);
 
-		if ( is_tax( $taxonomy, $term ) )
-			return $cache[$taxonomy][$term] = true;
-
-		return $cache[$taxonomy][$term] = false;
+		return $is_tax;
 	}
 
 	/**
@@ -961,7 +896,6 @@
 	 * Checks for function availability: um_user, um_is_core_page, um_get_requested_user
 	 *
 	 * @since 2.5.2
-	 * @staticvar bool $cache
 	 * @uses $this->can_i_use()
 	 *
 	 * @return bool Whether we're on a Ultimate Member page.
@@ -968,14 +902,15 @@
 	 */
 	public function is_ultimate_member_user_page() {
 
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
 			return $cache;
 
-		$caniuse = (bool) $this->can_i_use( array( 'functions' => array( 'um_user', 'um_is_core_page', 'um_get_requested_user' ) ), false );
+		$this->set_query_cache(
+			__METHOD__,
+			$is_um_user_page = $this->can_i_use( array( 'functions' => array( 'um_user', 'um_is_core_page', 'um_get_requested_user' ) ), false )
+		);
 
-		return $cache = $caniuse;
+		return $is_um_user_page;
 	}
 
 	/**
@@ -988,16 +923,15 @@
 	 */
 	public function is_wc_shop() {
 
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
 			return $cache;
 
-		//* Can't check in admin.
-		if ( false === $this->is_admin() && function_exists( 'is_shop' ) && is_shop() )
-			return $cache = true;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_shop = false === $this->is_admin() && function_exists( 'is_shop' ) && is_shop()
+		);
 
-		return $cache = false;
+		return $is_shop;
 	}
 
 	/**
@@ -1004,22 +938,20 @@
 	 * Determines if the page is the WooCommerce plugin Product page.
 	 *
 	 * @since 2.5.2
-	 * @staticvar bool $cache
 	 *
 	 * @return bool True if on a WooCommerce Product page.
 	 */
 	public function is_wc_product() {
 
-		static $cache = null;
-
-		if ( isset( $cache ) && $this->can_cache_query() )
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
 			return $cache;
 
-		//* Can't check in admin.
-		if ( false === $this->is_admin() && function_exists( 'is_product' ) && is_product() )
-			return $cache = true;
+		$this->set_query_cache(
+			__METHOD__,
+			$is_product = false === $this->is_admin() && function_exists( 'is_product' ) && is_product()
+		);
 
-		return $cache = false;
+		return $is_product;
 	}
 
 	/**
@@ -1026,40 +958,67 @@
 	 * Detects year archives.
 	 *
 	 * @since 2.6.0
-	 * @staticvar bool $cache
-	 * @uses $this->is_date()
 	 *
 	 * @return bool
 	 */
 	public function is_year() {
+		return is_year();
+	}
 
-		static $cache = null;
+	/**
+	 * Determines whether we're on the SEO settings page.
+	 * WARNING: Do not ever use this as a safety check.
+	 *
+	 * @since 2.6.0
+	 * @since 2.7.0 Added secure parameter.
+	 *
+	 * @param bool $secure Whether to ignore the use of the second (insecure) parameter.
+	 * @return bool
+	 */
+	public function is_seo_settings_page( $secure = true ) {
 
-		if ( isset( $cache ) && $this->can_cache_query() )
+		if ( null !== $cache = $this->get_query_cache( __METHOD__, null, $secure ) )
 			return $cache;
 
-		if ( is_year() )
-			return $cache = true;
+		if ( $secure ) {
+			$page = $this->is_menu_page( $this->seo_settings_page_hook );
+		} else {
+			$page = $this->is_menu_page( $this->seo_settings_page_hook, $this->seo_settings_page_slug );
+		}
 
-		return $cache = false;
+		$this->set_query_cache(
+			__METHOD__,
+			$page,
+			$secure
+		);
+
+		return $page;
 	}
 
 	/**
-	 * Determines whether we're on the SEO settings page.
+	 * Checks the screen base file through global $page_hook or $_GET.
 	 *
-	 * @since 2.6.0
-	 * @staticvar bool $cache
+	 * @since 2.2.2
+	 * @since 2.7.0 Added pageslug parameter.
+	 * @global string $page_hook the current page hook.
+	 * @note Usage of $pageslug might be insecure. Check all variables!
 	 *
-	 * @return bool
+	 * @param string $pagehook The menu pagehook to compare to.
+	 * @param string $pageslug The menu page slug to compare to.
+	 * @return bool true if screen match.
 	 */
-	public function is_seo_settings_page() {
+	public function is_menu_page( $pagehook = '', $pageslug = '' ) {
+		global $page_hook;
 
-		static $cache = null;
+		if ( isset( $page_hook ) ) {
+			if ( $page_hook === $pagehook )
+				return true;
+		} elseif ( $this->is_admin() && $pageslug ) {
+			if ( isset( $_GET['page'] ) && $pageslug === $_GET['page'] )
+				return true;
+		}
 
-		if ( isset( $cache ) && $this->can_cache_query() )
-			return $cache;
-
-		return $cache = $this->is_menu_page( $this->page_id );
+		return false;
 	}
 
 	/**
@@ -1067,41 +1026,180 @@
 	 * Fetches global $page through Query Var to prevent conflicts.
 	 *
 	 * @since 2.6.0
-	 * @staticvar int $page
 	 *
 	 * @return int $page Always a positive number.
 	 */
 	public function page() {
 
-		static $page = null;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
+			return $cache;
 
-		if ( isset( $page ) && $this->can_cache_query() )
-			return $page;
+		$page = $this->is_multipage() ? get_query_var( 'page' ) : 1;
 
-		$page = get_query_var( 'page' );
+		$this->set_query_cache(
+			__METHOD__,
+			$page = $page ? (int) $page : 1
+		);
 
-		return $page = $page ? (int) $page : 1;
+		return $page;
 	}
 
 	/**
+	 * Determines whether the current loop is a multipage.
+	 *
+	 * @since 2.7.0
+	 * @global int $pages Used as reference.
+	 *
+	 * @return bool True if multipage.
+	 */
+	protected function is_multipage() {
+		global $pages;
+
+		$_pages = $pages;
+
+		$post = $this->is_singular() || $this->is_front_page() ? get_post( $this->get_the_real_ID() ) : null;
+
+		if ( is_object( $post ) ) {
+			$content = $post->post_content;
+			if ( false !== strpos( $content, '<!--nextpage-->' ) ) {
+				$content = str_replace( "\n<!--nextpage-->", '<!--nextpage-->', $content );
+
+				// Ignore nextpage at the beginning of the content.
+				if ( 0 === strpos( $content, '<!--nextpage-->' ) )
+					$content = substr( $content, 15 );
+
+				$_pages = explode( '<!--nextpage-->', $content );
+			} else {
+				$_pages = array( $post->post_content );
+			}
+		} else {
+			return false;
+		}
+
+		/**
+		 * Filter the "pages" derived from splitting the post content.
+		 *
+		 * "Pages" are determined by splitting the post content based on the presence
+		 * of `<!-- nextpage -->` tags.
+		 *
+		 * @since 4.4.0 WordPress core
+		 *
+		 * @param array $_pages Array of "pages" derived from the post content.
+		 *              of `<!-- nextpage -->` tags..
+		 * @param WP_Post $post  Current post object.
+		 */
+		$_pages = apply_filters( 'content_pagination', $_pages, $post );
+
+		$numpages = count( $_pages );
+
+		if ( $numpages > 1 ) {
+			$multipage = true;
+		} else {
+			$multipage = false;
+		}
+
+		return $multipage;
+	}
+
+	/**
 	 * Fetches the number of the current page.
-	 * Fetches global $paged through Query Var. Determines
+	 * Fetches global $paged through Query Var to prevent conflicts.
 	 *
 	 * @since 2.6.0
-	 * @staticvar int $paged
 	 *
 	 * @return int $paged
 	 */
 	public function paged() {
 
-		static $paged = null;
+		if ( null !== $cache = $this->get_query_cache( __METHOD__ ) )
+			return $cache;
 
-		if ( isset( $paged ) && $this->can_cache_query() )
-			return $paged;
-
 		$paged = get_query_var( 'paged' );
 
-		return $paged = $paged ? (int) $paged : 1;
+		$this->set_query_cache(
+			__METHOD__,
+			$paged = $paged ? (int) $paged : 1
+		);
+
+		return $paged;
 	}
 
+	/**
+	 * Handles object cache for the query class.
+	 *
+	 * @since 2.7.0
+	 * @staticvar bool $can_cache_query : True when this function can run.
+	 * @staticvar mixed $cache : The cached query.
+	 * @see AutoDescritpion_Query::set_query_cache(); to set query cache.
+	 *
+	 * @param string $key The key to set or get.
+	 * @param mixed $value_to_set The value to set.
+	 * @param array|mixed $hash Extra arguments, that will be used to generate an alternative cache key.
+	 *        Must always be inside a single array when $value_to_set is set. @see AutoDescritpion_Query::set_query_cache()
+	 *        Must always be separated parameters otherwise.
+	 * @return mixed : {
+	 * 		mixed The cached value if set and $value_to_set is null.
+	 *		null If the query can't be cached yet, or when no value has been set.
+	 *		If $value_to_set is set : {
+	 *			true If the value is being set for the first time.
+	 *			false If the value has been set and $value_to_set is being overwritten.
+	 * 		}
+	 * }
+	 */
+	public function get_query_cache( $key, $value_to_set = null ) {
+
+		static $can_cache_query = null;
+
+		if ( is_null( $can_cache_query ) ) {
+			if ( $this->can_cache_query() ) {
+				$can_cache_query = true;
+			} else {
+				return null;
+			}
+		}
+
+		static $cache = array();
+
+		if ( func_num_args() > 2 ) {
+			$hash = isset( $value_to_set ) ? serialize( (array) func_get_arg( 2 ) ) : serialize( array_slice( func_get_args(), 2 ) );
+		} else {
+			$hash = false;
+		}
+
+		if ( isset( $value_to_set ) ) {
+			if ( isset( $cache[ $key ][ $hash ] ) ) {
+				$cache[ $key ][ $hash ] = $value_to_set;
+				return false;
+			}
+			$cache[ $key ][ $hash ] = $value_to_set;
+			return true;
+		} else {
+			if ( isset( $cache[ $key ][ $hash ] ) )
+				return $cache[ $key ][ $hash ];
+		}
+
+		return null;
+	}
+
+	/**
+	 * Object cache handler for the query class.
+	 *
+	 * @since 2.7.0
+	 * @see AutoDescription_Query::get_query_cache()
+	 *
+	 * @param string $key The key to set.
+	 * @param mixed $value_to_set If null, no cache will be set.
+	 * @param mixed $hash Extra arguments, that will be used to generate an alternative cache key.
+	 * @return bool : {
+	 *		true If the value is being set for the first time.
+	 *		false If the value has been set and $value_to_set is being overwritten.
+	 * }
+	 */
+	public function set_query_cache( $key, $value_to_set ) {
+		if ( func_num_args() > 2 ) {
+			return $this->get_query_cache( $key, $value_to_set, array_slice( func_get_args(), 2 ) );
+		} else {
+			return $this->get_query_cache( $key, $value_to_set );
+		}
+	}
 }
Index: inc/classes/render.class.php
===================================================================
--- inc/classes/render.class.php	(revision 1475679)
+++ inc/classes/render.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Render
  *
@@ -36,6 +38,18 @@
 	protected $title_doing_it_wrong = null;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -55,10 +69,10 @@
 
 		static $description_cache = array();
 
-		if ( isset( $description_cache[$social] ) )
-			return $description_cache[$social];
+		if ( isset( $description_cache[ $social ] ) )
+			return $description_cache[ $social ];
 
-		return $description_cache[$social] = $this->generate_description( '', array( 'social' => $social ) );
+		return $description_cache[ $social ] = $this->generate_description( '', array( 'social' => $social ) );
 	}
 
 	/**
@@ -80,13 +94,13 @@
 
 		static $url_cache = array();
 
-		if ( is_null( $post_id ) )
+		if ( empty( $post_id ) )
 			$post_id = $this->get_the_real_ID();
 
-		if ( isset( $url_cache[$url][$post_id][$paged][$from_option][$paged_plural] ) )
-			return $url_cache[$url][$post_id][$paged][$from_option][$paged_plural];
+		if ( isset( $url_cache[ $url ][ $post_id ][ $paged ][ $from_option ][ $paged_plural ] ) )
+			return $url_cache[ $url ][ $post_id ][ $paged ][ $from_option ][ $paged_plural ];
 
-		return $url_cache[$url][$post_id][$paged][$from_option][$paged_plural] = $this->the_url( $url, array( 'paged' => $paged, 'get_custom_field' => $from_option, 'id' => $post_id, 'paged_plural' => $paged_plural ) );
+		return $url_cache[ $url ][ $post_id ][ $paged ][ $from_option ][ $paged_plural ] = $this->the_url( $url, array( 'paged' => $paged, 'get_custom_field' => $from_option, 'id' => $post_id, 'paged_plural' => $paged_plural ) );
 	}
 
 	/**
@@ -103,10 +117,10 @@
 
 		static $url_cache = array();
 
-		if ( isset( $url_cache[$force_slash] ) )
-			return $url_cache[$force_slash];
+		if ( isset( $url_cache[ $force_slash ] ) )
+			return $url_cache[ $force_slash ];
 
-		return $url_cache[$force_slash] = $this->the_url( '', array( 'home' => true, 'forceslash' => $force_slash ) );
+		return $url_cache[ $force_slash ] = $this->the_url( '', array( 'home' => true, 'forceslash' => $force_slash ) );
 	}
 
 	/**
@@ -160,20 +174,22 @@
 
 		static $title_cache = array();
 
-		if ( isset( $title_cache[$title][$sep][$seplocation][$meta] ) )
-			return $title_cache[$title][$sep][$seplocation][$meta];
+		if ( isset( $title_cache[ $title ][ $sep ][ $seplocation ][ $meta ] ) )
+			return $title_cache[ $title ][ $sep ][ $seplocation ][ $meta ];
 
-		return $title_cache[$title][$sep][$seplocation][$meta] = $this->title( $title, $sep, $seplocation, array( 'meta' => $meta ) );
+		return $title_cache[ $title ][ $sep ][ $seplocation ][ $meta ] = $this->title( $title, $sep, $seplocation, array( 'meta' => $meta ) );
 	}
 
 	/**
-	 * Cache current Image URL in static variable
-	 * Must be called inside the loop
+	 * Caches current Image URL in static variable.
+	 * Must be called inside the loop.
 	 *
 	 * @staticvar string $image_cache
 	 *
 	 * @since 2.2.2
-	 * @return string The image url
+	 * @since 2.7.0 $get_id parameter has been added.
+	 *
+	 * @return string The image URL.
 	 */
 	public function get_image_from_cache() {
 
@@ -184,10 +200,6 @@
 
 		$post_id = $this->get_the_real_ID();
 
-		//* End this madness if there's no ID found (search/404/etc.)
-		if ( empty( $post_id ) )
-			return '';
-
 		$image_cache = $this->get_image( $post_id );
 
 		return $image_cache;
@@ -194,27 +206,27 @@
 	}
 
 	/**
-	 * Render the description
+	 * Renders the description meta tag.
 	 *
 	 * @uses $this->description_from_cache()
 	 * @uses $this->detect_seo_plugins()
 	 *
 	 * @since 1.3.0
+	 *
+	 * @return string The description meta tag.
 	 */
 	public function the_description() {
 
 		if ( $this->detect_seo_plugins() )
-			return;
+			return '';
 
 		/**
 		 * Applies filters 'the_seo_framework_description_output' : string
 		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
 		 */
-		$description = (string) apply_filters( 'the_seo_framework_description_output', '', $this->get_the_real_ID() );
+		$description = (string) apply_filters( 'the_seo_framework_description_output', $this->description_from_cache(), $this->get_the_real_ID() );
 
-		if ( empty( $description ) )
-			$description = $this->description_from_cache();
-
 		if ( $description )
 			return '<meta name="description" content="' . esc_attr( $description ) . '" />' . "\r\n";
 
@@ -222,173 +234,169 @@
 	}
 
 	/**
-	 * Render og:description
+	 * Renders og:description meta tag
 	 *
 	 * @uses $this->description_from_cache()
+	 * @since 1.3.0
 	 *
-	 * @since 1.3.0
+	 * @return string The Open Graph description meta tag.
 	 */
 	public function og_description() {
 
-		if ( $this->use_og_tags() ) {
+		if ( ! $this->use_og_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_ogdescription_output' : string
-			 * @since 2.3.0
-			 */
-			$description = (string) apply_filters( 'the_seo_framework_ogdescription_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_ogdescription_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$description = (string) apply_filters( 'the_seo_framework_ogdescription_output', $this->description_from_cache( true ), $this->get_the_real_ID() );
 
-			if ( empty( $description ) )
-				$description = $this->description_from_cache( true );
-
+		if ( $description )
 			return '<meta property="og:description" content="' . esc_attr( $description ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Render the OG locale.
+	 * Renders the OG locale meta tag.
 	 *
 	 * @since 1.0.0
+	 *
+	 * @return string The Open Graph locale meta tag.
 	 */
 	public function og_locale() {
 
-		if ( $this->use_og_tags() ) {
+		if ( ! $this->use_og_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_oglocale_output' : string
-			 * @since 2.3.0
-			 */
-			$locale = (string) apply_filters( 'the_seo_framework_oglocale_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_oglocale_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$locale = (string) apply_filters( 'the_seo_framework_oglocale_output', $this->fetch_locale(), $this->get_the_real_ID() );
 
-			if ( empty( $locale ) )
-				$locale = $this->fetch_locale();
-
+		if ( $locale )
 			return '<meta property="og:locale" content="' . esc_attr( $locale ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Process the title to WordPress
+	 * Renders the Open Graph title meta tag.
 	 *
 	 * @uses $this->title_from_cache()
+	 * @since 2.0.3
 	 *
-	 * @since 2.0.3
+	 * @return string The Open Graph title meta tag.
 	 */
 	public function og_title() {
 
-		if ( $this->use_og_tags() ) {
+		if ( ! $this->use_og_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_ogtitle_output' : string
-			 * @since 2.3.0
-			 */
-			$title = (string) apply_filters( 'the_seo_framework_ogtitle_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_ogtitle_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$title = (string) apply_filters( 'the_seo_framework_ogtitle_output', $this->title_from_cache( '', '', '', true ), $this->get_the_real_ID() );
 
-			if ( empty( $title ) )
-				$title = $this->title_from_cache( '', '', '', true );
-
+		if ( $title )
 			return '<meta property="og:title" content="' . esc_attr( $title ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Get the OG type.
+	 * Renders the Open Graph type meta tag.
 	 *
 	 * @since 1.1.0
+	 *
+	 * @return string The Open Graph type meta tag.
 	 */
 	public function og_type() {
 
-		if ( $this->use_og_tags() ) {
+		if ( ! $this->use_og_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_ogtype_output' : string
-			 * @since 2.3.0
-			 */
-			$type = (string) apply_filters( 'the_seo_framework_ogtype_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_ogtype_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$type = (string) apply_filters( 'the_seo_framework_ogtype_output', $this->generate_og_type(), $this->get_the_real_ID() );
 
-			if ( empty( $type ) ) {
-				if ( $this->is_wc_product() ) {
-					$type = 'product';
-				} else if ( $this->is_single() && $this->get_image_from_cache() ) {
-					$type = 'article';
-				} else if ( $this->is_author() ) {
-					$type = 'profile';
-				} else if ( $this->is_blog_page() || ( $this->is_front_page() && ! $this->has_page_on_front() ) ) {
-					$type = 'blog';
-				} else {
-					$type = 'website';
-				}
-			}
-
+		if ( $type )
 			return '<meta property="og:type" content="' . esc_attr( $type ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Adds og:image
+	 * Renders Open Graph image meta tag.
 	 *
 	 * @param string $image url for image
 	 *
 	 * @since 1.3.0
+	 * @since 2.6.0 Added WooCommerce gallery images.
+	 * @since 2.7.0 Added image dimensions if found.
+	 *
+	 * @return string The Open Graph image meta tag.
 	 */
 	public function og_image() {
 
-		if ( $this->use_og_tags() ) {
+		if ( ! $this->use_og_tags() )
+			return '';
 
-			$id = $this->get_the_real_ID();
+		/**
+		 * Applies filters 'the_seo_framework_ogimage_output' : string|bool
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 *
+		 * @NOTE: Use of this might cause incorrect meta since other functions
+		 * depend on the image from cache.
+		 *
+		 * @todo Place in listener cache.
+		 * @priority medium 2.8.0+
+		 */
+		$image = apply_filters( 'the_seo_framework_ogimage_output', $this->get_image_from_cache(), $id = $this->get_the_real_ID() );
 
-			/**
-			 * Applies filters 'the_seo_framework_ogimage_output' : string|bool
-			 * @since 2.3.0
-			 *
-			 * @NOTE: Use of this might cause incorrect meta since other functions
-			 * depend on the image from cache.
-			 *
-			 * @todo Place in listener cache.
-			 * @priority medium 2.8.0+
-			 */
-			$image = apply_filters( 'the_seo_framework_ogimage_output', '', $id );
+		/**
+		 * Now returns empty string on false.
+		 * @since 2.6.0
+		 */
+		if ( false === $image )
+			return '';
 
-			/**
-			 * Now returns empty string on false.
-			 * @since 2.6.0
-			 */
-			if ( false === $image )
-				return '';
+		$image = (string) $image;
 
-			if ( empty( $image ) ) {
-				$image = $this->get_image_from_cache();
-			} else {
-				$image = (string) $image;
+		/**
+		 * Always output
+		 * @since 2.1.1
+		 */
+		$output = '<meta property="og:image" content="' . esc_attr( $image ) . '" />' . "\r\n";
+
+		if ( $image ) {
+			if ( ! empty( $this->image_dimensions[ $id ]['width'] ) && ! empty( $this->image_dimensions[ $id ]['height'] ) ) {
+				$output .= '<meta property="og:image:width" content="' . esc_attr( $this->image_dimensions[ $id ]['width'] ) . '" />' . "\r\n";
+				$output .= '<meta property="og:image:height" content="' . esc_attr( $this->image_dimensions[ $id ]['height'] ) . '" />' . "\r\n";
 			}
+		}
 
-			/**
-			 * Always output
-			 * @since 2.1.1
-			 */
-			$output = '<meta property="og:image" content="' . esc_attr( $image ) . '" />' . "\r\n";
+		//* Fetch Product images.
+		$woocommerce_product_images = $this->render_woocommerce_product_og_image();
 
-			//* Fetch Product images.
-			$woocommerce_product_images = $this->render_woocommerce_product_og_image();
-
-			return $output . $woocommerce_product_images;
-		}
-
-		return '';
+		return $output . $woocommerce_product_images;
 	}
 
 	/**
-	 * Render more OG images to choose from.
+	 * Renders WooCommerce Product Gallery OG images.
 	 *
 	 * @since 2.6.0
+	 * @since 2.7.0 Added image dimensions if found.
 	 *
 	 * @return string The rendered OG Image.
 	 */
@@ -405,8 +413,14 @@
 					//* Parse 1500px url.
 					$img = $this->parse_og_image( $id );
 
-					if ( $img )
+					if ( $img ) {
 						$output .= '<meta property="og:image" content="' . esc_attr( $img ) . '" />' . "\r\n";
+
+						if ( ! empty( $this->image_dimensions[ $id ]['width'] ) && ! empty( $this->image_dimensions[ $id ]['height'] ) ) {
+							$output .= '<meta property="og:image:width" content="' . esc_attr( $this->image_dimensions[ $id ]['width'] ) . '" />' . "\r\n";
+							$output .= '<meta property="og:image:height" content="' . esc_attr( $this->image_dimensions[ $id ]['height'] ) . '" />' . "\r\n";
+						}
+					}
 				}
 			}
 		}
@@ -415,39 +429,37 @@
 	}
 
 	/**
-	 * Adds og:site_name
+	 * Renders Open Graph sitename meta tag.
 	 *
-	 * @param string output	the output
+	 * @since 1.3.0
 	 *
-	 * @since 1.3.0
+	 * @return string The Open Graph sitename meta tag.
 	 */
 	public function og_sitename() {
 
-		if ( $this->use_og_tags() ) {
+		if ( ! $this->use_og_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_ogsitename_output' : string
-			 * @since 2.3.0
-			 */
-			$sitename = (string) apply_filters( 'the_seo_framework_ogsitename_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_ogsitename_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$sitename = (string) apply_filters( 'the_seo_framework_ogsitename_output', get_bloginfo( 'name' ), $this->get_the_real_ID() );
 
-			if ( empty( $sitename ) )
-				$sitename = get_bloginfo( 'name' );
-
+		if ( $sitename )
 			return '<meta property="og:site_name" content="' . esc_attr( $sitename ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Adds og:url
+	 * Renders Open Graph URL meta tag.
 	 *
-	 * @return string og:url the url meta
-	 *
 	 * @since 1.3.0
+	 * @uses $this->the_url_from_cache()
 	 *
-	 * @uses $this->the_url_from_cache()
+	 * @return string The Open Graph URL meta tag.
 	 */
 	public function og_url() {
 
@@ -458,88 +470,85 @@
 	}
 
 	/**
-	 * Render twitter:card
+	 * Renders the Twitter Card type meta tag.
 	 *
 	 * @since 2.2.2
+	 *
+	 * @return string The Twitter Card meta tag.
 	 */
 	public function twitter_card() {
 
-		if ( $this->use_twitter_tags() ) {
+		if ( ! $this->use_twitter_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_twittercard_output' : string
-			 * @since 2.3.0
-			 */
-			$card = (string) apply_filters( 'the_seo_framework_twittercard_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_twittercard_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$card = (string) apply_filters( 'the_seo_framework_twittercard_output', $this->generate_twitter_card_type(), $this->get_the_real_ID() );
 
-			if ( empty( $card ) ) {
-				/**
-				 * Return card type if image is found.
-				 * Return to summary if not.
-				 */
-				$card = $this->get_image_from_cache() ? $this->get_option( 'twitter_card' ) : 'summary';
-			}
-
+		if ( $card )
 			return '<meta name="twitter:card" content="' . esc_attr( $card ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Render twitter:site
+	 * Renders the Twitter Site meta tag.
 	 *
 	 * @since 2.2.2
+	 *
+	 * @return string The Twitter Site meta tag.
 	 */
 	public function twitter_site() {
 
-		if ( $this->use_twitter_tags() ) {
+		if ( ! $this->use_twitter_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_twittersite_output' : string
-			 * @since 2.3.0
-			 */
-			$site = (string) apply_filters( 'the_seo_framework_twittersite_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_twittersite_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$site = (string) apply_filters( 'the_seo_framework_twittersite_output', $this->get_option( 'twitter_site' ), $this->get_the_real_ID() );
 
-			if ( empty( $site ) )
-				$site = $this->get_option( 'twitter_site' );
+		if ( $site )
+			return '<meta name="twitter:site" content="' . esc_attr( $site ) . '" />' . "\r\n";
 
-			if ( $site )
-				return '<meta name="twitter:site" content="' . esc_attr( $site ) . '" />' . "\r\n";
-		}
-
 		return '';
 	}
 
 	/**
-	 * Render twitter:creator or twitter:site:id
+	 * Renders The Twitter Creator meta tag.
+	 * If no Twitter Site is found, it will render the Twitter Site ID meta tag.
 	 *
 	 * @since 2.2.2
+	 *
+	 * @return string The Twitter Creator or Twitter Site ID meta tag.
 	 */
 	public function twitter_creator() {
 
-		if ( $this->use_twitter_tags() ) {
+		if ( ! $this->use_twitter_tags() )
+			return '';
 
+		/**
+		 * Applies filters 'the_seo_framework_twittercreator_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$creator = (string) apply_filters( 'the_seo_framework_twittercreator_output', $this->get_option( 'twitter_creator' ), $this->get_the_real_ID() );
+
+		if ( $creator ) {
 			/**
-			 * Applies filters 'the_seo_framework_twittercreator_output' : string
-			 * @since 2.3.0
+			 * Return site:id instead of creator is no twitter:site is found.
+			 * Per Twitter requirements.
 			 */
-			$creator = (string) apply_filters( 'the_seo_framework_twittercreator_output', '', $this->get_the_real_ID() );
-
-			if ( empty( $creator ) ) {
-				$site = $this->get_option( 'twitter_site' );
-				$creator = $this->get_option( 'twitter_creator' );
-
-				/**
-				 * Return site:id instead of creator is no twitter:site is found.
-				 * Per Twitter requirements
-				 */
-				if ( empty( $site ) && $creator )
-					return '<meta name="twitter:site:id" content="' . esc_attr( $creator ) . '" />' . "\r\n";
+			if ( $this->get_option( 'twitter_site' ) ) {
+				return '<meta name="twitter:site:id" content="' . esc_attr( $creator ) . '" />' . "\r\n";
+			} else {
+				return '<meta name="twitter:creator" content="' . esc_attr( $creator ) . '" />' . "\r\n";
 			}
-
-			if ( $creator )
-				return '<meta name="twitter:creator" content="' . esc_attr( $creator ) . '" />' . "\r\n";
 		}
 
 		return '';
@@ -546,210 +555,201 @@
 	}
 
 	/**
-	 * Render twitter:title
+	 * Renders Twitter Title meta tag.
 	 *
 	 * @uses $this->title_from_cache()
+	 * @since 2.2.2
 	 *
-	 * @since 2.2.2
+	 * @return string The Twitter Title meta tag.
 	 */
 	public function twitter_title() {
 
-		if ( $this->use_twitter_tags() ) {
+		if ( ! $this->use_twitter_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_twittertitle_output' : string
-			 * @since 2.3.0
-			 */
-			$title = (string) apply_filters( 'the_seo_framework_twittertitle_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_twittertitle_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$title = (string) apply_filters( 'the_seo_framework_twittertitle_output', $this->title_from_cache( '', '', '', true ), $this->get_the_real_ID() );
 
-			if ( empty( $title ) )
-				$title = $this->title_from_cache( '', '', '', true );
-
+		if ( $title )
 			return '<meta name="twitter:title" content="' . esc_attr( $title ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Render twitter:description
+	 * Renders Twitter Description meta tag.
 	 *
 	 * @uses $this->description_from_cache()
+	 * @since 2.2.2
 	 *
-	 * @since 2.2.2
+	 * @return string The Twitter Descritpion meta tag.
 	 */
 	public function twitter_description() {
 
-		if ( $this->use_twitter_tags() ) {
+		if ( ! $this->use_twitter_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_twitterdescription_output' : string
-			 * @since 2.3.0
-			 */
-			$description = (string) apply_filters( 'the_seo_framework_twitterdescription_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_twitterdescription_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$description = (string) apply_filters( 'the_seo_framework_twitterdescription_output', $this->description_from_cache( true ), $this->get_the_real_ID() );
 
-			if ( empty( $description ) )
-				$description = $this->description_from_cache( true );
-
+		if ( $description )
 			return '<meta name="twitter:description" content="' . esc_attr( $description ) . '" />' . "\r\n";
-		}
 
 		return '';
 	}
 
 	/**
-	 * Render twitter:image:src
+	 * Renders Twitter Image meta tag.
 	 *
-	 * @param string $image url for image
-	 *
 	 * @since 2.2.2
 	 *
-	 * @return string|null The twitter image source meta tag
+	 * @return string The Twitter Image meta tag.
 	 */
 	public function twitter_image() {
 
-		if ( $this->use_twitter_tags() ) {
+		if ( ! $this->use_twitter_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_twitterimage_output' : string|bool
-			 * @since 2.3.0
-			 */
-			$image = apply_filters( 'the_seo_framework_twitterimage_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_twitterimage_output' : string|bool
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$image = (string) apply_filters( 'the_seo_framework_twitterimage_output', $this->get_image_from_cache(), $id = $this->get_the_real_ID() );
 
-			/**
-			 * Now returns empty string on false.
-			 * @since 2.6.0
-			 */
-			if ( false === $image )
-				return '';
+		$output = '';
 
-			if ( empty( $image ) ) {
-				$image = $this->get_image_from_cache();
-			} else {
-				$image = (string) $image;
+		if ( $image ) {
+			$output = '<meta name="twitter:image" content="' . esc_attr( $image ) . '" />' . "\r\n";
+
+			if ( ! empty( $this->image_dimensions[ $id ]['width'] ) && ! empty( $this->image_dimensions[ $id ]['height'] ) ) {
+				$output .= '<meta name="twitter:image:width" content="' . esc_attr( $this->image_dimensions[ $id ]['width'] ) . '" />' . "\r\n";
+				$output .= '<meta name="twitter:image:height" content="' . esc_attr( $this->image_dimensions[ $id ]['height'] ) . '" />' . "\r\n";
 			}
-
-			if ( $image )
-				return '<meta name="twitter:image:src" content="' . esc_attr( $image ) . '" />' . "\r\n";
 		}
 
-		return '';
+		return $output;
 	}
 
 	/**
-	 * Render article:author
+	 * Renders Facebook Author meta tag.
 	 *
 	 * @since 2.2.2
 	 *
-	 * @return string|null The facebook app id
+	 * @return string The Facebook Author meta tag.
 	 */
 	public function facebook_author() {
 
-		if ( $this->use_facebook_tags() ) {
+		if ( ! $this->use_facebook_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_facebookauthor_output' : string
-			 * @since 2.3.0
-			 */
-			$author = (string) apply_filters( 'the_seo_framework_facebookauthor_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_facebookauthor_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$author = (string) apply_filters( 'the_seo_framework_facebookauthor_output', $this->get_option( 'facebook_author' ), $this->get_the_real_ID() );
 
-			if ( empty( $author ) )
-				$author = $this->get_option( 'facebook_author' );
+		if ( $author )
+			return '<meta property="article:author" content="' . esc_attr( esc_url_raw( $author ) ) . '" />' . "\r\n";
 
-			if ( $author )
-				return '<meta property="article:author" content="' . esc_attr( esc_url_raw( $author ) ) . '" />' . "\r\n";
-		}
-
 		return '';
 	}
 
 	/**
-	 * Render article:author
+	 * Renders Facebook Publisher meta tag.
 	 *
 	 * @since 2.2.2
 	 *
-	 * @return string|null The facebook app id
+	 * @return string The Facebook Publisher meta tag.
 	 */
 	public function facebook_publisher() {
 
-		if ( $this->use_facebook_tags() ) {
+		if ( ! $this->use_facebook_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_facebookpublisher_output' : string
-			 * @since 2.3.0
-			 */
-			$publisher = (string) apply_filters( 'the_seo_framework_facebookpublisher_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_facebookpublisher_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$publisher = (string) apply_filters( 'the_seo_framework_facebookpublisher_output', $this->get_option( 'facebook_publisher' ), $this->get_the_real_ID() );
 
-			if ( empty( $publisher ) )
-				$publisher = $this->get_option( 'facebook_publisher' );
+		if ( $publisher )
+			return '<meta property="article:publisher" content="' . esc_attr( esc_url_raw( $publisher ) ) . '" />' . "\r\n";
 
-			if ( $publisher )
-				return '<meta property="article:publisher" content="' . esc_attr( esc_url_raw( $publisher ) ) . '" />' . "\r\n";
-		}
-
 		return '';
 	}
 
 	/**
-	 * Render fb:app_id
+	 * Renders Facebook App ID meta tag.
 	 *
 	 * @since 2.2.2
 	 *
-	 * @return string|null The facebook app id
+	 * @return string The Facebook App ID meta tag.
 	 */
 	public function facebook_app_id() {
 
-		if ( $this->use_facebook_tags() ) {
+		if ( ! $this->use_facebook_tags() )
+			return '';
 
-			/**
-			 * Applies filters 'the_seo_framework_facebookappid_output' : string
-			 * @since 2.3.0
-			 */
-			$app_id = (string) apply_filters( 'the_seo_framework_facebookappid_output', '', $this->get_the_real_ID() );
+		/**
+		 * Applies filters 'the_seo_framework_facebookappid_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$app_id = (string) apply_filters( 'the_seo_framework_facebookappid_output', $this->get_option( 'facebook_appid' ), $this->get_the_real_ID() );
 
-			if ( empty( $app_id ) )
-				$app_id = $this->get_option( 'facebook_appid' );
+		if ( $app_id )
+			return '<meta property="fb:app_id" content="' . esc_attr( $app_id ) . '" />' . "\r\n";
 
-			if ( $app_id )
-				return '<meta property="fb:app_id" content="' . esc_attr( $app_id ) . '" />' . "\r\n";
-		}
-
 		return '';
 	}
 
 	/**
-	 * Render article:published_time
+	 * Renders Article Publishing Time meta tag.
 	 *
 	 * @since 2.2.2
 	 *
-	 * @return string|null The article:published_time
+	 * @return string The Article Publishing Time meta tag.
 	 */
 	public function article_published_time() {
 
-		// Don't do anything if it's not a page or post.
+		//* Don't do anything if it's not a page or post.
 		if ( false === $this->is_singular() )
-			return;
+			return '';
 
-		$front_page = (bool) is_front_page();
+		if ( $this->is_front_page() ) {
+			//* If it's the frontpage, but the option is disabled, don't do anything.
+			if ( ! $this->get_option( 'home_publish_time' ) )
+				return '';
+		} else {
+			//* If it's a post, but the option is disabled, don't do anything.
+			if ( $this->is_single() && ! $this->get_option( 'post_publish_time' ) )
+				return '';
 
-		// If it's a post, but the option is disabled, don't do anyhting.
-		if ( ! $front_page && $this->is_single() && ! $this->get_option( 'post_publish_time' ) )
-			return;
+			//* If it's a page, but the option is disabled, don't do anything.
+			if ( $this->is_page() && ! $this->get_option( 'page_publish_time' ) )
+				return '';
+		}
 
-		// If it's a page, but the option is disabled, don't do anything.
-		if ( ! $front_page && $this->is_page() && ! $this->get_option( 'page_publish_time' ) )
-			return;
+		$id = $this->get_the_real_ID();
 
-		// If it's  the home page, but the option is disabled, don't do anything.
-		if ( $front_page && ! $this->get_option( 'home_publish_time' ) )
-			return;
+		/**
+		 * Applies filters 'the_seo_framework_publishedtime_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$time = (string) apply_filters( 'the_seo_framework_publishedtime_output', get_the_date( 'Y-m-d', $id ), $id );
 
-		//* @since 2.3.0
-		$time = (string) apply_filters( 'the_seo_framework_publishedtime_output', '', $this->get_the_real_ID() );
-
-		if ( empty( $time ) )
-			$time = get_the_date( 'Y-m-d', '' );
-
 		if ( $time )
 			return '<meta property="article:published_time" content="' . esc_attr( $time ) . '" />' . "\r\n";
 
@@ -757,11 +757,13 @@
 	}
 
 	/**
-	 * Render article:modified_time
+	 * Renders Article Modified Time meta tag.
+	 * Also renders the Open Graph Updated Time meta tag if Open Graph tags are enabled.
 	 *
 	 * @since 2.2.2
+	 * @since 2.7.0 Listens to $this->get_the_real_ID() instead of WordPress Core ID determination.
 	 *
-	 * @return string|null The article:modified_time
+	 * @return string The Article Modified Time meta tag, and optionally the Open Graph Updated Time.
 	 */
 	public function article_modified_time() {
 
@@ -770,30 +772,33 @@
 			return '';
 
 		if ( $this->is_front_page() ) {
-			// If it's the frontpage, but the option is disabled, don't do anything.
+			//* If it's the frontpage, but the option is disabled, don't do anything.
 			if ( ! $this->get_option( 'home_modify_time' ) )
 				return '';
 		} else {
-			// If it's a post, but the option is disabled, don't do anyhting.
+			//* If it's a post, but the option is disabled, don't do anyhting.
 			if ( $this->is_single() && ! $this->get_option( 'post_modify_time' ) )
 				return '';
 
-			// If it's a page, but the option is disabled, don't do anything.
+			//* If it's a page, but the option is disabled, don't do anything.
 			if ( $this->is_page() && ! $this->get_option( 'page_modify_time' ) )
 				return '';
 		}
 
-		//* @since 2.3.0
-		$time = (string) apply_filters( 'the_seo_framework_modifiedtime_output', '', $this->get_the_real_ID() );
+		$id = $this->get_the_real_ID();
 
-		if ( empty( $time ) )
-			$time = the_modified_date( 'Y-m-d', '', '', false );
+		/**
+		 * Applies filters 'the_seo_framework_modifiedtime_output' : string
+		 * @since 2.3.0
+		 * @since 2.7.0 Added output within filter.
+		 */
+		$time = (string) apply_filters( 'the_seo_framework_modifiedtime_output', get_post_modified_time( 'Y-m-d', false, $id, false ), $id );
 
 		if ( $time ) {
 			$output = '<meta property="article:modified_time" content="' . esc_attr( $time ) . '" />' . "\r\n";
 
 			if ( $this->use_og_tags() )
-				$output .= '<meta property="og:updated_time" content="' . esc_attr( $time ) . '" />'. "\r\n";
+				$output .= '<meta property="og:updated_time" content="' . esc_attr( $time ) . '" />' . "\r\n";
 
 			return $output;
 		}
@@ -802,13 +807,12 @@
 	}
 
 	/**
-	 * Outputs canonical url
+	 * Renders Canonical URL meta tag.
 	 *
 	 * @since 2.0.6
-	 *
 	 * @uses $this->the_url_from_cache()
 	 *
-	 * @return string canonical url meta
+	 * @return string The Canonical URL meta tag.
 	 */
 	public function canonical() {
 
@@ -815,9 +819,14 @@
 		/**
 		 * Applies filters the_seo_framework_output_canonical : Don't output canonical if false.
 		 * @since 2.4.2
+		 *
+		 * @deprecated
+		 * @since 2.7.0
 		 */
-		if ( ! apply_filters( 'the_seo_framework_output_canonical', true, $this->get_the_real_ID() ) )
-			return;
+		if ( ! apply_filters( 'the_seo_framework_output_canonical', true, $this->get_the_real_ID() ) ) {
+			$this->_deprecated_function( 'filter the_seo_framework_output_canonical', '2.7.0', "add_filter( 'the_seo_framework_rel_canonical_output', '__return_empty_string' );" );
+			return '';
+		}
 
 		/**
 		 * Applies filters 'the_seo_framework_rel_canonical_output' : Change canonical URL output.
@@ -825,22 +834,28 @@
 		 */
 		$url = (string) apply_filters( 'the_seo_framework_rel_canonical_output', $this->the_url_from_cache(), $this->get_the_real_ID() );
 
-		return '<link rel="canonical" href="' . $url . '" />' . "\r\n";
+		/**
+		 * @since 2.7.0 Listens to the second filter.
+		 */
+		if ( $url )
+			return '<link rel="canonical" href="' . $url . '" />' . "\r\n";
+
+		return '';
 	}
 
 	/**
-	 * LD+JSON helper output
+	 * Renders LD+JSON Schema.org scripts.
 	 *
 	 * @uses $this->render_ld_json_scripts()
 	 *
 	 * @since 1.2.0
-	 * @return string $json LD+json helpers in header on front page.
+	 * @return string The LD+json Schema.org scripts.
 	 */
 	public function ld_json() {
 
-		//* Check for LD+JSON compat
-		if ( $this->is_search() || $this->is_404() )
-			return;
+		//* Don't output on Search, 404 or preview.
+		if ( $this->is_search() || $this->is_404() || $this->is_preview() )
+			return '';
 
 		/**
 		 * Applies filters 'the_seo_framework_ldjson_scripts' : string
@@ -852,11 +867,11 @@
 	}
 
 	/**
-	 * Outputs Google Site Verification code
+	 * Renders Google Site Verification Code meta tag.
 	 *
 	 * @since 2.2.4
 	 *
-	 * @return string|null google verification code
+	 * @return string The Google Site Verification code meta tag.
 	 */
 	public function google_site_output() {
 
@@ -866,18 +881,18 @@
 		 */
 		$code = (string) apply_filters( 'the_seo_framework_googlesite_output', $this->get_option( 'google_verification' ), $this->get_the_real_ID() );
 
-		if ( empty( $code ) )
-			return '';
+		if ( $code )
+			return '<meta name="google-site-verification" content="' . esc_attr( $code ) . '" />' . "\r\n";
 
-		return '<meta name="google-site-verification" content="' . esc_attr( $code ) . '" />' . "\r\n";
+		return '';
 	}
 
 	/**
-	 * Outputs Bing Site Verification code
+	 * Renders Bing Site Verification Code meta tag.
 	 *
 	 * @since 2.2.4
 	 *
-	 * @return string|null Bing Webmaster code
+	 * @return string The Bing Site Verification Code meta tag.
 	 */
 	public function bing_site_output() {
 
@@ -887,18 +902,18 @@
 		 */
 		$code = (string) apply_filters( 'the_seo_framework_bingsite_output', $this->get_option( 'bing_verification' ), $this->get_the_real_ID() );
 
-		if ( empty( $code ) )
-			return '';
+		if ( $code )
+			return '<meta name="msvalidate.01" content="' . esc_attr( $code ) . '" />' . "\r\n";
 
-		return '<meta name="msvalidate.01" content="' . esc_attr( $code ) . '" />' . "\r\n";
+		return '';
 	}
 
 	/**
-	 * Outputs Yandex Site Verification code
+	 * Renders Yandex Site Verification code meta tag.
 	 *
 	 * @since 2.6.0
 	 *
-	 * @return string|null Yandex Webmaster code
+	 * @return string The Yandex Site Verification code meta tag.
 	 */
 	public function yandex_site_output() {
 
@@ -908,18 +923,18 @@
 		 */
 		$code = (string) apply_filters( 'the_seo_framework_yandexsite_output', $this->get_option( 'yandex_verification' ), $this->get_the_real_ID() );
 
-		if ( empty( $code ) )
-			return '';
+		if ( $code )
+			return '<meta name="yandex-verification" content="' . esc_attr( $code ) . '" />' . "\r\n";
 
-		return '<meta name="yandex-verification" content="' . esc_attr( $code ) . '" />' . "\r\n";
+		return '';
 	}
 
 	/**
-	 * Outputs Bing Site Verification code
+	 * Renders Pinterest Site Verification code meta tag.
 	 *
 	 * @since 2.5.2
 	 *
-	 * @return string|null Bing Webmaster code
+	 * @return string The Pinterest Site Verification code meta tag.
 	 */
 	public function pint_site_output() {
 
@@ -929,18 +944,19 @@
 		 */
 		$code = (string) apply_filters( 'the_seo_framework_pintsite_output', $this->get_option( 'pint_verification' ), $this->get_the_real_ID() );
 
-		if ( empty( $code ) )
-			return '';
+		if ( $code )
+			return '<meta name="p:domain_verify" content="' . esc_attr( $code ) . '" />' . "\r\n";
 
-		return '<meta name="p:domain_verify" content="' . esc_attr( $code ) . '" />' . "\r\n";
+		return '';
 	}
 
 	/**
-	 * Output robots meta tags
+	 * Renders Robots meta tags.
+	 * Returns early if blog isn't public. WordPress Core will then output the meta tags.
 	 *
 	 * @since 2.0.0
 	 *
-	 * @return null Return early if blog is not public.
+	 * @return string The Robots meta tags.
 	 */
 	public function robots() {
 
@@ -954,53 +970,24 @@
 		 */
 		$meta = (array) apply_filters( 'the_seo_framework_robots_meta', $this->robots_meta(), $this->get_the_real_ID() );
 
-		//* Add meta if any exist
-		if ( $meta )
-			return sprintf( '<meta name="robots" content="%s" />' . "\r\n", implode( ',', $meta ) );
+		if ( empty( $meta ) )
+			return '';
 
-		 return '';
+		return sprintf( '<meta name="robots" content="%s" />' . "\r\n", implode( ',', $meta ) );
 	}
 
 	/**
-	 * Outputs favicon urls
+	 * Renders Shortlink meta tag
 	 *
-	 * @since 2.2.1
-	 *
-	 * @uses $this->site_icon()
-	 *
-	 * @return string icon links.
-	 * @TODO Make this work for older wp versions. i.e. add upload area for wp 4.2.99999 and lower
-	 * @TODO Make this work in the first place
-	 * @ignore
-	 * @access private
-	 */
-	public function favicon() {
-
-		if ( $this->wp_version( '4.2.999', '<=' ) ) {
-			$output = '<link rel="icon" type="image/x-icon" href="' . esc_url( $this->site_icon( 16 ) ) . '" sizes="16x16" />' . "\r\n";
-			$output .= '<link rel="icon" type="image/x-icon" href="' . esc_url( $this->site_icon( 192 ) ) . '" sizes="192x192" />' . "\r\n";
-			$output .= '<link rel="apple-touch-icon-precomposed" href="' . esc_url( $this->site_icon( 180 ) ) . '" />' . "\r\n";
-			$output .= '<link rel="msapplication-TileImage" href="' . esc_url( $this->site_icon( 270 ) ) . '" />' . "\r\n";
-
-			return $output;
-		}
-
-		return '';
-	}
-
-	/**
-	 * Outputs shortlink meta tag
-	 *
 	 * @since 2.2.2
-	 *
 	 * @uses $this->get_shortlink()
 	 *
-	 * @return string|null shortlink url meta
+	 * @return string The Shortlink meta tag.
 	 */
 	public function shortlink() {
 
 		/**
-		 * Applies filters 'the_seo_framework_shortlink_output' : array
+		 * Applies filters 'the_seo_framework_shortlink_output' : string
 		 * @since 2.6.0
 		 */
 		$url = (string) apply_filters( 'the_seo_framework_shortlink_output', $this->get_shortlink(), $this->get_the_real_ID() );
@@ -1012,13 +999,12 @@
 	}
 
 	/**
-	 * Outputs paged urls meta tag
+	 * Renders Prev/Next Paged URL meta tags.
 	 *
 	 * @since 2.2.2
-	 *
 	 * @uses $this->get_paged_url()
 	 *
-	 * @return string
+	 * @return string The Prev/Next Paged URL meta tags.
 	 */
 	public function paged_urls() {
 
@@ -1048,7 +1034,7 @@
 	}
 
 	/**
-	 * Whether we can use Open Graph tags.
+	 * Determines whether we can use Open Graph tags.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $cache
@@ -1066,7 +1052,7 @@
 	}
 
 	/**
-	 * Whether we can use Facebook tags.
+	 * Determines whether we can use Facebook tags.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $cache
@@ -1084,7 +1070,7 @@
 	}
 
 	/**
-	 * Whether we can use Twitter tags.
+	 * Determines whether we can use Twitter tags.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $cache
@@ -1098,11 +1084,11 @@
 		if ( isset( $cache ) )
 			return $cache;
 
-		return $cache = $this->is_option_checked( 'twitter_tags' ) && false == $this->detect_twitter_card_plugin();
+		return $cache = $this->is_option_checked( 'twitter_tags' ) && false === $this->detect_twitter_card_plugin();
 	}
 
 	/**
-	 * Whether we can use Google+ tags.
+	 * Determines whether we can use Google+ tags.
 	 *
 	 * @since 2.6.0
 	 * @staticvar bool $cache
@@ -1118,5 +1104,4 @@
 
 		return $cache = $this->is_option_checked( 'googleplus_tags' );
 	}
-
 }
Index: inc/classes/sanitize.class.php
===================================================================
--- inc/classes/sanitize.class.php	(revision 1475679)
+++ inc/classes/sanitize.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Sanitize
  *
@@ -26,6 +28,18 @@
 class AutoDescription_Sanitize extends AutoDescription_Adminpages {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor
 	 */
 	public function __construct() {
@@ -39,33 +53,59 @@
 	}
 
 	/**
-	 * Register each of the settings with a sanitization filter type.
+	 * Checks the SEO Settings page nonce. Returns false if nonce can't be found.
+	 * Performs wp_die() when nonce verification fails.
 	 *
-	 * @since 2.2.2
+	 * Never run a sensitive function when it's returning false. This means no nonce can be verified.
 	 *
-	 * @uses autodescription_add_option_filter() Assign filter to array of settings.
+	 * @since 2.7.0
+	 * @staticvar bool $verified.
 	 *
-	 * @see AutoDescription_Sanitize::add_filter() Add sanitization filters to options.
+	 * @return bool True if verified and matches. False if can't verify.
 	 */
-	public function sanitizer_filters() {
+	public function verify_seo_settings_nonce() {
 
+		static $validated = null;
+
+		if ( isset( $validated ) )
+			return $validated;
+
 		//* If this page doesn't store settings, no need to sanitize them
 		if ( ! $this->settings_field )
-			return;
+			return $validated = false;
 
 		/**
 		 * If this page doesn't parse the site options,
 		 * There's no need to filter them on each request.
+		 * Nonce is handled elsewhere. This function merely injects filters to the $_POST data.
 		 *
 		 * @since 2.2.9
 		 */
-		if ( ! isset( $_POST ) || empty( $_POST ) || ! isset( $_POST[THE_SEO_FRAMEWORK_SITE_OPTIONS] ) || ! is_array( $_POST[THE_SEO_FRAMEWORK_SITE_OPTIONS] ) )
+		if ( empty( $_POST ) || ! isset( $_POST[ THE_SEO_FRAMEWORK_SITE_OPTIONS ] ) || ! is_array( $_POST[ THE_SEO_FRAMEWORK_SITE_OPTIONS ] ) )
+			return $validated = false;
+
+		check_admin_referer( $this->settings_field . '-options' );
+
+		return $validated = true;
+	}
+
+	/**
+	 * Register each of the settings with a sanitization filter type.
+	 *
+	 * @since 2.2.2
+	 * @uses autodescription_add_option_filter() Assign filter to array of settings.
+	 * @see AutoDescription_Sanitize::add_filter() Add sanitization filters to options.
+	 */
+	public function sanitizer_filters() {
+
+		//* Verify update nonce.
+		if ( false === $this->verify_seo_settings_nonce() )
 			return;
 
 		//* Update hidden options.
 		$this->update_hidden_options_to_default();
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_title_separator',
 			$this->settings_field,
 			array(
@@ -73,7 +113,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_description_separator',
 			$this->settings_field,
 			array(
@@ -81,7 +121,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_description',
 			$this->settings_field,
 			array(
@@ -90,7 +130,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_title',
 			$this->settings_field,
 			array(
@@ -101,7 +141,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_knowledge_type',
 			$this->settings_field,
 			array(
@@ -109,7 +149,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_left_right',
 			$this->settings_field,
 			array(
@@ -117,7 +157,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_left_right_home',
 			$this->settings_field,
 			array(
@@ -125,7 +165,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_one_zero',
 			$this->settings_field,
 			array(
@@ -212,7 +252,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_absint',
 			$this->settings_field,
 			array(
@@ -220,7 +260,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_no_html',
 			$this->settings_field,
 			array(
@@ -231,7 +271,7 @@
 		 * @todo create content="code" stripper
 		 * @priority low 2.9.0+
 		 */
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_no_html_space',
 			$this->settings_field,
 			array(
@@ -244,7 +284,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_url',
 			$this->settings_field,
 			array(
@@ -263,7 +303,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_url_query',
 			$this->settings_field,
 			array(
@@ -271,7 +311,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_twitter_name',
 			$this->settings_field,
 			array(
@@ -280,7 +320,7 @@
 			)
 		);
 
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_twitter_card',
 			$this->settings_field,
 			array(
@@ -289,7 +329,7 @@
 		);
 
 		//* Special action filter.
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_one_zero_flush_rewrite',
 			$this->settings_field,
 			array(
@@ -298,7 +338,7 @@
 		);
 
 		//* Special action filter.
-		$this->autodescription_add_option_filter(
+		$this->add_filter(
 			's_one_zero_flush_sitemap',
 			$this->settings_field,
 			array(
@@ -313,6 +353,7 @@
 	 * Registers option sanitation filter
 	 *
 	 * @since 2.2.2
+	 * @since 2.7.0 : No longer used internally.
 	 *
 	 * @param string $filter The filter to call (see AutoDescription_Siteoptions::$available_filters for options)
 	 * @param string $option The WordPress option name
@@ -332,9 +373,8 @@
 	 * sanitizer at the right time.
 	 *
 	 * @since 2.2.2
+	 * @since 2.7.0: Uses external caching function.
 	 *
-	 * @thanks StudioPress (http://www.studiopress.com/) for some code.
-	 *
 	 * @param string $filter Sanitization filter type
 	 * @param string $option Option key
 	 * @param array|string $suboption Optional. Suboption key
@@ -342,19 +382,56 @@
 	 */
 	public function add_filter( $filter, $option, $suboption = null ) {
 
+		$this->set_option_filter( $filter, $option, $suboption );
+
+		add_filter( 'sanitize_option_' . $option, array( $this, 'sanitize' ), 10, 2 );
+
+		return true;
+	}
+
+	/**
+	 * Sets sanitation filters cache.
+	 *
+	 * Associates a sanitization filter to each option (or sub options if they
+	 * exist) before adding a reference to run the option through that
+	 * sanitizer at the right time.
+	 *
+	 * @since 2.7.0
+	 * @staticvar $options The options filter cache.
+	 *
+	 * @param string $filter Sanitization filter type
+	 * @param string $option Option key
+	 * @param array|string $suboption Optional. Suboption key
+	 * @param bool $get Whether to retrieve cache.
+	 * @return boolean Returns true when complete
+	 */
+	protected function set_option_filter( $filter, $option, $suboption = null, $get = false ) {
+
+		static $options = array();
+
+		if ( $get )
+			return $options;
+
 		if ( is_array( $suboption ) ) {
 			foreach ( $suboption as $so ) {
-				$this->options[$option][$so] = $filter;
+				$options[ $option ][ $so ] = $filter;
 			}
-		} else if ( is_null( $suboption ) ) {
-			$this->options[$option] = $filter;
+		} elseif ( is_null( $suboption ) ) {
+			$options[ $option ] = $filter;
 		} else {
-			$this->options[$option][$suboption] = $filter;
+			$options[ $option ][ $suboption ] = $filter;
 		}
+	}
 
-		add_filter( 'sanitize_option_' . $option, array( $this, 'sanitize' ), 10, 2 );
-
-		return true;
+	/**
+	 * Returns sanitation filters from cache.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @return array Filters with their associated (sub)options.
+	 */
+	protected function get_option_filters() {
+		return $this->set_option_filter( '', '', '', true );
 	}
 
 	/**
@@ -370,19 +447,21 @@
 	 */
 	public function sanitize( $new_value, $option ) {
 
-		if ( ! isset( $this->options[$option] ) ) {
+		$filters = $this->get_option_filters();
+
+		if ( ! isset( $filters[ $option ] ) ) {
 			//* We are not filtering this option at all
 			return $new_value;
-		} else if ( is_string( $this->options[$option] ) ) {
+		} elseif ( is_string( $filters[ $option ] ) ) {
 			//* Single option value
-			return $this->do_filter( $this->options[$option], $new_value, get_option( $option ) );
-		} else if ( is_array( $this->options[$option] ) ) {
+			return $this->do_filter( $filters[ $option ], $new_value, get_option( $option ) );
+		} elseif ( is_array( $filters[ $option ] ) ) {
 			//* Array of suboption values to loop through
 			$old_value = get_option( $option );
-			foreach ( $this->options[$option] as $suboption => $filter ) {
-				$old_value[$suboption] = isset( $old_value[$suboption] ) ? $old_value[$suboption] : '';
-				$new_value[$suboption] = isset( $new_value[$suboption] ) ? $new_value[$suboption] : '';
-				$new_value[$suboption] = $this->do_filter( $filter, $new_value[$suboption], $old_value[$suboption] );
+			foreach ( $filters[ $option ] as $suboption => $filter ) {
+				$old_value[ $suboption ] = isset( $old_value[ $suboption ] ) ? $old_value[ $suboption ] : '';
+				$new_value[ $suboption ] = isset( $new_value[ $suboption ] ) ? $new_value[ $suboption ] : '';
+				$new_value[ $suboption ] = $this->do_filter( $filter, $new_value[ $suboption ], $old_value[ $suboption ] );
 			}
 			return $new_value;
 		}
@@ -408,10 +487,10 @@
 
 		$available_filters = $this->get_available_filters();
 
-		if ( ! in_array( $filter, array_keys( $available_filters ) ) )
+		if ( ! in_array( $filter, array_keys( $available_filters ), true ) )
 			return $new_value;
 
-		return call_user_func( $available_filters[$filter], $new_value, $old_value );
+		return call_user_func( $available_filters[ $filter ], $new_value, $old_value );
 	}
 
 	/**
@@ -662,7 +741,7 @@
 		 *
 		 * @since 2.3.0
 		 */
-		if ( (int) (bool) $new_value ) {
+		if ( $new_value ) {
 			$this->enqueue_rewrite_activate( true );
 		} else {
 			$this->enqueue_rewrite_deactivate( true );
@@ -808,7 +887,8 @@
 		$profile = trim( strip_tags( $new_value ) );
 
 		if ( 'http' === substr( $profile, 0, 4 ) ) {
-			$path = str_replace( '/', '', parse_url( $profile, PHP_URL_PATH ) );
+			$parsed_url = wp_parse_url( $profile );
+			$path = isset( $parsed_url['path'] ) ? str_replace( '/', '', $parsed_url['path'] ) : '';
 			$profile = $path ? '@' . $path : '';
 
 			return (string) $profile;
@@ -889,24 +969,19 @@
 			//* Find a path.
 			if ( _wp_can_use_pcre_u() ) {
 				//* URL pattern excluding path.
-				$pattern 	= 	'/'
-							.	'((((http)(s)?)?)\:)?' 	// 1: maybe http: https:
-							. 	'(\/\/)?'				// 2: maybe slash slash
-							. 	'((www.)?)'				// 3: maybe www.
-							.	'(.*\.[a-zA-Z0-9]*)'	// 4: any legal domain with tld
-							.	'(?:\/)?'				// 5: trailing slash
-							.	'/'
+				$pattern 	= '/'
+							. '((((http)(s)?)?)\:)?' 	// 1: maybe http: https:
+							. '(\/\/)?'				// 2: maybe slash slash
+							. '((www.)?)'				// 3: maybe www.
+							. '(.*\.[a-zA-Z0-9]*)'	// 4: any legal domain with tld
+							. '(?:\/)?'				// 5: trailing slash
+							. '/'
 							;
 
 				$is_path = ! preg_match( $pattern, $url );
 			} else {
-				$parsed_url = parse_url( $url );
-
-				if ( ! isset( $parsed_url['host'] ) && isset( $parsed_url['path'] ) ) {
-					$is_path = true;
-				} else {
-					$is_path = false;
-				}
+				$parsed_url = wp_parse_url( $url );
+				$is_path = ! isset( $parsed_url['host'] ) && isset( $parsed_url['path'] );
 			}
 
 			//* If link is relative, make it full again
@@ -974,5 +1049,4 @@
 		//* Save url
 		return $new_value;
 	}
-
 }
Index: inc/classes/search.class.php
===================================================================
--- inc/classes/search.class.php	(revision 1475679)
+++ inc/classes/search.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Search
  *
@@ -26,47 +28,105 @@
 class AutoDescription_Search extends AutoDescription_Generate_Ldjson {
 
 	/**
-	 * Constructor, load parent constructor
-	 *
-	 * Initalizes options
+	 * Unserializing instances of this class is forbidden.
 	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
+	 * Constructor, loads parent constructor and adds filters.
+	 */
 	public function __construct() {
 		parent::__construct();
 
-		add_action( 'pre_get_posts', array( $this, 'search_filter' ), 999, 1 );
+		/**
+		 * @since 2.1.7
+		 * @since 2.7.0 Changed priority from 999 to 9999.
+		 *              Now uses another method. Was: 'search_filter'.
+		 */
+		add_action( 'pre_get_posts', array( $this, 'adjust_search_filter' ), 9999, 1 );
 	}
 
 	/**
-	 * Fetches posts with exclude_local_search option on
+	 * Excludes posts from search with certain metadata.
+	 * For now, it only looks at 'exclude_local_search'. If it exists, the post or
+	 * page will be excluded from the local Search Results.
 	 *
-	 * @param array $query				The search query
+	 * @since 2.7.0
 	 *
-	 * @uses $this->exclude_search_ids()
+	 * @param array $query The possible search query.
+	 * @return void Early if no search query is found.
+	 */
+	public function adjust_search_filter( $query ) {
+
+		// Don't exclude pages in wp-admin.
+		if ( $query->is_search && false === $this->is_admin() ) {
+
+			$q = $query->query;
+			//* Only interact with an actual Search Query.
+			if ( false === isset( $q['s'] ) )
+				return;
+
+			$meta_query = $query->get( 'meta_query' );
+
+			//* Convert to array. Unset it if it's empty.
+			if ( false === is_array( $meta_query ) )
+				$meta_query = $meta_query ? (array) $meta_query : array();
+
+			/**
+			 * Exclude posts with exclude_local_search option on.
+			 *
+			 * Query is faster when the global relation is not set. Defaults to AND.
+			 * Query is faster when secondary relation is set. Defaults to AND.
+			 * Looks for CHAR value, while it's an integer/char in when unserialized.
+			 */
+			$meta_query[] = array(
+				array(
+					'key'      => 'exclude_local_search',
+					'value'    => '1',
+					'type'     => 'CHAR',
+					'compare'  => 'NOT EXISTS',
+					'relation' => 'AND',
+				),
+			);
+
+			$query->set( 'meta_query', $meta_query );
+		}
+	}
+
+	/**
+	 * Fetches posts with exclude_local_search option on.
 	 *
 	 * @since 2.1.7
+	 * @since 2.7.0 No longer used for performance reasons.
+	 * @uses $this->exclude_search_ids()
 	 *
-	 * @todo run this only when one post triggers this option?
-	 * @todo priority low 2.7.0+
+	 * @param array $query The possible search query.
+	 * @return void Early if no search query is found.
 	 */
 	public function search_filter( $query ) {
 
-		// Don't exclude pages in wp-admin
+		// Don't exclude pages in wp-admin.
 		if ( $query->is_search && false === $this->is_admin() ) {
 
 			$q = $query->query;
 			//* Only interact with an actual Search Query.
-			if ( ! isset( $q['s'] ) || ! $q['s'] )
+			if ( false === isset( $q['s'] ) )
 				return;
 
-			/**
-			 * @param array $protected_posts : Posts array with excluded key
-			 */
-			$protected_posts = $this->exclude_search_ids();
+			//* Get excluded IDs.
+			$protected_posts = $this->get_excluded_search_ids();
 			if ( $protected_posts ) {
 				$get = $query->get( 'post__not_in' );
 
 				//* Merge user defined query.
-				if ( $get )
+				if ( is_array( $get ) && ! empty( $get ) )
 					$protected_posts = array_merge( $protected_posts, $get );
 
 				$query->set( 'post__not_in', $protected_posts );
@@ -74,28 +134,22 @@
 
 			// Parse all ID's, even beyond the first page.
 			$query->set( 'no_found_rows', false );
-
 		}
-
 	}
 
 	/**
 	 * Fetches posts with exclude_local_search option on
 	 *
-	 * @param array $post_ids			The post id's which are excluded
-	 * @param array $args				Posts search arguments
-	 * @param array $protected_posts	Posts array with excluded key
-	 *
+	 * @since 2.7.0
+	 * @since 2.7.0 No longer used.
 	 * @global int $blog_id
 	 *
-	 * @since 2.1.7
-	 *
 	 * @return array Excluded Post IDs
 	 */
-	public function exclude_search_ids() {
+	public function get_excluded_search_ids() {
 		global $blog_id;
 
-		$cache_key = 'exclude_search_ids_' . $blog_id;
+		$cache_key = 'exclude_search_ids_' . $blog_id . '_' . get_locale();
 
 		$post_ids = $this->object_cache_get( $cache_key );
 		if ( false === $post_ids ) {
@@ -102,17 +156,23 @@
 			$post_ids = array();
 
 			$args = array(
-				'post_type' => 'any',
-				'meta_key' => 'exclude_local_search',
-				'meta_value' => 1,
-				'posts_per_page' => 99999, // get them all! Fast enough! :D
-				'meta_compare' => '=',
-			/*	'post_status' => array('publish','private'),*/
+				'post_type'        => 'any',
+				'numberposts'      => -1,
+				'posts_per_page'   => -1,
+				'order'            => 'DESC',
+				'post_status'      => 'publish',
+				'meta_key'         => 'exclude_local_search',
+				'meta_value'       => 1,
+				'meta_compare'     => '=',
+				'cache_results'    => true,
+				'suppress_filters' => false,
 			);
+			$get_posts = new WP_Query;
+			$excluded_posts = $get_posts->query( $args );
+			unset( $get_posts );
 
-			$protected_posts = get_posts( $args );
-			if ( $protected_posts )
-				$post_ids = wp_list_pluck( $protected_posts, 'ID' );
+			if ( $excluded_posts )
+				$post_ids = wp_list_pluck( $excluded_posts, 'ID' );
 
 			$this->object_cache_set( $cache_key, $post_ids, 86400 );
 		}
@@ -120,5 +180,4 @@
 		// return an array of exclude post IDs
 		return $post_ids;
 	}
-
 }
Index: inc/classes/sitemaps.class.php
===================================================================
--- inc/classes/sitemaps.class.php	(revision 1475679)
+++ inc/classes/sitemaps.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Search
  *
@@ -53,13 +55,25 @@
 	protected $doing_sitemap = false;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor and set up caches.
 	 */
 	public function __construct() {
 		parent::__construct();
 
-		// I'm not going to initialize my own rewrite engine. Causes too many problems.
-		$this->pretty_permalinks = ( '' !== $this->permalink_structure() ) ? true : false;
+		//* Whether we're using pretty permalinks.
+		$this->pretty_permalinks = '' !== $this->permalink_structure();
 
 		/**
 		 * Add query strings to rewrite
@@ -99,7 +113,7 @@
 		 * Don't do anything on a deleted or spam blog.
 		 * There's nothing to find anyway. Multisite Only.
 		 */
-		return $cache = $this->pretty_permalinks && $this->is_option_checked( 'sitemaps_output' ) && false === $this->current_blog_is_spam_or_deleted() ? true : false;
+		return $cache = $this->pretty_permalinks && $this->is_option_checked( 'sitemaps_output' ) && false === $this->current_blog_is_spam_or_deleted();
 	}
 
 	/**
@@ -183,10 +197,9 @@
 	/**
 	 * Destroy unused $GLOBALS.
 	 *
-	 * @param bool $get_freed_memory Whether to return the freed memory in bytes.
-	 *
 	 * @since 2.6.0
 	 *
+	 * @param bool $get_freed_memory Whether to return the freed memory in bytes.
 	 * @return int $freed_memory
 	 */
 	protected function clean_up_globals( $get_freed_memory = false ) {
@@ -220,9 +233,9 @@
 		foreach ( $remove as $key => $value ) {
 			if ( is_array( $value ) ) {
 				foreach ( $value as $v )
-					unset( $GLOBALS[$key][$v] );
+					unset( $GLOBALS[ $key ][ $v ] );
 			} else {
-				unset( $GLOBALS[$value] );
+				unset( $GLOBALS[ $value ] );
 			}
 		}
 
@@ -246,12 +259,9 @@
 				ob_clean();
 		}
 
-		//* Fetch sitemap content.
-		$xml_content = $this->get_sitemap_content();
+		//* Fetch sitemap content and add trailing line. Already escaped internally.
+		echo $this->get_sitemap_content() . "\r\n";
 
-		//* Echo and add trailing line.
-		echo $xml_content . "\r\n";
-
 		// We're done now.
 		die();
 	}
@@ -274,9 +284,9 @@
 		$sitemap_content = $this->get_transient( $this->sitemap_transient );
 
 		if ( false === $sitemap_content ) {
-			$cached_content = "\r\n<!-- " . __( 'Sitemap is generated for this view', 'autodescription' ) . " -->";
+			$cached_content = "\r\n<!-- " . __( 'Sitemap is generated for this view', 'autodescription' ) . ' -->';
 		} else {
-			$cached_content = "\r\n<!-- " . __( 'Sitemap is served from cache', 'autodescription' ) . " -->";
+			$cached_content = "\r\n<!-- " . __( 'Sitemap is served from cache', 'autodescription' ) . ' -->';
 		}
 
 		$content  = '<?xml version="1.0" encoding="UTF-8"?>' . "\r\n";
@@ -291,10 +301,10 @@
 		 * @since 2.3.7
 		 */
 		if ( $this->the_seo_framework_debug ) {
-			$content .= "\r\n<!-- Site estimated peak usage: " . ( memory_get_peak_usage() / 1024 / 1024 ) . " MB -->";
-			$content .= "\r\n<!-- System estimated peak usage: " . ( memory_get_peak_usage( true ) / 1024 / 1024 ) . " MB -->";
-			$content .= "\r\n<!-- Freed memory prior to generation: " . $this->clean_up_globals( true ) / 1024 . " kB -->";
-			$content .= "\r\n<!-- Sitemap generation time: " . ( number_format( microtime( true ) - $timer_start, 6 ) ) . " seconds -->";
+			$content .= "\r\n<!-- Site estimated peak usage: " . ( memory_get_peak_usage() / 1024 / 1024 ) . ' MB -->';
+			$content .= "\r\n<!-- System estimated peak usage: " . ( memory_get_peak_usage( true ) / 1024 / 1024 ) . ' MB -->';
+			$content .= "\r\n<!-- Freed memory prior to generation: " . $this->clean_up_globals( true ) / 1024 . ' kB -->';
+			$content .= "\r\n<!-- Sitemap generation time: " . ( number_format( microtime( true ) - $timer_start, 6 ) ) . ' seconds -->';
 		}
 
 		return $content;
@@ -394,7 +404,7 @@
 		$timestamp = (bool) apply_filters( 'the_seo_framework_sitemap_timestamp', true );
 
 		if ( $timestamp )
-			$content .= '<!-- ' . __( 'Sitemap is generated on', 'autodescription' ) . ' ' . current_time( "Y-m-d H:i:s" ) . ' -->' . "\r\n";
+			$content .= '<!-- ' . __( 'Sitemap is generated on', 'autodescription' ) . ' ' . current_time( 'Y-m-d H:i:s' ) . ' -->' . "\r\n";
 
 		if ( $totalpages ) {
 			//* Ascend by the date for normal pages. Older pages get to the top of the list.
@@ -406,8 +416,11 @@
 				'order' 			=> 'ASC',
 				'post_status' 		=> 'publish',
 				'cache_results' 	=> false,
+				'suppress_filters'	=> true,
 			);
-			$latest_pages = get_posts( $args );
+			$get_posts = new WP_Query;
+			$latest_pages = $get_posts->query( $args );
+			unset( $get_posts );
 		}
 		$latest_pages_amount = (int) count( $latest_pages );
 
@@ -422,20 +435,21 @@
 				if ( isset( $page->ID ) ) {
 					$page_id = $page->ID;
 
-					if ( '' === $excluded || ! isset( $excluded[$post_id] ) ) {
-						//* Is this the front page?
-						$page_is_front = ( $page_id === $id_on_front ) ? true : false;
+					if ( '' === $excluded || ! isset( $excluded[ $page_id ] ) ) {
 
 						//* Fetch the noindex option, per page.
-						$noindex = (bool) $this->get_custom_field( '_genesis_noindex', $page_id );
+						$indexed = ! $this->get_custom_field( '_genesis_noindex', $page_id );
 
 						//* Continue if indexed.
-						if ( false === $noindex ) {
-							$content .= "	<url>\r\n";
+						if ( $indexed ) {
+							//* Is this the front page?
+							$page_is_front = $page_id === $id_on_front;
+
+							$content .= "\t<url>\r\n";
 							if ( $page_is_front ) {
-								$content .= '		<loc>' . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'home' => true ) ) . "</loc>\r\n";
+								$content .= "\t\t<loc>" . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'home' => true ) ) . "</loc>\r\n";
 							} else {
-								$content .= '		<loc>' . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'post' => $page, 'id' => $page_id ) ) . "</loc>\r\n";
+								$content .= "\t\t<loc>" . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'post' => $page, 'id' => $page_id ) ) . "</loc>\r\n";
 							}
 
 							// Keep it consistent. Only parse if page_lastmod is true.
@@ -442,15 +456,15 @@
 							if ( $page_lastmod || ( $page_is_front && $home_lastmod ) ) {
 								$page_modified_gmt = $page->post_modified_gmt;
 
-								if ( $page_modified_gmt !== '0000-00-00 00:00:00' )
-									$content .= '		<lastmod>' . mysql2date( $timestamp_format, $page_modified_gmt, false ) . "</lastmod>\r\n";
+								if ( '0000-00-00 00:00:00' !== $page_modified_gmt )
+									$content .= "\t\t<lastmod>" . $this->gmt2date( $timestamp_format, $page_modified_gmt ) . "</lastmod>\r\n";
 							}
 
 							// Give higher priority to the home page.
 							$priority_page = $page_is_front ? 1 : 0.9;
 
-							$content .= '		<priority>' . number_format( $priority_page, 1 ) . "</priority>\r\n";
-							$content .= "	</url>\r\n";
+							$content .= "\t\t<priority>" . number_format( $priority_page, 1 ) . "</priority>\r\n";
+							$content .= "\t</url>\r\n";
 						}
 					}
 				}
@@ -470,8 +484,11 @@
 				'order' 			=> 'DESC',
 				'post_status' 		=> 'publish',
 				'cache_results' 	=> false,
+				'suppress_filters'	=> true,
 			);
-			$latest_posts = get_posts( $args );
+			$get_posts = new WP_Query;
+			$latest_posts = $get_posts->query( $args );
+			unset( $get_posts );
 		}
 		$latest_posts_amount = (int) count( $latest_posts );
 
@@ -508,28 +525,28 @@
 				if ( isset( $post->ID ) ) {
 					$post_id = $post->ID;
 
-					if ( '' === $excluded || ! isset( $excluded[$post_id] ) ) {
+					if ( '' === $excluded || ! isset( $excluded[ $post_id ] ) ) {
 
 						//* Fetch the noindex option, per page.
-						$noindex = (bool) $this->get_custom_field( '_genesis_noindex', $post_id );
+						$indexed = ! $this->get_custom_field( '_genesis_noindex', $post_id );
 
 						//* Continue if indexed
-						if ( ! $noindex ) {
+						if ( $indexed ) {
 
-							$content .= "	<url>\r\n";
+							$content .= "\t<url>\r\n";
 							// No need to use static vars
-							$content .= '		<loc>' . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'post' => $post, 'id' => $post_id ) ) . "</loc>\r\n";
+							$content .= "\t\t<loc>" . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'post' => $post, 'id' => $post_id ) ) . "</loc>\r\n";
 
 							// Keep it consistent. Only parse if page_lastmod is true.
 							if ( $post_lastmod ) {
 								$post_modified_gmt = $post->post_modified_gmt;
 
-								if ( $post_modified_gmt !== '0000-00-00 00:00:00' )
-									$content .= '		<lastmod>' . mysql2date( $timestamp_format, $post_modified_gmt, false ) . "</lastmod>\r\n";
+								if ( '0000-00-00 00:00:00' !== $post_modified_gmt )
+									$content .= "\t\t<lastmod>" . $this->gmt2date( $timestamp_format, $post_modified_gmt ) . "</lastmod>\r\n";
 							}
 
-							$content .= '		<priority>' . number_format( $priority, 1 ) . "</priority>\r\n";
-							$content .= "	</url>\r\n";
+							$content .= "\t\t<priority>" . number_format( $priority, 1 ) . "</priority>\r\n";
+							$content .= "\t</url>\r\n";
 
 							// Lower the priority for the next pass.
 							$priority = $priority - $prioritydiff;
@@ -557,8 +574,8 @@
 			$not_cpt = array( 'post', 'page', 'attachment' );
 
 			foreach ( $post_page as $post_type ) {
-				if ( false === in_array( $post_type, $not_cpt ) ) {
-					if ( empty( $excluded_cpt ) || false === in_array( $post_type, $excluded_cpt ) ) {
+				if ( false === in_array( $post_type, $not_cpt, true ) ) {
+					if ( empty( $excluded_cpt ) || false === in_array( $post_type, $excluded_cpt, true ) ) {
 						if ( $this->post_type_supports_custom_seo( $post_type ) ) {
 							$cpt[] = $post_type;
 						}
@@ -576,8 +593,11 @@
 					'order' 			=> 'DESC',
 					'post_status' 		=> 'publish',
 					'cache_results' 	=> false,
+					'suppress_filters' 	=> true,
 				);
-				$latest_cpt_posts = get_posts( $args );
+				$get_posts = new WP_Query;
+				$latest_cpt_posts = $get_posts->query( $args );
+				unset( $get_posts );
 			}
 		}
 		$latest_cpt_posts_amount = (int) count( $latest_cpt_posts );
@@ -606,31 +626,31 @@
 			 */
 			foreach ( $latest_cpt_posts as $ctp_post ) {
 				if ( isset( $ctp_post->ID ) ) {
-					$post_id = $ctp_post->ID;
+					$cpt_id = $ctp_post->ID;
 
-					if ( '' === $excluded || ! isset( $excluded[$post_id] ) ) {
+					if ( '' === $excluded || ! isset( $excluded[ $cpt_id ] ) ) {
 
 						//* Fetch the noindex option, per page.
-						$noindex = (bool) $this->get_custom_field( '_genesis_noindex', $post_id );
+						$indexed = ! $this->get_custom_field( '_genesis_noindex', $cpt_id );
 
 						//* Continue if indexed
-						if ( ! $noindex ) {
+						if ( $indexed ) {
 
-							$content .= "	<url>\r\n";
+							$content .= "\t<url>\r\n";
 							//* No need to use static vars
-							$content .= '		<loc>' . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'post' => $ctp_post, 'id' => $post_id ) ) . "</loc>\r\n";
+							$content .= "\t\t<loc>" . $this->the_url( '', array( 'get_custom_field' => false, 'external' => true, 'post' => $ctp_post, 'id' => $cpt_id ) ) . "</loc>\r\n";
 
 							//* Keep it consistent. Only parse if page_lastmod is true.
 							if ( $post_lastmod ) {
-								$post_modified_gmt = $ctp_post->post_modified_gmt;
+								$cpt_modified_gmt = $ctp_post->post_modified_gmt;
 
 								//* Some CPT don't set modified time.
-								if ( $post_modified_gmt !== '0000-00-00 00:00:00' )
-									$content .= '		<lastmod>' . mysql2date( $timestamp_format, $post_modified_gmt, false ) . "</lastmod>\r\n";
+								if ( '0000-00-00 00:00:00' !== $cpt_modified_gmt )
+									$content .= "\t\<lastmod>" . $this->gmt2date( $timestamp_format, $cpt_modified_gmt ) . "</lastmod>\r\n";
 							}
 
-							$content .= '		<priority>' . number_format( $priority_cpt, 1 ) . "</priority>\r\n";
-							$content .= "	</url>\r\n";
+							$content .= "\t\t<priority>" . number_format( $priority_cpt, 1 ) . "</priority>\r\n";
+							$content .= "\t</url>\r\n";
 
 							// Lower the priority for the next pass.
 							$priority_cpt = $priority_cpt - $prioritydiff_cpt;
@@ -659,6 +679,10 @@
 		$custom_urls = (array) apply_filters( 'the_seo_framework_sitemap_additional_urls', array() );
 
 		if ( $custom_urls ) {
+
+			//* Force ent2ncr to run, regardless of filters.
+			remove_all_filters( 'pre_ent2ncr', false );
+
 			foreach ( $custom_urls as $url => $args ) {
 
 				if ( ! is_array( $args ) ) {
@@ -666,12 +690,12 @@
 					$url = $args;
 				}
 
-				$content .= "	<url>\r\n";
+				$content .= "\t<url>\r\n";
 				//* No need to use static vars
-				$content .= '		<loc>' . esc_url_raw( $url ) . "</loc>\r\n";
+				$content .= "\t\t<loc>" . ent2ncr( esc_url_raw( $url ) ) . "</loc>\r\n";
 
 				if ( isset( $args['lastmod'] ) && $args['lastmod'] ) {
-					$content .= '		<lastmod>' . mysql2date( $timestamp_format, $args['lastmod'], false ) . "</lastmod>\r\n";
+					$content .= "\t\t<lastmod>" . mysql2date( $timestamp_format, $args['lastmod'], false ) . "</lastmod>\r\n";
 				}
 
 				if ( isset( $args['priority'] ) && $args['priority'] ) {
@@ -680,8 +704,8 @@
 					$priority = 0.9;
 				}
 
-				$content .= '		<priority>' . number_format( $priority, 1 ) . "</priority>\r\n";
-				$content .= "	</url>\r\n";
+				$content .= "\t\t<priority>" . number_format( $priority, 1 ) . "</priority>\r\n";
+				$content .= "\t</url>\r\n";
 			}
 		}
 
@@ -709,7 +733,6 @@
 
 		/**
 		 * Don't ping if the blog isn't public.
-		 *
 		 * @since 2.3.1
 		 */
 		if ( false === $this->is_option_checked( 'site_noindex' ) && $this->is_blog_public() ) {
@@ -732,7 +755,7 @@
 				if ( $this->is_option_checked( 'ping_yandex' ) )
 					$this->ping_yandex();
 
-				// Sorry I couldn't help myself.
+				// Sorry, I couldn't help myself.
 				$throttle = 'Bert and Ernie are weird.';
 
 				/**
@@ -759,7 +782,7 @@
 	public function ping_google() {
 
 		$pingurl = 'http://www.google.com/webmasters/sitemaps/ping?sitemap=' . urlencode( $this->the_home_url_from_cache( true ) . 'sitemap.xml' );
-		wp_remote_get( $pingurl, array( 'timeout' => 3 ) );
+		wp_safe_remote_get( $pingurl, array( 'timeout' => 3 ) );
 
 	}
 
@@ -771,7 +794,7 @@
 	public function ping_bing() {
 
 		$pingurl = 'http://www.bing.com/webmaster/ping.aspx?siteMap=' . urlencode( $this->the_home_url_from_cache( true ) . 'sitemap.xml' );
-		wp_remote_get( $pingurl, array( 'timeout' => 3 ) );
+		wp_safe_remote_get( $pingurl, array( 'timeout' => 3 ) );
 
 	}
 
@@ -783,7 +806,7 @@
 	public function ping_yandex() {
 
 		$pingurl = 'http://blogs.yandex.ru/pings/?status=success&url=' . urlencode( $this->the_home_url_from_cache( true ) . 'sitemap.xml' );
-		wp_remote_get( $pingurl, array( 'timeout' => 3 ) );
+		wp_safe_remote_get( $pingurl, array( 'timeout' => 3 ) );
 
 	}
 
@@ -827,7 +850,7 @@
 			$pre = (string) apply_filters( 'the_seo_framework_robots_txt_pre', '' );
 			$pro = (string) apply_filters( 'the_seo_framework_robots_txt_pro', '' );
 
-			$site_url = parse_url( site_url() );
+			$site_url = wp_parse_url( site_url() );
 			$path = ( ! empty( $site_url['path'] ) ) ? $site_url['path'] : '';
 
 			$output .= $pre;
@@ -844,7 +867,7 @@
 			 * @since 2.5.0
 			 */
 			if ( apply_filters( 'the_seo_framework_robots_disallow_queries', false ) ) {
-				$home_url = parse_url( rtrim( $this->the_home_url_from_cache(), ' /\\' ) );
+				$home_url = wp_parse_url( rtrim( $this->the_home_url_from_cache(), ' /\\' ) );
 				$home_path = ( ! empty( $home_url['path'] ) ) ? $home_url['path'] : '';
 				$output .= "Disallow: $home_path/*?*\r\n";
 			}
@@ -991,6 +1014,7 @@
 
 		$wp_rewrite->init();
 		$wp_rewrite->flush_rules( true );
+
 	}
 
 	/**
@@ -1007,6 +1031,6 @@
 		unset( $wp_rewrite->extra_rules_top['sitemap\.xml$'] );
 
 		$wp_rewrite->flush_rules( true );
+
 	}
-
 }
Index: inc/classes/siteoptions.class.php
===================================================================
--- inc/classes/siteoptions.class.php	(revision 1475679)
+++ inc/classes/siteoptions.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Siteoptions
  *
@@ -35,13 +37,14 @@
 	protected $settings_field;
 
 	/**
-	 * Hold the Page ID for this plugin.
+	 * Hold the SEO Settings Page ID for this plugin.
 	 *
 	 * @since 2.2.2
+	 * @since 2.70 Renamed var from page_id and made public.
 	 *
 	 * @var string The page ID
 	 */
-	protected $page_id;
+	public $seo_settings_page_slug;
 
 	/**
 	 * Holds the update option.
@@ -53,6 +56,18 @@
 	protected $o_plugin_updated;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor and set up cachable variables.
 	 */
 	public function __construct() {
@@ -59,14 +74,14 @@
 		parent::__construct();
 
 		$this->settings_field = THE_SEO_FRAMEWORK_SITE_OPTIONS;
-		$this->o_plugin_updated = 'updated_' . str_replace( '.', '', THE_SEO_FRAMEWORK_VERSION );
-		$this->page_id = 'autodescription-settings';
+		$this->o_plugin_updated = 'updated_' . THE_SEO_FRAMEWORK_DB_VERSION;
+		$this->seo_settings_page_slug = 'theseoframework-settings';
 
 		//* Set up site settings and save/reset them
 		add_action( 'admin_init', array( $this, 'register_settings' ), 5 );
 
 		//* Update site options at plugin update.
-		add_action( 'admin_init', array( $this, 'site_updated_plugin_option' ), 10 );
+		add_action( 'admin_init', array( $this, 'site_updated_plugin_option' ), 30 );
 
 	}
 
@@ -207,7 +222,7 @@
 			'knowledge_logo'		=> 1,	// Fetch logo from WP Favicon
 			'knowledge_name'		=> '',	// Person or Organization name
 
-			// 'Sameas'
+			// Knowledge sameas locations
 			'knowledge_facebook'	=> '',	// Facebook Account
 			'knowledge_twitter'		=> '',	// Twitter Account
 			'knowledge_gplus'		=> '',	// Google Plus Account
@@ -237,9 +252,6 @@
 			'ld_json_sitename'		=> 1,	// LD+Json Sitename
 			'ld_json_breadcrumbs'	=> 1,	// LD+Json Breadcrumbs
 
-			// Misc.
-			'counter_type' => 3, // JS counter type.
-
 			// Cache.
 			$this->o_plugin_updated => 1,	// Plugin update cache.
 		);
@@ -352,9 +364,12 @@
 	 */
 	protected function update_hidden_options_to_default() {
 
+		if ( false === $this->verify_seo_settings_nonce() )
+			return;
+
 		//* Disables the New SEO Settings Updated notification.
 		$plugin_updated = $this->o_plugin_updated;
-		$_POST[THE_SEO_FRAMEWORK_SITE_OPTIONS][$plugin_updated] = 1;
+		$_POST[ THE_SEO_FRAMEWORK_SITE_OPTIONS ][ $plugin_updated ] = 1;
 
 	}
 
@@ -399,28 +414,23 @@
 		 * Stop this madness from happening again until next update.
 		 * Also prevent $updated to become true on this call.
 		 */
-		$new_options[$plugin_updated] = 1;
-		$options[$plugin_updated] = 1;
+		$new_options[ $plugin_updated ] = 1;
+		$options[ $plugin_updated ] = 1;
 
 		//* Merge the options. Add to if it's non-existent.
 		foreach ( $new_options as $key => $value ) {
+			if ( ! isset( $options[ $key ] ) ) {
+				$options[ $key ] = $value;
 
-			//* Now shut up already.
-			if ( $key === $plugin_updated )
-				continue;
-
-			if ( ! isset( $options[$key] ) ) {
-				if ( ! empty( $new_options[$key] ) ) {
-					$options[$key] = $new_options[$key];
+				if ( ! empty( $value ) )
 					$updated = true;
-				}
 			}
 		}
 
 		//* Updated the options. Check for updated flag and see if settings pages are loaded.
-		if ( update_option( $this->settings_field, $options ) && $updated && $this->load_options ) {
+		if ( update_option( $this->settings_field, $options ) && $updated && $this->load_options )
 			$this->pre_output_site_updated_plugin_notice();
-		}
+
 	}
 
 	/**
@@ -431,10 +441,10 @@
 	 */
 	protected function pre_output_site_updated_plugin_notice() {
 
-		if ( $this->is_seo_settings_page() ) {
+		if ( $this->is_seo_settings_page( false ) ) {
 			//* Redirect to current page if on options page to correct option values. Once.
 			if ( ! isset( $_REQUEST['seo-updated'] ) || 'true' !== $_REQUEST['seo-updated'] )
-				$this->admin_redirect( $this->page_id, array( 'seo-updated' => 'true' ) );
+				$this->admin_redirect( $this->seo_settings_page_slug, array( 'seo-updated' => 'true' ) );
 
 			//* Notice has already been sent.
 			return;
@@ -449,7 +459,7 @@
 	}
 
 	/**
-	 * Echo plugin updated notification.
+	 * Echos plugin updated notification.
 	 *
 	 * @since 2.6.0
 	 *
@@ -457,17 +467,15 @@
 	 */
 	public function site_updated_plugin_notice() {
 
-		$notice = $this->page_defaults['plugin_update_text'];
-
 		$settings_url = $this->seo_settings_page_url();
-		$link = sprintf( '<a href="%s" title="%s" target="_self">%s</a>', $settings_url, __( 'SEO Settings', 'autodescription' ), __( 'here', 'autodescription' ) );
+		$link = sprintf( '<a href="%s" title="%s" target="_self">%s</a>', $settings_url, esc_attr__( 'SEO Settings', 'autodescription' ), esc_html__( 'here', 'autodescription' ) );
+		$go_to_page = sprintf( esc_html_x( 'View the new options %s.', '%s = here', 'autodescription' ), $link );
 
-		$go_to_page = sprintf( _x( 'View the new options %s.', '%s = here', 'autodescription' ), $link );
+		$notice = $this->page_defaults['plugin_update_text'] . ' ' . $go_to_page;
 
-		$notice = $notice . ' ' . $go_to_page;
+		//* Already escaped.
+		$this->do_dismissible_notice( $notice, 'updated', true, false );
 
-		echo $this->generate_dismissible_notice( $notice, 'updated' );
-
 	}
 
 	/**
@@ -480,7 +488,6 @@
 	 *
 	 * @param string  $key       Option name.
 	 * @param boolean $use_cache Optional. Whether to use the cache value or not. Defaults to true.
-	 *
 	 * @return mixed The value of this $key in the database.
 	 */
 	public function get_option( $key, $use_cache = true ) {
@@ -490,11 +497,10 @@
 	/**
 	 * Return current option array.
 	 *
-	 * Applies filters 'the_seo_framework_get_options' : boolean
-	 *
 	 * @since 2.6.0
 	 * @staticvar array $cache The option cache.
 	 *
+	 * @param string $setting The setting key.
 	 * @return array Options.
 	 */
 	public function get_all_options( $setting = null ) {
@@ -501,35 +507,34 @@
 
 		static $cache = array();
 
-		if ( isset( $cache[$setting] ) )
-			return $cache[$setting];
+		if ( isset( $cache[ $setting ] ) )
+			return $cache[ $setting ];
 
 		if ( is_null( $setting ) )
 			$setting = THE_SEO_FRAMEWORK_SITE_OPTIONS;
 
-		return $cache[$setting] = apply_filters( 'the_seo_framework_get_options', get_option( $setting ), $setting );
+		/**
+		 * Applies filters 'the_seo_framework_get_options' : boolean
+		 * @since 2.0.0
+		 */
+		return $cache[ $setting ] = apply_filters( 'the_seo_framework_get_options', get_option( $setting ), $setting );
 	}
 
 	/**
 	 * Return option from the options table and cache result.
 	 *
-	 * Applies `the_seo_framework_get_options` filters.
-	 * This filter retrieves the (previous) values from Genesis if exists.
-	 *
 	 * Values pulled from the database are cached on each request, so a second request for the same value won't cause a
 	 * second DB interaction.
+	 *
+	 * @since 2.0.0
 	 * @staticvar array $settings_cache
 	 * @staticvar array $options_cache
+	 * @thanks StudioPress (http://www.studiopress.com/) for some code.
 	 *
-	 * @since 2.0.0
-	 *
 	 * @param string  $key        Option name.
 	 * @param string  $setting    Optional. Settings field name. Eventually defaults to null if not passed as an argument.
 	 * @param boolean $use_cache  Optional. Whether to use the cache value or not. Default is true.
-	 *
 	 * @return mixed The value of this $key in the database.
-	 *
-	 * @thanks StudioPress (http://www.studiopress.com/) for some code.
 	 */
 	public function the_seo_framework_get_option( $key, $setting = null, $use_cache = true ) {
 
@@ -540,7 +545,7 @@
 			if ( ! is_array( $options ) || ! array_key_exists( $key, $options ) )
 				return '';
 
-			return is_array( $options[$key] ) ? stripslashes_deep( $options[$key] ) : stripslashes( wp_kses_decode_entities( $options[$key] ) );
+			return is_array( $options[ $key ] ) ? stripslashes_deep( $options[ $key ] ) : stripslashes( wp_kses_decode_entities( $options[ $key ] ) );
 		}
 
 		//* Setup caches
@@ -547,9 +552,9 @@
 		static $options_cache = array();
 
 		//* Check options cache
-		if ( isset( $options_cache[$setting][$key] ) )
+		if ( isset( $options_cache[ $setting ][ $key ] ) )
 			//* Option has been cached
-			return $options_cache[$setting][$key];
+			return $options_cache[ $setting ][ $key ];
 
 		$options = $this->get_all_options( $setting );
 
@@ -556,13 +561,13 @@
 		//* Check for non-existent option
 		if ( ! is_array( $options ) || ! array_key_exists( $key, (array) $options ) ) {
 			//* Cache non-existent option
-			$options_cache[$setting][$key] = '';
+			$options_cache[ $setting ][ $key ] = '';
 		} else {
 			//* Option has not been previously been cached, so cache now
-			$options_cache[$setting][$key] = is_array( $options[$key] ) ? stripslashes_deep( $options[$key] ) : stripslashes( wp_kses_decode_entities( $options[$key] ) );
+			$options_cache[ $setting ][ $key ] = is_array( $options[ $key ] ) ? stripslashes_deep( $options[ $key ] ) : stripslashes( wp_kses_decode_entities( $options[ $key ] ) );
 		}
 
-		return $options_cache[$setting][$key];
+		return $options_cache[ $setting ][ $key ];
 	}
 
 	/**
@@ -569,13 +574,11 @@
 	 * Return SEO options from the SEO options database.
 	 *
 	 * @since 2.2.2
-	 *
 	 * @uses $this->the_seo_framework_get_option() Return option from the options table and cache result.
 	 * @uses THE_SEO_FRAMEWORK_NETWORK_OPTIONS
 	 *
 	 * @param string  $key       Option name.
 	 * @param boolean $use_cache Optional. Whether to use the cache value or not. Defaults to true.
-	 *
 	 * @return mixed The value of this $key in the database.
 	 */
 	public function get_site_option( $key, $use_cache = true ) {
@@ -586,13 +589,11 @@
 	 * Return Default SEO options from the SEO options array.
 	 *
 	 * @since 2.2.5
-	 *
 	 * @uses $this->get_default_settings() Return option from the options table and cache result.
 	 * @uses THE_SEO_FRAMEWORK_SITE_OPTIONS
 	 *
 	 * @param string  $key       Option name.
 	 * @param boolean $use_cache Optional. Whether to use the cache value or not. Defaults to true.
-	 *
 	 * @return mixed The value of this $key in the database.
 	 */
 	public function get_default_option( $key, $use_cache = true ) {
@@ -627,11 +628,9 @@
 	 * Return the Warned site options. Options which should be 'avoided' return true.
 	 *
 	 * @since 2.3.4
+	 * Applies filters 'the_seo_framework_warned_site_options' : array The warned site options array.
 	 *
-	 * Applies filters the_seo_framework_warned_site_options The warned site options array.
-	 *
 	 * @param array $args Additional warned options to filter.
-	 *
 	 * @return array The SEO Framework Warned Options
 	 */
 	protected function warned_site_options( $args = array() ) {
@@ -651,10 +650,9 @@
 	 * Register the database settings for storage.
 	 *
 	 * @since 2.2.2
+	 * @thanks StudioPress (http://www.studiopress.com/) for some code.
 	 *
 	 * @return void
-	 *
-	 * @thanks StudioPress (http://www.studiopress.com/) for some code.
 	 */
 	public function register_settings() {
 
@@ -666,17 +664,38 @@
 		add_option( $this->settings_field, $this->default_site_options() );
 
 		//* If this page isn't the SEO Settings page, there's no need to check for a reset.
-		if ( false === $this->is_seo_settings_page() )
+		if ( false === $this->is_seo_settings_page( false ) )
 			return;
 
 		if ( $this->get_option( 'reset', $this->settings_field ) ) {
-			if ( update_option( $this->settings_field, $this->default_site_options() ) )
-				$this->admin_redirect( $this->page_id, array( 'reset' => 'true' ) );
-			else
-				$this->admin_redirect( $this->page_id, array( 'error' => 'true' ) );
-			exit;
+			if ( update_option( $this->settings_field, $this->default_site_options() ) ) {
+				$this->admin_redirect( $this->seo_settings_page_slug, array( 'reset' => 'true' ) );
+				exit;
+			} else {
+				$this->admin_redirect( $this->seo_settings_page_slug, array( 'error' => 'true' ) );
+				exit;
+			}
 		}
+	}
 
+	/**
+	 * Allows updating of settings.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param string|array $new The new setting(s).
+	 * @param string $settings_field The Settings Field to update. Defaults
+	 *				to The SEO Framework settings field.
+	 */
+	public function update_settings( $new = '', $settings_field = '' ) {
+
+		if ( empty( $settings_field ) )
+			$settings_field = $this->settings_field;
+
+		$old = get_option( $settings_field );
+		$settings = wp_parse_args( $new, $old );
+
+		return update_option( $settings_field, $settings );
 	}
 
 	/**
@@ -683,7 +702,7 @@
 	 * Get the default of any of the The SEO Framework settings.
 	 *
 	 * @since 2.2.4
-	 *
+	 * @staticvar array $defaults_cache
 	 * @uses $this->settings_field
 	 * @uses $this->default_site_options()
 	 *
@@ -690,11 +709,8 @@
 	 * @param string $key required The option name
 	 * @param string $setting optional The settings field
 	 * @param bool $use_cache optional Use the options cache or not. For debugging purposes.
-	 *
-	 * @staticvar array $defaults_cache
-	 *
-	 * @return 	int|bool|string default option
-	 *			int '-1' if option doesn't exist.
+	 * @return int|bool|string default option
+	 *         int '-1' if option doesn't exist.
 	 */
 	public function get_default_settings( $key, $setting = '', $use_cache = true ) {
 
@@ -712,22 +728,22 @@
 			if ( ! is_array( $defaults ) || ! array_key_exists( $key, $defaults ) )
 				return -1;
 
-			return is_array( $defaults[$key] ) ? stripslashes_deep( $defaults[$key] ) : stripslashes( wp_kses_decode_entities( $defaults[$key] ) );
+			return is_array( $defaults[ $key ] ) ? stripslashes_deep( $defaults[ $key ] ) : stripslashes( wp_kses_decode_entities( $defaults[ $key ] ) );
 		}
 
 		static $defaults_cache = array();
 
 		//* Check options cache
-		if ( isset( $defaults_cache[$key] ) )
+		if ( isset( $defaults_cache[ $key ] ) )
 			//* Option has been cached
-			return $defaults_cache[$key];
+			return $defaults_cache[ $key ];
 
 		$defaults_cache = $this->default_site_options();
 
 		if ( ! is_array( $defaults_cache ) || ! array_key_exists( $key, (array) $defaults_cache ) )
-			$defaults_cache[$key] = -1;
+			$defaults_cache[ $key ] = -1;
 
-		return $defaults_cache[$key];
+		return $defaults_cache[ $key ];
 	}
 
 	/**
@@ -734,7 +750,7 @@
 	 * Get the warned setting of any of the The SEO Framework settings.
 	 *
 	 * @since 2.3.4
-	 *
+	 * @staticvar array $warned_cache
 	 * @uses $this->settings_field
 	 * @uses $this->warned_site_options()
 	 *
@@ -741,11 +757,8 @@
 	 * @param string $key required The option name
 	 * @param string $setting optional The settings field
 	 * @param bool $use_cache optional Use the options cache or not. For debugging purposes.
-	 *
-	 * @staticvar array $warned_cache
-	 *
-	 * @return 	int 0|1 Whether the option is flagged as dangerous for SEO.
-	 *			int '-1' if option doesn't exist.
+	 * @return int 0|1 Whether the option is flagged as dangerous for SEO.
+	 *         int '-1' if option doesn't exist.
 	 */
 	public function get_warned_settings( $key, $setting = '', $use_cache = true ) {
 
@@ -763,32 +776,137 @@
 			if ( ! is_array( $warned ) || ! array_key_exists( $key, $warned ) )
 				return -1;
 
-			return $this->s_one_zero( $warned[$key] );
+			return $this->s_one_zero( $warned[ $key ] );
 		}
 
 		static $warned_cache = array();
 
 		//* Check options cache
-		if ( isset( $warned_cache[$key] ) )
+		if ( isset( $warned_cache[ $key ] ) )
 			//* Option has been cached
-			return $warned_cache[$key];
+			return $warned_cache[ $key ];
 
 		$warned_options = $this->warned_site_options();
 
 		if ( ! is_array( $warned_options ) || ! array_key_exists( $key, (array) $warned_options ) )
-			$warned_cache[$key] = -1;
+			$warned_cache[ $key ] = -1;
 
-		$warned_cache[$key] = $this->s_one_zero( $warned_options[$key] );
+		$warned_cache[ $key ] = $this->s_one_zero( $warned_options[ $key ] );
 
-		return $warned_cache[$key];
+		return $warned_cache[ $key ];
 	}
 
 	/**
-	 * Returns Facebook locales array
+	 * Fetches user SEO user meta data by name.
+	 * Caches all meta data per $user_id.
 	 *
+	 * @since 2.7.0
+	 * @staticvar array $options_cache
+	 *
+	 * @param int $user_id The user ID. When empty, it will try to fetch the current user.
+	 * @param string $option The option name.
+	 * @param mixed $default The default value to return when the data doesn't exist.
+	 * @return mixed The metadata value.
+	 */
+	public function get_user_option( $user_id = 0, $option, $default = null ) {
+
+		if ( ! $option )
+			return null;
+
+		if ( empty( $user_id ) )
+			$user_id = $this->get_user_id();
+
+		if ( ! $user_id )
+			return null;
+
+		static $options_cache = array();
+
+		if ( isset( $options_cache[ $user_id ][ $option ] ) )
+			return $options_cache[ $user_id ][ $option ];
+
+		$usermeta = $this->get_user_meta( $user_id );
+
+		return $options_cache[ $user_id ][ $option ] = isset( $usermeta[ $option ] ) ? $usermeta[ $option ] : $default;
+	}
+
+	/**
+	 * Sets up user ID and returns it if user is found.
+	 * To be used in AJAX, back-end and front-end.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @return int $user_id : 0 if user is not found.
+	 */
+	public function get_user_id() {
+
+		static $user_id = null;
+
+		if ( isset( $user_id ) )
+			return $user_id;
+
+		$user = wp_get_current_user();
+
+		return $user_id = $user->exists() ? (int) $user->ID : 0;
+	}
+
+	/**
+	 * Fetches The SEO Framework usermeta.
+	 *
+	 * @since 2.7.0
+	 * @staticvar array $usermeta_cache
+	 *
+	 * @param int $user_id The user ID.
+	 * @param string $key The user metadata key. Leave empty to fetch all data.
+	 * @param bool $use_cache Whether to store and use options from cache.
+	 * @return array The user SEO meta data.
+	 */
+	public function get_user_meta( $user_id, $key = THE_SEO_FRAMEWORK_USER_OPTIONS, $use_cache = true ) {
+
+		if ( false === $use_cache )
+			return get_user_meta( $user_id, $key, true );
+
+		static $usermeta_cache = array();
+
+		if ( isset( $usermeta_cache[ $user_id ][ $key ] ) )
+			return $usermeta_cache[ $user_id ][ $key ];
+
+		return $usermeta_cache[ $user_id ][ $key ] = get_user_meta( $user_id, $key, true );
+	}
+
+	/**
+	 * Updates user SEO option.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param int $user_id The user ID.
+	 * @param string $option The user's SEO metadata option.
+	 * @param mixed $value The escaped option value.
+	 * @return bool True on success. False on failure.
+	 */
+	public function update_user_option( $user_id = 0, $option, $value ) {
+
+		if ( ! $option )
+			return false;
+
+		if ( empty( $user_id ) )
+			$user_id = $this->get_user_id();
+
+		if ( empty( $user_id ) )
+			return false;
+
+		$meta = $this->get_user_meta( $user_id, THE_SEO_FRAMEWORK_USER_OPTIONS, false );
+
+		$meta[ $option ] = $value;
+
+		return update_user_meta( $user_id, THE_SEO_FRAMEWORK_USER_OPTIONS, $meta );
+	}
+
+	/**
+	 * Returns Facebook locales array values.
+	 *
+	 * @since 2.5.2
 	 * @see https://www.facebook.com/translations/FacebookLocales.xml
 	 *
-	 * @since 2.5.2
 	 * @return array Valid Facebook locales
 	 */
 	public function fb_locales() {
@@ -941,9 +1059,9 @@
 	 * This is apart from the fb_locales array since there are "duplicated" keys.
 	 * Use this to compare the numeric key position.
 	 *
+	 * @since 2.5.2
 	 * @see https://www.facebook.com/translations/FacebookLocales.xml
 	 *
-	 * @since 2.5.2
 	 * @return array Valid Facebook locales
 	 */
 	public function language_keys() {
@@ -1089,7 +1207,5 @@
 			'zu', // Zulu
 			'zz', // Zazaki
 		);
-
 	}
-
 }
Index: inc/classes/termdata.class.php
===================================================================
--- inc/classes/termdata.class.php	(revision 1475679)
+++ inc/classes/termdata.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_TermData
  *
@@ -26,201 +28,160 @@
 class AutoDescription_TermData extends AutoDescription_PostData {
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor.
 	 */
 	public function __construct() {
 		parent::__construct();
 
-	//	add_action( 'current_screen', array( $this, 'init_term_filters' ), 999 );
-	//	add_action( 'get_header', array( $this, 'init_term_filters' ), 999 );
-
-		add_filter( 'get_term', array( $this, 'get_term_filter' ), 10, 2 );
-		add_filter( 'get_terms', array( $this, 'get_terms_filter' ), 10, 2 );
-
-		add_action( 'edit_term', array( $this, 'taxonomy_seo_save' ), 10, 2 );
-		add_action( 'delete_term', array( $this, 'term_meta_delete' ), 10, 2 );
+		//* Initialize term meta filters and actions.
+		$this->initialize_term_meta();
 	}
 
 	/**
-	 * Initializes term filters after wp_query or currentscreen has been set.
+	 * Initializes term meta data filters and functions.
 	 *
-	 * @since 2.6.6
-	 * @staticvar boolean $run Whether this function has already run.
-	 * @access private
-	 *
-	 * @return void early if already run.
+	 * @since 2.7.0
 	 */
-	public function init_term_filters() {
+	public function initialize_term_meta() {
 
-		static $run = null;
+		if ( $this->can_get_term_meta() ) {
+			add_action( 'edit_term', array( $this, 'update_term_meta' ), 10, 2 );
+			add_action( 'delete_term', array( $this, 'delete_term_meta' ), 10, 2 );
+		} else {
+			//* Old style term meta data through loop injections.
+			add_filter( 'get_term', array( $this, 'get_term_filter' ), 10, 2 );
+			add_filter( 'get_terms', array( $this, 'get_terms_filter' ), 10, 2 );
 
-		if ( isset( $run ) )
-			return;
+			add_action( 'edit_term', array( $this, 'taxonomy_seo_save' ), 10, 2 );
+			add_action( 'delete_term', array( $this, 'term_meta_delete' ), 10, 2 );
+		}
 
-		add_filter( 'get_term', array( $this, 'get_term_filter' ), 10, 2 );
-		add_filter( 'get_terms', array( $this, 'get_terms_filter' ), 10, 2 );
-
-		$run = true;
-
 	}
 
 	/**
-	 * Add term meta data into options table of the term.
-	 * Adds separated database options for terms, as the terms table doesn't allow for addition.
+	 * Returns term meta data from ID.
+	 * Returns Genesis 2.3.0+ data if no term meta data is set.
 	 *
-	 * Applies filters array the_seo_framework_term_meta_defaults : Array of default term SEO options
-	 * Applies filters mixed the_seo_framework_term_meta_{field} : Override filter for specifics.
-	 * Applies filters array the_seo_framework_term_meta : Override output for term or taxonomy.
+	 * @since 2.7.0
+	 * @staticvar array $cache
 	 *
-	 * @since 2.1.8
-	 *
-	 * @todo Use WordPress 4.4.0 get_term_meta() / update_term_meta()
-	 * @priority OMG WTF BBQ 2.6.x / Genesis 2.3.0
-	 * @see @link http://www.studiopress.com/important-announcement-for-genesis-plugin-developers/
-	 * @link https://core.trac.wordpress.org/browser/tags/4.5/src/wp-includes/taxonomy.php#L1814
-	 * @todo still use arrays in get_term_meta() / update_term_meta() ?
-	 * @NOTE Keep WP 3.8 compat.
-	 *
-	 * @param object $term     Database row object.
-	 * @param string $taxonomy Taxonomy name that $term is part of.
-	 * @return object $term Database row object.
+	 * @param int $term_id The Term ID.
+	 * @param bool $use_cache Whether to use caching.
+	 * @return array The term meta data.
 	 */
-	public function get_term_filter( $term, $taxonomy ) {
+	public function get_term_meta( $term_id, $use_cache = true ) {
 
-		//* Do nothing, if $term is not an object.
-		if ( ! is_object( $term ) )
-			return $term;
+		if ( $use_cache ) {
+			static $cache = array();
 
-		/**
-		 * No need to process this data outside of the Terms' scope.
-		 * @since 2.6.0
-		 */
-		if ( false === is_admin() && false === is_archive() )
-			return $term;
+			if ( isset( $cache[ $term_id ] ) )
+				return $cache[ $term_id ];
+		} else {
+			$cache = array();
+		}
 
-		/**
-		 * No need to process this after the data has already been output.
-		 * @since 2.6.0
-		 */
-		if ( did_action( 'the_seo_framework_do_after_output' ) )
-			return $term;
+		$data = get_term_meta( $term_id, THE_SEO_FRAMEWORK_TERM_OPTIONS, true );
 
-		/**
-		 * Do nothing if called in the context of creating a term via an Ajax call to prevent data conflict.
-		 * @since ???
-		 *
-		 * @since 2.6.0 delay did_action call as it's a heavy array call.
-		 */
-		if ( defined( 'DOING_AJAX' ) && DOING_AJAX && did_action( 'wp_ajax_add-tag' ) )
-			return $term;
+		//* Evaluate merely by presence.
+		if ( isset( $data['saved_flag'] ) )
+			return $cache[ $term_id ] = $data;
 
-		$db = get_option( 'autodescription-term-meta' );
-		$term_meta = isset( $db[$term->term_id] ) ? $db[$term->term_id] : array();
+		if ( $this->is_theme( 'genesis' ) ) {
+			$data = array();
+			$data['doctitle'] = get_term_meta( $term_id, 'doctitle', true );
+			$data['description'] = get_term_meta( $term_id, 'description', true );
+			$data['noindex'] = get_term_meta( $term_id, 'noindex', true );
+			$data['nofollow'] = get_term_meta( $term_id, 'nofollow', true );
+			$data['noarchive'] = get_term_meta( $term_id, 'noarchive', true );
 
-		$args = (array) apply_filters( 'the_seo_framework_term_meta_defaults', array(
-			'doctitle'            => '',
-			'description'         => '',
-			'noindex'             => 0,
-			'nofollow'            => 0,
-			'noarchive'           => 0,
-			'saved_flag'          => 0, // Don't touch, used to prevent data conflict with Genesis.
-		) );
-
-		$term->admeta = wp_parse_args( $term_meta, $args );
-
-		//* Sanitize term meta
-		foreach ( $term->admeta as $field => $value ) {
-
-			/**
-			 * Trim and sanitize the title beforehand.
-			 * @since 2.5.0
-			 */
-			if ( 'doctitle' === $field )
-				$value = trim( strip_tags( $value ) );
-
-			/**
-			 * Trim and sanitize the description beforehand.
-			 * @since 2.5.0
-			 */
-			if ( 'description' === $field )
-				$value = $this->s_description( $value );
-
-			/**
-			 * @param object $term The Term object.
-			 * @param string $taxonomy The Taxonomy name.
-			 */
-			$term->admeta[$field] = (string) apply_filters( "the_seo_framework_term_meta_{$field}", stripslashes( wp_kses_decode_entities( $value ) ), $term, $taxonomy );
+			return $cache[ $term_id ] = $data;
 		}
 
-		/**
-		 * @param object $term The Term object.
-		 * @param array $taxonomy The Taxonomy name.
-		 */
-		$term->admeta = (array) apply_filters( 'the_seo_framework_term_meta', $term->admeta, $term, $taxonomy );
-
-		return $term;
+		return $cache[ $term_id ] = array();
 	}
 
 	/**
-	 * Add AutoDescription term-meta data to functions that return multiple terms.
+	 * Returns an array of default term options.
 	 *
-	 * @since 2.0.0
+	 * @since 2.7.0
 	 *
-	 * @param array  $terms    Database row objects.
-	 * @param string $taxonomy Taxonomy name that $terms are part of.
-	 * @return array $terms Database row objects.
+	 * @since 2.1.8:
+	 * Applies filters array the_seo_framework_term_meta_defaults : Array of default term SEO options
+	 *
+	 * @return array The Term Metadata default options.
 	 */
-	public function get_terms_filter( array $terms, $taxonomy ) {
-
-		foreach( $terms as $term )
-			$term = $this->get_term_filter( $term, $taxonomy );
-
-		return $terms;
+	public function get_term_meta_defaults() {
+		return (array) apply_filters( 'the_seo_framework_term_meta_defaults', array(
+			'doctitle'            => '',
+			'description'         => '',
+			'noindex'             => 0,
+			'nofollow'            => 0,
+			'noarchive'           => 0,
+			'saved_flag'          => 0, // Don't touch, used to prevent data conflict with Genesis.
+		) );
 	}
 
 	/**
-	 * Save taxonomy meta data.
-	 * Fires when a user edits and saves a taxonomy.
+	 * Sanitizes and saves term meta data when a term is altered.
 	 *
-	 * @since 2.1.8
+	 * @since 2.7.0
 	 *
-	 * @param integer $term_id Term ID.
-	 * @param integer $tt_id   Term Taxonomy ID.
+	 * @param int $term_id     Term ID.
+	 * @param int $tt_id       Term Taxonomy ID.
+	 * @param string $taxonomy Taxonomy Slug
 	 * @return void Early on AJAX call.
 	 */
-	public function taxonomy_seo_save( $term_id, $tt_id ) {
+	public function update_term_meta( $term_id, $tt_id, $taxonomy = '' ) {
 
 		if ( defined( 'DOING_AJAX' ) && DOING_AJAX )
 			return;
 
-		$term_meta = (array) get_option( 'autodescription-term-meta' );
+		//* Check again against ambiguous injection.
+		if ( isset( $_POST['_wpnonce'] ) && wp_verify_nonce( $_POST['_wpnonce'], 'update-tag_' . $term_id ) ) {
 
-		$term_meta[$term_id] = isset( $_POST['autodescription-meta'] ) ? (array) $_POST['autodescription-meta'] : array();
+			$data = isset( $_POST['autodescription-meta'] ) ? (array) map_deep( $_POST['autodescription-meta'], 'esc_attr' ) : array();
+			$data = wp_parse_args( $data, $this->get_term_meta_defaults() );
 
-		//* Pass through wp_kses if not super admin.
-		if ( ! current_user_can( 'unfiltered_html' ) && isset( $term_meta[$term_id]['archive_description'] ) )
-			$term_meta[$term_id]['archive_description'] = wp_kses( $term_meta[$term_id]['archive_description'] );
-
-		update_option( 'autodescription-term-meta', $term_meta );
-
+			update_term_meta( $term_id, THE_SEO_FRAMEWORK_TERM_OPTIONS, $data );
+		}
 	}
 
 	/**
-	 * Delete term meta data.
-	 * Fires when a user deletes a term.
+	 * Delete term meta data when a term is deleted.
+	 * Delete only the default data keys.
 	 *
-	 * @since 2.1.8
+	 * @since 2.7.0
 	 *
-	 * @param integer $term_id Term ID.
-	 * @param integer $tt_id   Taxonomy Term ID.
+	 * @param int $term_id Term ID.
+	 * @param int $tt_id   Term Taxonomy ID.
 	 */
-	public function term_meta_delete( $term_id, $tt_id ) {
+	public function delete_term_meta( $term_id, $tt_id ) {
 
-		$term_meta = (array) get_option( 'autodescription-term-meta' );
+		//* If this results in an empty data string, all data has already been removed by WP core.
+		$data = get_term_meta( $term_id, THE_SEO_FRAMEWORK_TERM_OPTIONS, true );
 
-		unset( $term_meta[$term_id] );
+		if ( is_array( $data ) ) {
+			foreach ( $this->get_term_meta_defaults() as $key => $value ) {
+				unset( $data[ $key ] );
+			}
+		}
 
-		update_option( 'autodescription-term-meta', (array) $term_meta );
+		if ( empty( $data ) )
+			delete_term_meta( $term_id, THE_SEO_FRAMEWORK_TERM_OPTIONS );
+		else
+			update_term_meta( $term_id, THE_SEO_FRAMEWORK_TERM_OPTIONS, $data );
 
 	}
 
@@ -227,47 +188,60 @@
 	/**
 	 * Fetch set Term data.
 	 *
-	 * @param object|null $term The TT object, if it isn't set, one is fetched.
-	 *
 	 * @since 2.6.0
+	 * @since 2.7.0 Handles term object differently for upgraded database.
 	 *
-	 * @return array $data The SEO Framework TT data.
+	 * @todo @since 2.8.0 Will no longer use $term.
+	 *
+	 * @param object|null $term The TT object, if it isn't set, one is fetched.
+	 * @param object|null $term_id The term object.
+	 * @return array The SEO Framework TT data.
 	 */
-	public function get_term_data( $term = null ) {
+	public function get_term_data( $term = null, $term_id = 0 ) {
 
-		if ( is_null( $term ) ) {
-			if ( $this->is_author() ) {
-				//* Special handling.
-				return null;
-			}
+		if ( is_null( $term ) )
+			$term = $this->fetch_the_term( $term_id );
 
-			$term = $this->fetch_the_term();
+		if ( isset( $term->term_id ) ) {
+			if ( $this->can_get_term_meta() )
+				return $this->get_term_meta( $term->term_id );
+			else
+				return $this->get_old_term_data( $term );
 		}
 
-		if ( $term ) {
-			$data = array();
+		//* Return null if no term can be set.
+		return null;
+	}
 
-			$data['title'] = isset( $term->admeta['doctitle'] ) ? $term->admeta['doctitle'] : '';
-			$data['description'] = isset( $term->admeta['description'] ) ? $term->admeta['description'] : '';
-			$data['noindex'] = isset( $term->admeta['noindex'] ) ? $term->admeta['noindex'] : '';
-			$data['nofollow'] = isset( $term->admeta['nofollow'] ) ? $term->admeta['nofollow'] : '';
-			$data['noarchive'] = isset( $term->admeta['noarchive'] ) ? $term->admeta['noarchive'] : '';
-			$flag = isset( $term->admeta['saved_flag'] ) ? (bool) $term->admeta['saved_flag'] : false;
+	/**
+	 * Fetches term metadata array for the inpost term metabox.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @param object $term The TT object. Must be assigned.
+	 * @return array The SEO Framework TT data.
+	 */
+	protected function get_old_term_data( $term ) {
 
-			//* Genesis data fetch. This will override our options with Genesis options on save.
-			if ( false === $flag && isset( $term->meta ) ) {
-				$data['title'] = empty( $data['title'] ) && isset( $term->meta['doctitle'] ) 				? $term->meta['doctitle'] : $data['noindex'];
-				$data['description'] = empty( $data['description'] ) && isset( $term->meta['description'] )	? $term->meta['description'] : $data['description'];
-				$data['noindex'] = empty( $data['noindex'] ) && isset( $term->meta['noindex'] ) 			? $term->meta['noindex'] : $data['noindex'];
-				$data['nofollow'] = empty( $data['nofollow'] ) && isset( $term->meta['nofollow'] )			? $term->meta['nofollow'] : $data['nofollow'];
-				$data['noarchive'] = empty( $data['noarchive'] ) && isset( $term->meta['noarchive'] )		? $term->meta['noarchive'] : $data['noarchive'];
-			}
+		$data = array();
 
-			return $data;
+		$data['title'] = isset( $term->admeta['doctitle'] ) ? $term->admeta['doctitle'] : '';
+		$data['description'] = isset( $term->admeta['description'] ) ? $term->admeta['description'] : '';
+		$data['noindex'] = isset( $term->admeta['noindex'] ) ? $term->admeta['noindex'] : '';
+		$data['nofollow'] = isset( $term->admeta['nofollow'] ) ? $term->admeta['nofollow'] : '';
+		$data['noarchive'] = isset( $term->admeta['noarchive'] ) ? $term->admeta['noarchive'] : '';
+		$flag = isset( $term->admeta['saved_flag'] ) ? (bool) $term->admeta['saved_flag'] : false;
+
+		//* Genesis data fetch. This will override our options with Genesis options on save.
+		if ( false === $flag && isset( $term->meta ) ) {
+			$data['title'] = empty( $data['title'] ) && isset( $term->meta['doctitle'] ) 				? $term->meta['doctitle'] : $data['noindex'];
+			$data['description'] = empty( $data['description'] ) && isset( $term->meta['description'] )	? $term->meta['description'] : $data['description'];
+			$data['noindex'] = empty( $data['noindex'] ) && isset( $term->meta['noindex'] ) 			? $term->meta['noindex'] : $data['noindex'];
+			$data['nofollow'] = empty( $data['nofollow'] ) && isset( $term->meta['nofollow'] )			? $term->meta['nofollow'] : $data['nofollow'];
+			$data['noarchive'] = empty( $data['noarchive'] ) && isset( $term->meta['noarchive'] )		? $term->meta['noarchive'] : $data['noarchive'];
 		}
 
-		//* Return null if no term can be set.
-		return null;
+		return $data;
 	}
 
 	/**
@@ -283,8 +257,8 @@
 
 		static $term = array();
 
-		if ( isset( $term[$id] ) )
-			return $term[$id];
+		if ( isset( $term[ $id ] ) )
+			return $term[ $id ];
 
 		//* Return null if no term can be set.
 		if ( false === $this->is_archive() )
@@ -295,20 +269,19 @@
 
 			if ( isset( $current_screen->taxonomy ) ) {
 				$term_id = $id ? $id : $this->get_admin_term_id();
-				$term[$id] = get_term_by( 'id', $term_id, $current_screen->taxonomy );
+				$term[ $id ] = get_term_by( 'id', $term_id, $current_screen->taxonomy );
 			}
 		} else {
-			if ( $this->is_category() || $this->is_tag() ) {
-				$term[$id] = get_queried_object();
-			} else if ( $this->is_tax() ) {
-				$term[$id] = get_term_by( 'slug', get_query_var( 'term' ), get_query_var( 'taxonomy' ) );
-			}
+			if ( $this->is_category() || $this->is_tag() )
+				$term[ $id ] = get_queried_object();
+			elseif ( $this->is_tax() )
+				$term[ $id ] = get_term_by( 'slug', get_query_var( 'term' ), get_query_var( 'taxonomy' ) );
 		}
 
-		if ( isset( $term[$id] ) )
-			return $term[$id];
+		if ( isset( $term[ $id ] ) )
+			return $term[ $id ];
 
-		return $term[$id] = false;
+		return $term[ $id ] = false;
 	}
 
 	/**
@@ -350,55 +323,33 @@
 	 */
 	protected function get_the_term_name( $term, $singular = true, $fallback = true, $use_cache = true ) {
 
-		if ( false === $use_cache ) {
-			//* No cache. Short circuit.
+		if ( $use_cache ) {
+			static $term_name = array();
 
-			if ( $term && is_object( $term ) ) {
-				$tax_type = $term->taxonomy;
-				$term_labels = $this->get_tax_labels( $tax_type );
-
-				if ( $singular ) {
-					if ( isset( $term_labels->singular_name ) )
-						return $term_labels->singular_name;
-				} else {
-					if ( isset( $term_labels->name ) )
-						return $term_labels->name;
-				}
-			}
-
-			if ( $fallback ) {
-				//* Fallback to Page as it is generic.
-				if ( $singular )
-					return __( 'Page', 'autodescription' );
-
-				return __( 'Pages', 'autodescription' );
-			}
+			if ( isset( $term_name[ $singular ] ) )
+				return $term_name[ $singular ];
+		} else {
+			$term_name = array();
 		}
 
-		static $term_name = array();
-
-		if ( isset( $term_name[$singular] ) )
-			return $term_name[$singular];
-
-		if ( $term && is_object( $term ) ) {
+		if ( isset( $term->taxonomy ) ) {
 			$tax_type = $term->taxonomy;
 
-			static $term_labels = null;
+			static $term_labels = array();
 
 			/**
 			 * Dynamically fetch the term name.
-			 *
 			 * @since 2.3.1
 			 */
-			if ( is_null( $term_labels ) )
-				$term_labels = $this->get_tax_labels( $tax_type );
+			if ( ! isset( $term_labels[ $tax_type ] ) )
+				$term_labels[ $tax_type ] = $this->get_tax_labels( $tax_type );
 
 			if ( $singular ) {
-				if ( isset( $term_labels->singular_name ) )
-					return $term_name[$singular] = $term_labels->singular_name;
+				if ( isset( $term_labels[ $tax_type ]->singular_name ) )
+					return $term_name[ $singular ] = $term_labels[ $tax_type ]->singular_name;
 			} else {
 				if ( isset( $term_labels->name ) )
-					return $term_name[$singular] = $term_labels->name;
+					return $term_name[ $singular ] = $term_labels[ $tax_type ]->name;
 			}
 		}
 
@@ -405,12 +356,11 @@
 		if ( $fallback ) {
 			//* Fallback to Page as it is generic.
 			if ( $singular )
-				return $term_name[$singular] = __( 'Page', 'autodescription' );
+				return $term_name[ $singular ] = esc_html__( 'Page', 'autodescription' );
 
-			return $term_name[$singular] = __( 'Pages', 'autodescription' );
+			return $term_name[ $singular ] = esc_html__( 'Pages', 'autodescription' );
 		}
 
-		return $term_name[$singular] = '';
+		return $term_name[ $singular ] = '';
 	}
-
 }
Index: inc/classes/transients.class.php
===================================================================
--- inc/classes/transients.class.php	(revision 1475679)
+++ inc/classes/transients.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Class AutoDescription_Transients
  *
@@ -62,6 +64,18 @@
 	protected $theme_doing_it_right_transient;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, load parent constructor and set up caches.
 	 */
 	public function __construct() {
@@ -89,10 +103,12 @@
 		//* Delete Sitemap transient on permalink structure change.
 		add_action( 'load-options-permalink.php', array( $this, 'delete_sitemap_transient_permalink_updated' ), 20 );
 
-		add_action( 'update_option_blogdescription', array( $this, 'delete_auto_description_blog_transient' ), 10, 1 );
+		//* Deletes front page description transient on Tagline change.
+		add_action( 'update_option_blogdescription', array( $this, 'delete_auto_description_frontpage_transient' ), 10, 1 );
 
 		//* Delete doing it wrong transient after theme switch.
-		add_action( 'after_switch_theme', array( $this, 'delete_theme_dir_transient' ), 10 );
+		add_action( 'after_switch_theme', array( $this, 'delete_theme_dir_transient' ), 10, 0 );
+		add_action( 'upgrader_process_complete', array( $this, 'delete_theme_dir_transient' ), 10, 2 );
 
 	}
 
@@ -186,7 +202,6 @@
 		} else {
 			$this->auto_description_transient = 'tsf_desc_noa_' . $revision . '_' . $cache_key;
 		}
-
 	}
 
 	/**
@@ -207,7 +222,7 @@
 		 *
 		 * Use hex. e.g. 0, 1, 2, 9, a, b
 		 */
-		$revision = '7';
+		$revision = '1';
 
 		/**
 		 * Change key based on options.
@@ -216,7 +231,7 @@
 		$options .= $this->enable_ld_json_sitename() ? '1' : '0';
 		$options .= $this->enable_ld_json_searchbox() ? '1' : '0';
 
-		$this->ld_json_transient = 'the_seo_f' . $revision . '_' . $options . '_ldjs_' . $cache_key;
+		$this->ld_json_transient = 'tsf_' . $revision . '_' . $options . '_ldjs_' . $cache_key;
 	}
 
 	/**
@@ -237,45 +252,47 @@
 
 		$page_id = $page_id ? $page_id : $this->get_the_real_ID();
 
+		if ( isset( $type ) ) {
+			if ( 'author' === $type ) {
+				//* Author page.
+				return $this->add_cache_key_suffix( 'author_' . $page_id );
+			} elseif ( 'frontpage' === $type ) {
+				//* Front/HomePage.
+				return $this->add_cache_key_suffix( $this->generate_front_page_cache_key() );
+			} else {
+				$this->_doing_it_wrong( __METHOD__, esc_html__( 'Third parameter must be a known type.', 'autodescription' ), '2.6.5' );
+				return $this->add_cache_key_suffix( esc_sql( $type . '_' . $page_id . '_' . $taxonomy ) );
+			}
+		}
+
 		static $cached_id = array();
 
-		if ( isset( $cached_id[$page_id][$taxonomy][$type] ) )
-			return $cached_id[$page_id][$taxonomy][$type];
+		if ( isset( $cached_id[ $page_id ][ $taxonomy ] ) )
+			return $cached_id[ $page_id ][ $taxonomy ];
 
 		//* Placeholder ID.
 		$the_id = '';
 		$t = $taxonomy;
 
-		if ( isset( $type ) ) {
-			if ( 'author' === $type ) {
-				//* Author page.
-				$the_id = 'author_' . $page_id;
-			} else if ( 'frontpage' === $type ) {
-				//* Front/HomePage.
-				$the_id = $this->generate_front_page_cache_key();
-			} else {
-				$this->_doing_it_wrong( __CLASS__ . '::' . __FUNCTION__, __( 'Third parameter must be a known type.', 'autodescription' ), '2.6.5' );
-				$the_id = esc_sql( $type . '_' . $page_id . '_' . $t );
-			}
-		} else if ( $this->is_404() ) {
+		if ( $this->is_404() ) {
 			$the_id = '_404_';
-		} else if ( ( $this->is_front_page( $page_id ) ) || ( $this->is_admin() && $this->is_menu_page( $this->pagehook ) ) ) {
+		} elseif ( ( $this->is_front_page( $page_id ) ) || ( $this->is_admin() && $this->is_seo_settings_page( true ) ) ) {
 			//* Front/HomePage.
 			$the_id = $this->generate_front_page_cache_key();
-		} else if ( $this->is_blog_page( $page_id ) ) {
+		} elseif ( $this->is_blog_page( $page_id ) ) {
 			$the_id = 'blog_' . $page_id;
-		} else if ( $this->is_singular() ) {
+		} elseif ( $this->is_singular() ) {
 			if ( $this->is_page( $page_id ) ) {
 				$the_id = 'page_' . $page_id;
-			} else if ( $this->is_single( $page_id ) ) {
+			} elseif ( $this->is_single( $page_id ) ) {
 				$the_id = 'post_' . $page_id;
-			} else if ( $this->is_attachment( $page_id ) ) {
+			} elseif ( $this->is_attachment( $page_id ) ) {
 				$the_id = 'attach_' . $page_id;
 			} else {
 				//* Other.
 				$the_id = 'singular_' . $page_id;
 			}
-		} else if ( $this->is_search() ) {
+		} elseif ( $this->is_search() ) {
 			$query = '';
 
 			if ( function_exists( 'get_search_query' ) ) {
@@ -292,7 +309,7 @@
 			}
 
 			$the_id = $page_id . '_s_' . $query;
-		} else if ( $this->is_archive() ) {
+		} elseif ( $this->is_archive() ) {
 			if ( $this->is_category() || $this->is_tag() || $this->is_tax() ) {
 
 				if ( empty( $t ) ) {
@@ -307,9 +324,9 @@
 				if ( $this->is_tax() )
 					$the_id = 'archives_' . $the_id;
 
-			} else if ( $this->is_author() ) {
+			} elseif ( $this->is_author() ) {
 				$the_id = 'author_' . $page_id;
-			} else if ( $this->is_date() ) {
+			} elseif ( $this->is_date() ) {
 				$post = get_post();
 
 				if ( $post && isset( $post->post_date ) ) {
@@ -317,9 +334,9 @@
 
 					if ( $this->is_year() ) {
 						$the_id .= 'year_' . mysql2date( 'y', $date, false );
-					} else if ( $this->is_month() ) {
+					} elseif ( $this->is_month() ) {
 						$the_id .= 'month_' . mysql2date( 'm_y', $date, false );
-					} else if ( $this->is_day() ) {
+					} elseif ( $this->is_day() ) {
 						//* Day. The correct notation.
 						$the_id .= 'day_' . mysql2date( 'd_m_y', $date, false );
 					}
@@ -373,19 +390,30 @@
 		if ( empty( $the_id ) )
 			$the_id = 'noob_' . $page_id . '_' . $t;
 
-		global $blog_id;
-
-		$locale = strtolower( get_locale() );
-
 		/**
 		 * This should be at most 25 chars. Unless the $blog_id is higher than 99,999,999.
 		 * Then some cache keys will conflict on every 10th blog ID from eachother which post something on the same day..
 		 * On the day archive. With the same description setting (short).
 		 */
-		return $cached_id[$page_id][$taxonomy][$type] = $the_id . '_' . $blog_id . '_' . $locale;
+		return $cached_id[ $page_id ][ $taxonomy ] = $this->add_cache_key_suffix( $the_id );
 	}
 
 	/**
+	 * Adds cache key suffix based on blog id and locale.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @return string the cache key.
+	 */
+	protected function add_cache_key_suffix( $key ) {
+		global $blog_id;
+
+		$locale = strtolower( get_locale() );
+
+		return $key . '_' . $blog_id . '_' . $locale;
+	}
+
+	/**
 	 * Returns the front page partial transient key.
 	 *
 	 * @param string $type
@@ -395,10 +423,11 @@
 	public function generate_front_page_cache_key( $type = '' ) {
 
 		if ( empty( $type ) ) {
-			if ( $this->has_page_on_front() )
+			if ( $this->has_page_on_front() ) {
 				$type = 'page';
-			else
+			} else {
 				$type = 'blog';
+			}
 		} else {
 			$type = esc_sql( $type );
 		}
@@ -423,12 +452,13 @@
 		if ( false !== strpos( $taxonomy, '_' ) ) {
 			$taxonomy_name = explode( '_', $taxonomy );
 			if ( is_array( $taxonomy_name ) ) {
-				foreach ( $taxonomy_name as $name )
+				foreach ( $taxonomy_name as $name ) {
 					if ( mb_strlen( $name ) >= 3 ) {
 						$the_id .= mb_substr( $name, 0, 3 ) . '_';
 					} else {
-						$the_id = strtolower( $name ) . '_';
+						$the_id = $name . '_';
 					}
+				}
 			}
 		}
 
@@ -504,13 +534,17 @@
 	 * Checks whether the permalink structure is updated.
 	 *
 	 * @since 2.3.0
+	 * @since 2.7.0 Added admin referer check.
 	 *
 	 * @return bool Whether if sitemap transient is deleted.
 	 */
 	public function delete_sitemap_transient_permalink_updated() {
 
-		if ( isset( $_POST['permalink_structure'] ) || isset( $_POST['category_base'] ) )
+		if ( isset( $_POST['permalink_structure'] ) || isset( $_POST['category_base'] ) ) {
+			check_admin_referer( 'update-permalink' );
+
 			return $this->delete_sitemap_transient();
+		}
 
 		return false;
 	}
@@ -541,9 +575,9 @@
 	 * @param string $old_option The previous blog description option.
 	 * @return string Previous option.
 	 */
-	public function delete_auto_description_blog_transient( $old_option ) {
+	public function delete_auto_description_frontpage_transient( $old_option ) {
 
-		$this->setup_auto_description_transient( (int) get_option( 'page_for_posts' ) );
+		$this->setup_auto_description_transient( $this->get_the_front_page_ID(), '', 'frontpage' );
 
 		delete_transient( $this->auto_description_transient );
 
@@ -600,11 +634,19 @@
 	 * Delete transient for the Theme doing it Right bool on special requests.
 	 *
 	 * @since 2.5.2
+	 * @since 2.7.0
 	 *
-	 * @return bool true
+	 * @param string|object $value The theme directory stylesheet location, or either WP_Theme/WP_Upgrader instance.
+	 * @param array|object|null $options If set, the update options array or the Old theme WP_Theme instance.
+	 * @return bool True on success, false on failure.
 	 */
-	public function delete_theme_dir_transient() {
+	public function delete_theme_dir_transient( $value = null, $options = null ) {
 
+		if ( isset( $options['type'] ) ) {
+			if ( 'theme' !== $options['type'] )
+				return false;
+		}
+
 		delete_transient( $this->theme_doing_it_right_transient );
 
 		return true;
@@ -611,26 +653,23 @@
 	}
 
 	/**
-	 * Sets transient for Theme doing it Right
+	 * Sets transient for Theme doing it Right.
 	 *
 	 * @since 2.5.2
+	 * @since 2.7.0 Will always set "doing it wrong" transient, even if it was "doing it right" earlier.
 	 *
+	 * @NOTE: Ignores transient debug constant.
+	 *
 	 * @param bool $doing_it_right
 	 */
-	public function set_theme_dir_transient( $dir = '' ) {
+	public function set_theme_dir_transient( $dir = null ) {
 
-		if ( is_bool( $dir ) && false === get_transient( $this->theme_doing_it_right_transient ) ) {
+		if ( is_bool( $dir ) && ( false === $dir || false === get_transient( $this->theme_doing_it_right_transient ) ) ) {
 
 			//* Convert $dir to string 1 or 0 as transients can be false on failure.
 			$dir = $dir ? '1' : '0';
 
-			/**
-			 * Expiration time, 3 days.
-			 * 60s * 60m * 24d * 3d
-			 */
-			$expiration = DAY_IN_SECONDS * 3;
-
-			set_transient( $this->theme_doing_it_right_transient, $dir, $expiration );
+			set_transient( $this->theme_doing_it_right_transient, $dir, 0 );
 		}
 
 	}
@@ -656,5 +695,4 @@
 
 		return $flushed = true;
 	}
-
 }
Index: inc/deprecated/deprecated.class.php
===================================================================
--- inc/deprecated/deprecated.class.php	(revision 1475679)
+++ inc/deprecated/deprecated.class.php	(working copy)
@@ -16,6 +16,8 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * Deprecation class.
  * Contains all deprecated functions. Is autoloaded.
@@ -25,130 +27,25 @@
 class The_SEO_Framework_Deprecated extends AutoDescription_Feed {
 
 	/**
-	 * Constructor. Load parent constructor.
+	 * Unserializing instances of this class is forbidden.
 	 */
-	public function __construct() {
-		parent::__construct();
-	}
+	private function __wakeup() { }
 
 	/**
-	 * Return option from the options table and cache result.
-	 *
-	 * @since 2.0.0
-	 *
-	 * @deprecated
-	 * @since 2.3.4
+	 * Handle unapproachable invoked methods.
 	 */
-	public function autodescription_get_option( $key, $setting = null, $use_cache = true ) {
-		$this->_deprecated_function( 'AutoDescription_Adminpages::' . __FUNCTION__, '2.3.4', 'AutoDescription_Adminpages::the_seo_framework_get_option()' );
-
-		return $this->the_seo_framework_get_option( $key, $setting, $use_cache );
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
 	}
 
 	/**
-	 * Enqueues JS in the admin footer
-	 *
-	 * @since 2.1.9
-	 *
-	 * @deprecated
-	 * @since 2.3.3
-	 *
-	 * @param $hook the current page
+	 * Constructor. Loads parent constructor.
 	 */
-	public function enqueue_javascript( $hook ) {
-		$this->_deprecated_function( 'AutoDescription_Admin_Init::' . __FUNCTION__, '2.3.3', 'AutoDescription_Admin_Init::enqueue_admin_scripts()' );
-
-		return $this->enqueue_admin_scripts( $hook );
+	public function __construct() {
+		parent::__construct();
 	}
 
 	/**
-	 * Enqueues CSS in the admin header
-	 *
-	 * @since 2.1.9
-	 *
-	 * @deprecated
-	 * @since 2.3.3
-	 *
-	 * @param $hook the current page
-	 */
-	public function enqueue_css( $hook ) {
-		$this->_deprecated_function( 'AutoDescription_Admin_Init::' . __FUNCTION__, '2.3.3', 'AutoDescription_Admin_Init::enqueue_admin_scripts()' );
-
-		return $this->enqueue_admin_scripts( $hook );
-	}
-
-	/**
-	 * Setup var for sitemap transient.
-	 *
-	 * @since 2.2.9
-	 *
-	 * @deprecated
-	 * @since 2.3.3
-	 */
-	public function fetch_sitemap_transient_name() {
-		$this->_deprecated_function( 'AutoDescription_Transients::' . __FUNCTION__, '2.3.3', 'AutoDescription_Transients::$sitemap_transient' );
-
-		return $this->sitemap_transient;
-	}
-
-	/**
-	 * Delete Sitemap transient on post save.
-	 *
-	 * @since 2.2.9
-	 *
-	 * @deprecated
-	 * @since 2.3.3
-	 */
-	public function delete_sitemap_transient_post( $post_id ) {
-		$this->_deprecated_function( 'AutoDescription_Transients::' . __FUNCTION__, '2.3.3', 'AutoDescription_Transients::delete_sitemap_transient_post()' );
-
-		return $this->delete_transients_post( $post_id );
-	}
-
-	/**
-	 * Helper function for Doing it Wrong
-	 *
-	 * @since 2.2.4
-	 *
-	 * @deprecated
-	 * @since 2.3.0
-	 */
-	public function autodescription_version( $version = '' ) {
-		$this->_deprecated_function( 'The_SEO_Framework_Load::' . __FUNCTION__, '2.3.0', 'The_SEO_Framework_Load::the_seo_framework_version()' );
-
-		return $this->the_seo_framework_version( $version );
-	}
-
-	/**
-	 * Include the necessary sortable metabox scripts.
-	 *
-	 * @since 2.2.2
-	 *
-	 * @deprecated
-	 * @since 2.3.5
-	 */
-	public function scripts() {
-		$this->_deprecated_function( 'AutoDescription_Adminpages::' . __FUNCTION__, '2.3.5', 'AutoDescription_Adminpages::metabox_scripts()' );
-
-		return $this->metabox_scripts();
-	}
-
-	/**
-	 * Setup var for sitemap transient on init/admin_init.
-	 *
-	 * @since 2.3.3
-	 * @deprecated
-	 * @since 2.3.3
-	 * Oops.
-	 */
-	public function setup_transient_names_init() {
-		$this->_deprecated_function( 'AutoDescription_Transients::' . __FUNCTION__, '2.3.3', 'AutoDescription_Transients::setup_transient_names()' );
-
-		$this->setup_transient_names();
-		return false;
-	}
-
-	/**
 	 * Helper function for allowed post/page screens where this plugin is active.
 	 *
 	 * @param array $screens The allowed screens
@@ -386,6 +283,9 @@
 	 * @since 2.6.1
 	 * @access private
 	 *
+	 * @deprecated
+	 * @since 2.6.1
+	 *
 	 * @return bool
 	 *
 	 * @thanks StudioPress (http://www.studiopress.com/) for some code.
@@ -406,7 +306,7 @@
 		);
 
 		if ( isset( $plugins_check ) ) {
-			$this->_deprecated_function( 'the_seo_framework_detect_seo_plugins', 'the_seo_framework_conflicting_plugins', '2.6.1' );
+			$this->_deprecated_function( 'the_seo_framework_detect_seo_plugins', '2.6.1', 'the_seo_framework_conflicting_plugins' );
 			return $this->detect_plugin( $plugins_check );
 		}
 
@@ -427,6 +327,9 @@
 	 * @staticvar bool $has_plugin
 	 * @since 2.2.5
 	 *
+	 * @deprecated
+	 * @since 2.6.1
+	 *
 	 * @return bool $has_plugin one of the plugins has been found.
 	 */
 	public function has_og_plugin() {
@@ -446,7 +349,7 @@
 		);
 
 		if ( isset( $plugins_check ) ) {
-			$this->_deprecated_function( 'the_seo_framework_detect_og_plugins', 'the_seo_framework_conflicting_plugins', '2.6.1' );
+			$this->_deprecated_function( 'the_seo_framework_detect_og_plugins', '2.6.1', 'the_seo_framework_conflicting_plugins' );
 			return $this->detect_plugin( $plugins_check );
 		}
 
@@ -465,7 +368,7 @@
 	 * @return bool
 	 */
 	public function has_sitemap_plugin() {
-		$this->_deprecated_function( 'AutoDescription_Detect::' . __FUNCTION__, 'AutoDescription_Detect::detect_sitemap_plugin', '2.6.1' );
+		$this->_deprecated_function( 'AutoDescription_Detect::' . __FUNCTION__, '2.6.1', 'AutoDescription_Detect::detect_sitemap_plugin' );
 
 		return $this->detect_sitemap_plugin();
 	}
@@ -484,7 +387,7 @@
 	 */
 	public function get_current_post_type( $public = true ) {
 
-		$this->_deprecated_function( 'AutoDescription_Detect::' . __FUNCTION__, 'AutoDescription_Detect::get_supported_post_type', '2.6.2' );
+		$this->_deprecated_function( 'AutoDescription_Detect::' . __FUNCTION__, '2.6.2', 'AutoDescription_Detect::get_supported_post_type' );
 
 		static $post_type = null;
 
@@ -534,7 +437,7 @@
 	 */
 	public function wpmudev_domainmap_flush_fix( $options_saved = false, $flush_now = true ) {
 
-		$this->_deprecated_function( 'AutoDescription_Sitemaps::' . __FUNCTION__, '', '2.6.2' );
+		$this->_deprecated_function( 'AutoDescription_Sitemaps::' . __FUNCTION__, '2.6.2' );
 
 		if ( $this->pretty_permalinks && $this->is_domainmapping_active() ) {
 			if ( $options_saved || 'init' === current_action() ) {
@@ -590,7 +493,7 @@
 	 */
 	public function get_relative_url( $post = null, $external = false, $depr = null ) {
 
-		$this->_deprecated_function( 'AutoDescription_Generate_Url::' . __FUNCTION__, 'AutoDescription_Generate_Url::build_singular_relative_url()', '2.6.5' );
+		$this->_deprecated_function( 'AutoDescription_Generate_Url::' . __FUNCTION__, '2.6.5', 'AutoDescription_Generate_Url::build_singular_relative_url()' );
 
 		if ( isset( $depr ) ) {
 			$post_id = $depr;
@@ -598,7 +501,7 @@
 			if ( is_object( $post ) ) {
 				if ( isset( $post->ID ) )
 					$post_id = $post->ID;
-			} else if ( is_scalar( $post ) ) {
+			} elseif ( is_scalar( $post ) ) {
 				$post_id = (int) $post;
 			}
 		}
@@ -612,7 +515,7 @@
 
 		if ( $external || ! $this->is_home() ) {
 			$permalink = get_permalink( $post_id );
-		} else if ( ! $external ) {
+		} elseif ( ! $external ) {
 			global $wp;
 
 			if ( isset( $wp->request ) )
@@ -643,7 +546,7 @@
 	 */
 	public function the_url_path_default_permalink_structure( $post = null, $paged = false, $paged_plural = true ) {
 
-		$this->_deprecated_function( 'AutoDescription_Generate_Url::' . __FUNCTION__, 'AutoDescription_Generate_Url::build_singular_relative_url()', '2.6.5' );
+		$this->_deprecated_function( 'AutoDescription_Generate_Url::' . __FUNCTION__, '2.6.5' , 'AutoDescription_Generate_Url::build_singular_relative_url()' );
 
 		//* Don't slash it.
 		$this->url_slashit = false;
@@ -655,9 +558,9 @@
 			if ( is_object( $object ) ) {
 				if ( $this->is_category() ) {
 					$path = '?cat=' . $object->term_id;
-				} else if ( $this->is_tag() ) {
+				} elseif ( $this->is_tag() ) {
 					$path = '?tag=' . $object->name;
-				} else if ( $this->is_date() ) {
+				} elseif ( $this->is_date() ) {
 					global $wp_query;
 
 					$query = $wp_query->query;
@@ -667,11 +570,11 @@
 					$day = $query->day ? '&day=' . $query->day : '';
 
 					$path = '?year=' . $year . $month . $day;
-				} else if ( $this->is_author() ) {
+				} elseif ( $this->is_author() ) {
 					$path = '?author=' . $object->author_name;
-				} else if ( $this->is_tax() ) {
+				} elseif ( $this->is_tax() ) {
 					$path = '?taxonomy=' . $object->taxonomy . '&term=' . $object->slug;
-				} else if ( isset( $object->query_var ) && $object->query_var ) {
+				} elseif ( isset( $object->query_var ) && $object->query_var ) {
 					$path = '?' . $object->query_var . '=' . $object->slug;
 				} else {
 					$path = '?p=' . $object->ID;
@@ -689,7 +592,7 @@
 			if ( isset( $post ) ) {
 				if ( is_object( $post ) && isset( $post->ID ) ) {
 					$id = $post->ID;
-				} else if ( is_scalar( $post ) ) {
+				} elseif ( is_scalar( $post ) ) {
 					$id = $post;
 				}
 			}
@@ -713,13 +616,13 @@
 	 * @since 2.3.0
 	 *
 	 * @deprecated
-	 * @since 2.6.5
+	 * @since 2.6.6
 	 *
 	 * @return string The SEO Framework version.
 	 */
 	public function the_seo_framework_version( $version = '' ) {
 
-		$this->_deprecated_function( 'AutoDescription_Load::' . __FUNCTION__, '', '2.6.6' );
+		$this->_deprecated_function( 'AutoDescription_Load::' . __FUNCTION__, '2.6.6' );
 
 		$output = $version ? sprintf( __( '%s of The SEO Framework', 'autodescription' ), esc_attr( $version ) ) : '';
 
@@ -726,4 +629,277 @@
 		return $output;
 	}
 
+
+	/**
+	 * HomePage Metabox General Tab Output.
+	 *
+	 * @since 2.6.0
+	 * @see $this->homepage_metabox() Callback for HomePage Settings box.
+	 *
+	 * @deprecated
+	 * @since 2.7.0
+	 */
+	public function homepage_metabox_general() {
+		$this->_deprecated_function( 'AutoDescription_Metaboxes::' . __FUNCTION__, '2.7.0', 'AutoDescription_Metaboxes::homepage_metabox_general_tab()' );
+		$this->get_view( 'metaboxes/homepage-metabox', array(), 'general' );
+	}
+
+	/**
+	 * HomePage Metabox Additions Tab Output.
+	 *
+	 * @since 2.6.0
+	 * @see $this->homepage_metabox() Callback for HomePage Settings box.
+	 *
+	 * @deprecated
+	 * @since 2.7.0
+	 */
+	public function homepage_metabox_additions() {
+		$this->_deprecated_function( 'AutoDescription_Metaboxes::' . __FUNCTION__, '2.7.0', 'AutoDescription_Metaboxes::homepage_metabox_additions_tab()' );
+		$this->get_view( 'metaboxes/homepage-metabox', array(), 'additions' );
+	}
+
+	/**
+	 * HomePage Metabox Robots Tab Output
+	 *
+	 * @since 2.6.0
+	 * @see $this->homepage_metabox() Callback for HomePage Settings box.
+	 *
+	 * @deprecated
+	 * @since 2.7.0
+	 */
+	public function homepage_metabox_robots() {
+		$this->_deprecated_function( 'AutoDescription_Metaboxes::' . __FUNCTION__, '2.7.0', 'AutoDescription_Metaboxes::homepage_metabox_robots_tab()' );
+		$this->get_view( 'metaboxes/homepage-metabox', array(), 'robots' );
+	}
+
+	/**
+	 * Delete transient for the automatic description for blog on save request.
+	 * Returns old option, since that's passed for sanitation within WP Core.
+	 *
+	 * @since 2.3.3
+	 *
+	 * @deprecated
+	 * @since 2.7.0
+	 *
+	 * @param string $old_option The previous blog description option.
+	 * @return string Previous option.
+	 */
+	public function delete_auto_description_blog_transient( $old_option ) {
+
+		$this->_deprecated_function( 'AutoDescription_Transients::' . __FUNCTION__, '2.7.0', 'AutoDescription_Transients::delete_auto_description_frontpage_transient()' );
+
+		$this->setup_auto_description_transient( $this->get_the_front_page_ID(), '', 'frontpage' );
+
+		delete_transient( $this->auto_description_transient );
+
+		return $old_option;
+	}
+
+	/**
+	 * Add term meta data into options table of the term.
+	 * Adds separated database options for terms, as the terms table doesn't allow for addition.
+	 *
+	 * Applies filters array the_seo_framework_term_meta_defaults : Array of default term SEO options
+	 * Applies filters mixed the_seo_framework_term_meta_{field} : Override filter for specifics.
+	 * Applies filters array the_seo_framework_term_meta : Override output for term or taxonomy.
+	 *
+	 * @since 2.1.8
+	 *
+	 * @deprecated silently.
+	 * @since WordPress 4.4.0
+	 * @since The SEO Framework 2.7.0
+	 *
+	 * @param object $term     Database row object.
+	 * @param string $taxonomy Taxonomy name that $term is part of.
+	 * @return object $term Database row object.
+	 */
+	public function get_term_filter( $term, $taxonomy ) {
+
+		//* Do nothing, if $term is not an object.
+		if ( ! is_object( $term ) )
+			return $term;
+
+		/**
+		 * No need to process this data outside of the Terms' scope.
+		 * @since 2.6.0
+		 */
+		if ( false === is_admin() && false === is_archive() )
+			return $term;
+
+		/**
+		 * No need to process this after the data has already been output.
+		 * @since 2.6.0
+		 */
+		if ( did_action( 'the_seo_framework_do_after_output' ) )
+			return $term;
+
+		/**
+		 * Do nothing if called in the context of creating a term via an Ajax call to prevent data conflict.
+		 * @since 2.1.8
+		 *
+		 * @since 2.6.0 delay did_action call as it's a heavy array call.
+		 */
+		if ( defined( 'DOING_AJAX' ) && DOING_AJAX && did_action( 'wp_ajax_add-tag' ) )
+			return $term;
+
+		$db = get_option( 'autodescription-term-meta' );
+		$term_meta = isset( $db[$term->term_id] ) ? $db[$term->term_id] : array();
+
+		$term->admeta = wp_parse_args( $term_meta, $this->get_term_meta_defaults() );
+
+		//* Sanitize term meta
+		foreach ( $term->admeta as $field => $value ) {
+
+			/**
+			 * Trim and sanitize the title beforehand.
+			 * @since 2.5.0
+			 */
+			if ( 'doctitle' === $field )
+				$value = trim( strip_tags( $value ) );
+
+			/**
+			 * Trim and sanitize the description beforehand.
+			 * @since 2.5.0
+			 */
+			if ( 'description' === $field )
+				$value = $this->s_description( $value );
+
+			/**
+			 * @param object $term The Term object.
+			 * @param string $taxonomy The Taxonomy name.
+			 */
+			$term->admeta[$field] = (string) apply_filters( "the_seo_framework_term_meta_{$field}", stripslashes( wp_kses_decode_entities( $value ) ), $term, $taxonomy );
+		}
+
+		/**
+		 * @param object $term The Term object.
+		 * @param array $taxonomy The Taxonomy name.
+		 */
+		$term->admeta = (array) apply_filters( 'the_seo_framework_term_meta', $term->admeta, $term, $taxonomy );
+
+		return $term;
+	}
+
+	/**
+	 * Adds The SEO Framework term meta data to functions that return multiple terms.
+	 *
+	 * @since 2.0.0
+	 *
+	 * @deprecated silently.
+	 * @since WordPress 4.4.0
+	 * @since The SEO Framework 2.7.0
+	 *
+	 * @param array  $terms    Database row objects.
+	 * @param string $taxonomy Taxonomy name that $terms are part of.
+	 * @return array $terms Database row objects.
+	 */
+	public function get_terms_filter( array $terms, $taxonomy ) {
+
+		foreach ( $terms as $term )
+			$term = $this->get_term_filter( $term, $taxonomy );
+
+		return $terms;
+	}
+
+	/**
+	 * Save taxonomy meta data.
+	 * Fires when a user edits and saves a taxonomy.
+	 *
+	 * @since 2.1.8
+	 *
+	 * @deprecated silently.
+	 * @since WordPress 4.4.0
+	 * @since The SEO Framework 2.7.0
+	 *
+	 * @param integer $term_id Term ID.
+	 * @param integer $tt_id   Term Taxonomy ID.
+	 * @return void Early on AJAX call.
+	 */
+	public function taxonomy_seo_save( $term_id, $tt_id ) {
+
+		if ( defined( 'DOING_AJAX' ) && DOING_AJAX )
+			return;
+
+		$term_meta = (array) get_option( 'autodescription-term-meta' );
+
+		$term_meta[$term_id] = isset( $_POST['autodescription-meta'] ) ? (array) $_POST['autodescription-meta'] : array();
+
+		//* Pass through wp_kses if not super admin.
+		if ( ! current_user_can( 'unfiltered_html' ) && isset( $term_meta[$term_id]['archive_description'] ) )
+			$term_meta[$term_id]['archive_description'] = wp_kses( $term_meta[$term_id]['archive_description'] );
+
+		update_option( 'autodescription-term-meta', $term_meta );
+
+	}
+
+	/**
+	 * Delete term meta data.
+	 * Fires when a user deletes a term.
+	 *
+	 * @since 2.1.8
+	 *
+	 * @deprecated silently.
+	 * @since WordPress 4.4.0
+	 * @since The SEO Framework 2.7.0
+	 *
+	 * @param integer $term_id Term ID.
+	 * @param integer $tt_id   Taxonomy Term ID.
+	 */
+	public function term_meta_delete( $term_id, $tt_id ) {
+
+		$term_meta = (array) get_option( 'autodescription-term-meta' );
+
+		unset( $term_meta[$term_id] );
+
+		update_option( 'autodescription-term-meta', (array) $term_meta );
+
+	}
+
+	/**
+	 * Faster way of doing an in_array search compared to default PHP behavior.
+	 * @NOTE only to show improvement with large arrays. Might slow down with small arrays.
+	 * @NOTE can't do type checks. Always assume the comparing value is a string.
+	 *
+	 * @since 2.5.2
+	 * @deprecated
+	 * @since 2.7.0
+	 *
+	 * @param string|array $needle The needle(s) to search for
+	 * @param array $array The single dimensional array to search in.
+	 * @return bool true if value is in array.
+	 */
+	public function in_array( $needle, $array ) {
+
+		$this->_deprecated_function( 'AutoDescription_Core::' . __FUNCTION__, '2.7.0', 'in_array()' );
+
+		$array = array_flip( $array );
+
+		if ( is_string( $needle ) ) {
+			if ( isset( $array[ $needle ] ) )
+				return true;
+		} elseif ( is_array( $needle ) ) {
+			foreach ( $needle as $str ) {
+				if ( isset( $array[ $str ] ) )
+					return true;
+			}
+		}
+
+		return false;
+	}
+
+	/**
+	 * Fetches posts with exclude_local_search option on
+	 *
+	 * @since 2.1.7
+	 * @since 2.7.0 Deprecated.
+	 * @deprecated
+	 *
+	 * @return array Excluded Post IDs
+	 */
+	public function exclude_search_ids() {
+
+		$this->_deprecated_function( 'AutoDescription_Search::' . __FUNCTION__, '2.7.0', 'AutoDescription_Search::get_excluded_search_ids()' );
+
+		return $this->get_excluded_search_ids();
+	}
 }
Index: inc/deprecated/deprecated.php
===================================================================
--- inc/deprecated/deprecated.php	(revision 1475679)
+++ inc/deprecated/deprecated.php	(working copy)
@@ -16,14 +16,79 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * This file contains most functions that have been deprecated.
  *
  * @since 2.1.6
+ * @since 2.3.5 Emptied. (~2.5 months later )
+ * @since 2.6.2 Emptied. (~6 months later)
+ */
+
+/**
+ * Fetch an option from The SEO Framework.
  *
- * Emptied.
- * @since 2.3.5 (~2.5 months later )
+ * @since 2.2.9
  *
- * Emptied.
- * @since 2.6.2 (~6 months later)
+ * @deprecated
+ * @since 2.7.0
+ *
+ * @param string  $key       Option name.
+ * @param boolean $use_cache Optional. Whether to use the cache value or not. Defaults to true.
+ * @return mixed The option value.
  */
+function tsf_get_option( $key, $use_cache = true ) {
+
+	$theseoframework = the_seo_framework();
+
+	if ( isset( $theseoframework ) )
+		$theseoframework->_deprecated_function( __FUNCTION__, '2.7.0', 'the_seo_framework_get_option()' );
+
+	return the_seo_framework_get_option( $key, $use_cache );
+}
+
+/**
+ * Fetch the The SEO Framework Options pagehook.
+ *
+ * @since 2.2.9
+ *
+ * @deprecated
+ * @since 2.7.0
+ *
+ * @return string|null The pagehook.
+ */
+function tsf_options_pagehook() {
+
+	$theseoframework = the_seo_framework();
+
+	if ( isset( $theseoframework ) )
+		$theseoframework->_deprecated_function( __FUNCTION__, '2.7.0', 'the_seo_framework_options_pagehook()' );
+
+	return the_seo_framework_options_pagehook();
+}
+
+
+/**
+ * Compare the WordPress version to the input one.
+ *
+ * @since 2.2.9
+ *
+ * @deprecated
+ * @since 2.7.0
+ *
+ * @param string $version The 3 point version compare
+ * @param string $compare The PHP comparison operator.
+ * @return bool true if Version passes comparison.
+ */
+function tsf_wp_version( $version = '4.3.0', $compare = '>=' ) {
+
+	$theseoframework = the_seo_framework();
+
+	if ( isset( $theseoframework ) ) {
+		$theseoframework->_deprecated_function( __FUNCTION__, '2.7.0', 'AutoDescription_Detect::wp_version()' );
+		return $theseoframework->wp_version( $version, $compare );
+	}
+
+	return null;
+}
Index: inc/functions/compat.php
===================================================================
--- inc/functions/compat.php	(revision 1475679)
+++ inc/functions/compat.php	(working copy)
@@ -1,4 +1,7 @@
 <?php
+
+defined( 'ABSPATH' ) or die;
+
 /**
  * Returns whether PCRE/u (PCRE_UTF8 modifier) is available for use.
  *
@@ -39,10 +42,9 @@
  * @uses strlen
  * @return mb_strlen
  *
- * @since 1.3.0
+ * @since 1.3.0 The SEO Framework
+ * @since 4.2.0 WordPress Core
  *
- * Rewritten
- * @since 2.3.5
  */
 if ( ! function_exists( 'mb_strlen' ) ) :
 	function mb_strlen( $str, $encoding = null ) {
@@ -105,74 +107,6 @@
 /**
  * Extended charset support
  *
- * @uses substr
- * @return mb_substr
- *
- * @since 1.3.0
- *
- * Rewritten
- * @since 2.3.5
- */
-if ( ! function_exists( 'mb_substr' ) ) :
-	function mb_substr( $str, $start, $length = null, $encoding = null ) {
-		return _mb_substr( $str, $start, $length, $encoding );
-	}
-endif;
-
-/*
- * Only understands UTF-8 and 8bit.  All other character sets will be treated as 8bit.
- * For $encoding === UTF-8, the $str input is expected to be a valid UTF-8 byte sequence.
- * The behavior of this function for invalid inputs is undefined.
- */
-if ( ! function_exists( '_mb_substr' ) ) :
-	function _mb_substr( $str, $start, $length = null, $encoding = null ) {
-		if ( null === $encoding ) {
-			$encoding = get_option( 'blog_charset' );
-		}
-
-		// The solution below works only for UTF-8,
-		// so in case of a different charset just use built-in substr()
-		if ( ! in_array( $encoding, array( 'utf8', 'utf-8', 'UTF8', 'UTF-8' ) ) ) {
-			return is_null( $length ) ? substr( $str, $start ) : substr( $str, $start, $length );
-		}
-
-		if ( _wp_can_use_pcre_u() ) {
-			// Use the regex unicode support to separate the UTF-8 characters into an array
-			preg_match_all( '/./us', $str, $match );
-			$chars = is_null( $length ) ? array_slice( $match[0], $start ) : array_slice( $match[0], $start, $length );
-			return implode( '', $chars );
-		}
-
-		$regex = '/(
-			  [\x00-\x7F]                  # single-byte sequences   0xxxxxxx
-			| [\xC2-\xDF][\x80-\xBF]       # double-byte sequences   110xxxxx 10xxxxxx
-			| \xE0[\xA0-\xBF][\x80-\xBF]   # triple-byte sequences   1110xxxx 10xxxxxx * 2
-			| [\xE1-\xEC][\x80-\xBF]{2}
-			| \xED[\x80-\x9F][\x80-\xBF]
-			| [\xEE-\xEF][\x80-\xBF]{2}
-			| \xF0[\x90-\xBF][\x80-\xBF]{2} # four-byte sequences   11110xxx 10xxxxxx * 3
-			| [\xF1-\xF3][\x80-\xBF]{3}
-			| \xF4[\x80-\x8F][\x80-\xBF]{2}
-		)/x';
-
-		$chars = array( '' ); // Start with 1 element instead of 0 since the first thing we do is pop
-		do {
-			// We had some string left over from the last round, but we counted it in that last round.
-			array_pop( $chars );
-
-			// Split by UTF-8 character, limit to 1000 characters (last array element will contain the rest of the string)
-			$pieces = preg_split( $regex, $str, 1000, PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY );
-
-			$chars = array_merge( $chars, $pieces );
-		} while ( count( $pieces ) > 1 && $str = array_pop( $pieces ) ); // If there's anything left over, repeat the loop.
-
-		return join( '', array_slice( $chars, $start, $length ) );
-	}
-endif;
-
-/**
- * Extended charset support
- *
  * @see _mb_strpos()
  *
  * @param string		$haystack	The string to search in.
@@ -196,7 +130,7 @@
  * For $encoding === UTF-8, the $str input is expected to be a valid UTF-8 byte sequence.
  * The behavior of this function for invalid inputs is PHP compliant.
  *
- * @since 4.5.0
+ * @since 2.2.0 The SEO Framework
  * @license GLPv2 or later
  *
  * @param string		$haystack	The string to search in.
@@ -357,3 +291,52 @@
 		}
 	}
 endif;
+
+/**
+ * A wrapper for PHP's parse_url() function that handles edgecases in < PHP 5.4.7
+ *
+ * PHP 5.4.7 expanded parse_url()'s ability to handle non-absolute url's, including
+ * schemeless and relative url's with :// in the path, this works around those
+ * limitations providing a standard output on PHP 5.2~5.4+.
+ *
+ * Error suppression is used as prior to PHP 5.3.3, an E_WARNING would be generated
+ * when URL parsing failed.
+ *
+ * @since 2.7.0 The SEO Framework
+ * @since 4.4.0 WordPress Core
+ *
+ * @param string $url The URL to parse.
+ * @return bool|array False on failure; Array of URL components on success;
+ *                    See parse_url()'s return values.
+ */
+if ( ! function_exists( 'wp_parse_url' ) ) :
+	function wp_parse_url( $url ) {
+		$parts = @parse_url( $url );
+		if ( ! $parts ) {
+			// < PHP 5.4.7 compat, trouble with relative paths including a scheme break in the path
+			if ( '/' === $url[0] && false !== strpos( $url, '://' ) ) {
+				// Since we know it's a relative path, prefix with a scheme/host placeholder and try again
+				if ( ! $parts = @parse_url( 'placeholder://placeholder' . $url ) ) {
+					return $parts;
+				}
+				// Remove the placeholder values
+				unset( $parts['scheme'], $parts['host'] );
+			} else {
+				return $parts;
+			}
+		}
+
+		// < PHP 5.4.7 compat, doesn't detect schemeless URL's host field
+		if ( '//' === substr( $url, 0, 2 ) && ! isset( $parts['host'] ) ) {
+			$path_parts = explode( '/', substr( $parts['path'], 2 ), 2 );
+			$parts['host'] = $path_parts[0];
+			if ( isset( $path_parts[1] ) ) {
+				$parts['path'] = '/' . $path_parts[1];
+			} else {
+				unset( $parts['path'] );
+			}
+		}
+
+		return $parts;
+	}
+endif;
Index: inc/functions/optionsapi.php
===================================================================
--- inc/functions/optionsapi.php	(revision 1475679)
+++ inc/functions/optionsapi.php	(working copy)
@@ -16,26 +16,23 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
 /**
  * This file holds functions for easily extracting or interacting with data
  * from The SEO FrameWork.
  *
  * @since 2.2.5
- *
- * We could bombard it with every public function, but that's very time consuming.
- * I'll add a bunch of functions on 2nd dot (v.X.v) release. e.g. 2.3.0, 2.4.0, etc.
- *
- * This will allow version comparing more easily (as you'll know how many users
- * use v.X version through the WordPress plugin stats.).
- * Therefore reducing work for you.
  */
 
 /**
- * Load the class from cache.
+ * Loads the class from cache.
  * This is recommended using this above using 'new The_SEO_Framework_Load();'
  * It also checks if the class is callable in the first place.
  *
  * @since 2.2.5
+ *
+ * @return object The SEO Framework Facade class.
  */
 function the_seo_framework() {
 	return the_seo_framework_init();
@@ -42,12 +39,42 @@
 }
 
 /**
- * The SEO FrameWork version number
+ * Returns the facade class name from cache.
  *
- * Useful for version comparing
+ * CAUTION: If this is used before plugins_loaded priority 5, then the plugin
+ * will fail to load views.
  *
+ * @since 2.7.0
+ *
+ * @return string The SEO Framework class name.
+ */
+function the_seo_framework_class() {
+
+	static $class = null;
+
+	if ( isset( $class ) )
+		return $class;
+
+	return $class = get_class( the_seo_framework() );
+}
+
+/**
+ * Checks if The SEO FrameWork is active based on filter.
+ *
  * @since 2.2.5
  *
+ * @return bool true if SEO framework is active
+ */
+function the_seo_framework_active() {
+	return the_seo_framework_load();
+}
+
+/**
+ * Returns The SEO FrameWork version number.
+ * Useful for version comparing.
+ *
+ * @since 2.2.5
+ *
  * @return string|null The SEO Framework three point version number. (e.g. '2.2.5')
  */
 function the_seo_framework_version() {
@@ -59,13 +86,12 @@
 }
 
 /**
- * The SEO Framework dot version compare.
+ * Compares The SEO Framework dot versions.
  *
- * @param string version The two dot version: x.v
- *
  * @since 2.4.0
  *
- * @return bool False plugin inactive or version compare fails.
+ * @param string version The two dot version: x.v
+ * @return bool False plugin inactive or version compare yields negative results.
  */
 function the_seo_framework_dot_version( $version = '2.4' ) {
 
@@ -90,43 +116,13 @@
 }
 
 /**
- * Check if The SEO FrameWork is active based on global filter.
- *
- * @since 2.2.5
- *
- * @return bool true if SEO framework is active
- */
-function the_seo_framework_active() {
-	return the_seo_framework_load();
-}
-
-/**
- * Compare the WordPress version to the input one.
- *
- * @since 2.2.9
- *
- * @param string $version The 3 point version compare
- * @param string $compare The PHP comparison operator.
- *
- * @return bool true if Version passes comparison.
- */
-function tsf_wp_version( $version = '4.3.0', $compare = '>=' ) {
-	$theseoframework = the_seo_framework();
-
-	if ( isset( $theseoframework ) )
-		return $theseoframework->wp_version( $version, $compare );
-
-	return null;
-}
-
-/**
  * Fetch the The SEO Framework Options pagehook.
  *
- * @since 2.2.9
+ * @since 2.7.0
  *
  * @return string|null The pagehook.
  */
-function tsf_options_pagehook() {
+function the_seo_framework_options_pagehook() {
 
 	$theseoframework = the_seo_framework();
 
@@ -136,17 +132,17 @@
 	return null;
 }
 
+
 /**
  * Fetch an option from The SEO Framework.
  *
- * @since 2.2.9
+ * @since 2.7.0
  *
- * @param string  $key       Option name.
+ * @param string  $key Option name.
  * @param boolean $use_cache Optional. Whether to use the cache value or not. Defaults to true.
- *
  * @return mixed The option value.
  */
-function tsf_get_option( $key, $use_cache = true ) {
+function the_seo_framework_get_option() {
 
 	$theseoframework = the_seo_framework();
 
@@ -159,10 +155,9 @@
 /**
  * Fetch title from cache. Only works within Loop.
  *
- * @param string|null $title the previous title
- *
  * @since 2.4.2
  *
+ * @param string|null $title the previous title
  * @return string|null The current page title.
  */
 function the_seo_framework_title_from_cache( $title = null ) {
@@ -178,10 +173,9 @@
 /**
  * Fetch description from cache. Only works within Loop.
  *
- * @param bool $social Fetch social description.
- *
  * @since 2.4.2
  *
+ * @param bool $social Fetch social description.
  * @return string|null The current page description.
  */
 function the_seo_framework_description_from_cache( $social = false ) {
@@ -215,6 +209,7 @@
  * Whether we're on the SEO settings page.
  *
  * @since 2.6.0
+ * @since 2.7.0 No longer checks for $_GET requests. Only uses global $pagehook.
  *
  * @return bool
  */
@@ -223,7 +218,41 @@
 	$theseoframework = the_seo_framework();
 
 	if ( isset( $theseoframework ) )
-		return $theseoframework->is_seo_settings_page();
+		return $theseoframework->is_seo_settings_page( true );
 
 	return false;
 }
+
+/**
+ * Updates The SEO Framework site options.
+ *
+ * @since 2.7.0
+ *
+ * @return bool True on success. False on failure.
+ */
+function the_seo_framework_update_option( $new_option ) {
+
+	$theseoframework = the_seo_framework();
+
+	if ( isset( $theseoframework ) )
+		return $theseoframework->update_settings( $new_option );
+
+	return false;
+}
+
+/**
+ * Returns the parent slug name of The SEO Framework plugin.
+ *
+ * @since 2.7.0
+ *
+ * @return bool|string False on failure, the slug on success.
+ */
+function the_seo_framework_options_page_slug() {
+
+	$theseoframework = the_seo_framework();
+
+	if ( isset( $theseoframework ) )
+		return $theseoframework->seo_settings_page_slug;
+
+	return false;
+}
Index: inc/functions/upgrade.php
===================================================================
--- inc/functions/upgrade.php	(nonexistent)
+++ inc/functions/upgrade.php	(working copy)
@@ -0,0 +1,110 @@
+<?php
+/**
+ * The SEO Framework plugin
+ * Copyright (C) 2015 - 2016 Sybre Waaijer, CyberWire (https://cyberwire.nl/)
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 3 as published
+ * by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+defined( 'ABSPATH' ) or die;
+
+/**
+ * This file holds functions for upgrading the plugin.
+ * This file will only be called ONCE if the required version option is lower
+ * compared to The SEO Framework version constant.
+ *
+ * @since 2.7.0
+ * @access private
+ */
+
+add_action( 'admin_init', 'the_seo_framework_do_upgrade', 20 );
+/**
+ * Upgrade The SEO Framework to the latest version.
+ *
+ * Does an iteration of upgrades in order of upgrade appearance.
+ * Each called function will upgrade the version by its iteration.
+ *
+ * Only works on WordPress 4.4 and later to ensure and force maximum compatibility.
+ *
+ * @since 2.7.0
+ * @global int $wp_db_version
+ *
+ * @thanks StudioPress for some code.
+ */
+function the_seo_framework_do_upgrade() {
+
+	if ( get_option( 'the_seo_framework_upgraded_db_version' ) >= THE_SEO_FRAMEWORK_DB_VERSION )
+		return;
+
+	if ( ! the_seo_framework()->wp_version( '4.4', '>=' ) )
+		return;
+
+	global $wp_db_version;
+
+	//* If the WordPress Database hasn't been upgraded yet, make the user upgrade first.
+	if ( (int) get_option( 'db_version' ) !== $wp_db_version ) {
+		wp_safe_redirect( admin_url( 'upgrade.php?_wp_http_referer=' . urlencode( wp_unslash( $_SERVER['REQUEST_URI'] ) ) ) );
+		exit;
+	}
+
+	if ( get_option( 'the_seo_framework_upgraded_db_version' ) < '2701' )
+		the_seo_framework_do_upgrade_2701();
+
+	do_action( 'the_seo_framework_upgraded' );
+}
+
+add_action( 'the_seo_framework_upgraded', 'the_seo_framework_upgrade_to_current' );
+/**
+ * Upgrades the Database version to the latest version if all iterations have been
+ * executed. This ensure this file will no longer be required.
+ * This should run once after every plugin update.
+ *
+ * @since 2.7.0
+ */
+function the_seo_framework_upgrade_to_current() {
+	update_option( 'the_seo_framework_upgraded_db_version', THE_SEO_FRAMEWORK_DB_VERSION );
+}
+
+/**
+ * Upgrades term metadata for version 2701.
+ *
+ * @since 2.7.0
+ */
+function the_seo_framework_do_upgrade_2701() {
+
+	$term_meta = get_option( 'autodescription-term-meta' );
+
+	foreach ( (array) $term_meta as $term_id => $meta ) {
+		add_term_meta( $term_id, THE_SEO_FRAMEWORK_TERM_OPTIONS, $meta, true );
+	}
+
+	update_option( 'the_seo_framework_upgraded_db_version', '2701' );
+}
+
+/**
+ * Removes term metadata for version 2800
+ *
+ * @since 2.8.0
+ * @TODO planned.
+ */
+function the_seo_framework_do_upgrade_2800() {
+
+	//* Delete old values from database. Removes backwards compatibility.
+	// delete_option( 'autodescription-term-meta' );
+
+	//* Set this as upgrade notice:
+	// = 2.8.0 =
+	// This version deletes all old style metadata values. This removes backwards term meta data compatibility with The SEO Framework 2.6.5.2 or lower.
+
+	// update_option( 'the_seo_framework_upgraded_db_version', '2800' );
+}
Index: inc/views/debug/index.php
===================================================================
--- inc/views/debug/index.php	(nonexistent)
+++ inc/views/debug/index.php	(working copy)
@@ -0,0 +1,2 @@
+<?php
+//* We often discover what will do, by finding out what will not do; and probably he who never made a mistake never made a discovery - Samuel Smiles
Index: inc/views/debug/output.php
===================================================================
--- inc/views/debug/output.php	(nonexistent)
+++ inc/views/debug/output.php	(working copy)
@@ -0,0 +1,62 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+if ( $this->debug_output ) {
+	if ( $this->the_seo_framework_debug_hidden ) {
+		echo "\r\n<!--\r\n:: THE SEO FRAMEWORK DEBUG :: \r\n" . $this->debug_output . "\r\n:: / THE SEO FRAMEWORK DEBUG ::\r\n-->\r\n";
+	} else {
+
+		$id = $this->get_the_real_ID();
+		$mdash = ' &mdash; ';
+		$term = $this->is_archive() ? $this->fetch_the_term( $id ) : '';
+		$taxonomy = isset( $term->taxonomy ) ? $term->taxonomy : '';
+
+		//* This will return 'Page' on all non-archive types (except the home page)
+		$type = ! $this->is_archive() && $this->is_front_page( $id ) ? 'Front Page' : $this->get_the_term_name( $term );
+		$cache_key = $this->generate_cache_key( $this->get_the_real_ID(), $taxonomy );
+
+		if ( $this->is_admin() ) {
+			?>
+			<div style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 200px );min-height:700px;padding:0;margin:20px 20px 40px 180px;overflow:hidden;border:1px solid #ccc;border-radius:3px;line-height:18px">
+				<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px;">
+					SEO Debug Information
+					<?php
+					if ( $this->is_post_edit() || $this->is_term_edit() ) :
+						echo ' :: ';
+						echo 'Type: ' . esc_html( $type );
+						echo $mdash . 'ID: ' . esc_html( $id );
+						echo $mdash . 'Cache key: ' . esc_html( $cache_key );
+					endif;
+					?>
+				</h3>
+				<div style="position:absolute;bottom:0;right:0;left:0;top:39px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;z-index:9001">
+					<?php echo $this->debug_header_output(); ?>
+					<?php echo $this->debug_query_output(); ?>
+					<?php echo $this->debug_output; ?>
+				</div>
+			</div>
+			<?php
+		} else {
+			?>
+			<style type="text/css">.wp-ui-notification{color:#fff;background-color:#d54e21}.code.highlight{font-family:Consolas,Monaco,monospace;font-size:14px;}.theseoframework-debug h3{font-size:18px;margin:18px 0}</style>
+			<div class="theseoframework-debug" style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 80px );min-height:700px;padding:0;margin:40px;overflow:hidden;border:1px solid #ccc;border-radius:3px;line-height:18px">
+				<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px">
+					SEO Debug Information
+					<?php
+					echo ' :: ';
+					echo 'Type: ' . esc_html( $type );
+					echo $mdash . 'ID: ' . esc_html( $id );
+					echo $mdash . 'Cache key: ' . esc_html( $cache_key );
+					?>
+				</h3>
+				<div style="position:absolute;bottom:0;right:0;left:0;top:39px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;z-index:9001">
+					<?php echo $this->debug_header_output(); ?>
+					<?php echo $this->debug_query_output(); ?>
+					<?php echo $this->debug_output; ?>
+				</div>
+			</div>
+			<?php
+		}
+	}
+}
Index: inc/views/index.php
===================================================================
--- inc/views/index.php	(nonexistent)
+++ inc/views/index.php	(working copy)
@@ -0,0 +1,13 @@
+<?php
+/**
+ * Human nature is like whirling water. If a breach is made to the east, it flows to the east; if a breach is made to the west, it flows west.
+ * And just as water does not discern between east and west, so man's nature is indifferent to good or bad.
+ * It is true that water will flow indifferently to east and west, but will it flow equally well up and down?
+ * Human nature is disposed toward goodness, just as water tends to flow downwards.
+ * There is no water but flows downwards, and no man but shows his tendency to be good.
+ * Now, by striking water hard, you may splash it higher than your forehead, and by damming it, you may make it go uphill.
+ * But, is that the nature of water? It is external force that causes it to do so.
+ * Likewise, if a man is made to do what is not good, his nature is being similarly forced.
+ *
+ * - 孟子
+ */
Index: inc/views/metaboxes/description-metabox.php
===================================================================
--- inc/views/metaboxes/description-metabox.php	(nonexistent)
+++ inc/views/metaboxes/description-metabox.php	(working copy)
@@ -0,0 +1,149 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_description_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_description_metabox_main' :
+
+		$blogname = $this->escape_description( $this->get_blogname() );
+		$sep = $this->get_separator( 'description' );
+
+		/**
+		 * Generate example.
+		 */
+		$page_title = $this->escape_description( __( 'Example Title', 'autodescription' ) );
+		$on = $this->escape_description( _x( 'on', 'Placement. e.g. Post Title "on" Blog Name', 'autodescription' ) );
+		$excerpt = $this->escape_description( __( 'This is an example description...', 'autodescription' ) );
+
+		//* Put it together.
+		$example 	= '<span id="tsf-description-additions-js">'
+						. $page_title
+						. '<span id="tsf-on-blogname-js">' . " $on " . $blogname . '</span>'
+						. '<span id="autodescription-descsep-js">' . " $sep " . '</span>'
+					. '</span>'
+					. $excerpt
+					;
+
+		$nojs_additions = '';
+		//* Add or remove additions based on option.
+		if ( $this->add_description_additions() ) {
+			$description_blogname_additions = $this->get_option( 'description_blogname' );
+
+			$nojs_additions = $description_blogname_additions ? $page_title . " $on " . $blogname : $page_title;
+			$nojs_additions = $nojs_additions . " $sep ";
+		}
+
+		$example_nojs = $nojs_additions . $excerpt;
+
+		?><h4><?php printf( esc_html__( 'Automated Description Settings', 'autodescription' ) ); ?></h4><?php
+		$this->description( __( 'The meta description can be used to determine the text used under the title on Search Engine results pages.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Description Output', 'autodescription' ); ?></h4>
+		<p class="hide-if-no-js"><?php echo $this->code_wrap_noesc( $example ); ?></p>
+		<p class="hide-if-js"><?php echo $this->code_wrap( $example_nojs ); ?></p>
+
+		<hr>
+		<?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.6.0
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> esc_html__( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'description_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> esc_html__( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'description_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_description_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 *
+		 * Used to extend Description tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_description_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'description', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_description_metabox_general' :
+
+		//* Let's use the same separators as for the title.
+		$description_separator = $this->get_separator_list();
+		$sep_option = $this->get_option( 'description_separator' );
+		$sep_option = $sep_option ? $sep_option : 'pipe';
+
+		$recommended = ' class="tsf-recommended" title="' . esc_attr__( 'Recommended', 'autodescription' ) . '"';
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Description Excerpt Separator', 'autodescription' ); ?></h4></legend>
+			<p id="tsf-description-separator" class="tsf-fields">
+			<?php foreach ( $description_separator as $name => $html ) { ?>
+				<input type="radio" name="<?php $this->field_name( 'description_separator' ); ?>" id="<?php $this->field_id( 'description_separator' . $name ); ?>" value="<?php echo $name ?>" <?php checked( $sep_option, $name ); ?> />
+				<label for="<?php $this->field_id( 'description_separator' . $name ); ?>" <?php echo ( 'pipe' === $name || 'dash' === $name ) ? $recommended : ''; ?>><?php echo $html ?></label>
+			<?php } ?>
+			</p>
+			<span class="description"><?php esc_html_e( 'If the Automated Description consists of two parts (title and excerpt), then the separator will go in-between them.', 'autodescription' ); ?></span>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_description_metabox_additions' :
+
+		$language = $this->google_language();
+		$google_explanation = esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' );
+
+		?>
+		<h4><?php esc_html_e( 'Description Additions Settings', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'To create a more organic description, a small introduction can be added before the description.', 'autodescription' ) );
+		$this->description( __( 'The introduction consists of the title and optionally the blogname.', 'autodescription' ) );
+		?>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Add descriptive Additions to Description', 'autodescription' ); ?></h4>
+		<p id="tsf-description-additions-toggle">
+			<label for="<?php $this->field_id( 'description_additions' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'description_additions' ); ?>" id="<?php $this->field_id( 'description_additions' ); ?>" <?php $this->is_conditional_checked( 'description_additions' ); ?> value="1" <?php checked( $this->get_field_value( 'description_additions' ) ); ?> />
+				<?php esc_html_e( 'Add Additions to automated description?', 'autodescription' ); ?>
+				<a href="<?php echo esc_url( $google_explanation ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'This creates good meta descriptions', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+
+		<h4><?php esc_html_e( 'Add Blogname to Additions', 'autodescription' ); ?></h4>
+		<p id="tsf-description-onblogname-toggle">
+			<label for="<?php $this->field_id( 'description_blogname' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'description_blogname' ); ?>" id="<?php $this->field_id( 'description_blogname' ); ?>" <?php $this->is_conditional_checked( 'description_blogname' ); ?> value="1" <?php checked( $this->get_field_value( 'description_blogname' ) ); ?> />
+				<?php esc_html_e( 'Add Blogname to automated description additions?', 'autodescription' ); ?>
+			</label>
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/feed-metabox.php
===================================================================
--- inc/views/metaboxes/feed-metabox.php	(nonexistent)
+++ inc/views/metaboxes/feed-metabox.php	(working copy)
@@ -0,0 +1,49 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_feed_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_feed_metabox_main' :
+		?><h4><?php esc_html_e( 'Content Feed Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Sometimes, your content can get stolen by robots through the WordPress feeds. This can cause duplicate content issues. To prevent this from happening, it's recommended to convert the feed's content into an excerpt.", 'autodescription' ) );
+		$this->description( __( "Adding a backlink below the feed's content will also let the visitors know where the content came from.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Change Feed Settings', 'autodescription' ); ?></h4>
+		<?php
+		$excerpt_the_feed_label = esc_html__( 'Convert feed content into excerpts?', 'autodescription' );
+		$excerpt_the_feed_label .= ' ' . $this->make_info( __( 'By default the excerpt will be at most 400 characters long', 'autodescription' ), '', false );
+
+		$source_the_feed_label = esc_html__( 'Add backlinks below the feed content?', 'autodescription' );
+		$source_the_feed_label .= ' ' . $this->make_info( __( 'This link will not be followed by Search Engines', 'autodescription' ), '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			array(
+				$this->make_checkbox( 'excerpt_the_feed', $excerpt_the_feed_label, '', false ),
+				$this->make_checkbox( 'source_the_feed', $source_the_feed_label, '', false ),
+			), true
+		);
+
+		if ( $this->rss_uses_excerpt() ) {
+			$reading_settings_url = admin_url( 'options-reading.php' );
+			$reading_settings_title = __( 'Reading Settings', 'autodescription' );
+			$reading_settings = '<a href="' . esc_url( $reading_settings_url ) . '" target="_blank" title="' . esc_attr( $reading_settings_title ) . '">' . esc_html( $reading_settings_title ) . '</a>';
+
+			$this->description_noesc( sprintf( esc_html_x( 'Note: The feed is already converted into an excerpt (summary) through the %s.', '%s = Reading Settings', 'autodescription' ), $reading_settings ) );
+		}
+
+		$feed_url = get_feed_link();
+		$here = '<a href="' . esc_url( $feed_url ) . '" target="_blank" title="' . esc_attr__( 'View feed', 'autodescription' ) . '">' . esc_html_x( 'here', 'The feed can be found %s.', 'autodescription' ) . '</a>';
+
+		$this->description_noesc( sprintf( esc_html_x( 'The feed can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/homepage-metabox.php
===================================================================
--- inc/views/metaboxes/homepage-metabox.php	(nonexistent)
+++ inc/views/metaboxes/homepage-metabox.php	(working copy)
@@ -0,0 +1,393 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_homepage_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_homepage_metabox_main' :
+
+		$this->description( __( 'These settings will take precedence over the settings set within the Home Page edit screen, if any.', 'autodescription' ) );
+
+		?><hr><?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.6.0
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> __( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+			),
+			'robots' => array(
+				'name'		=> __( 'Robots', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_robots_tab' ),
+				'dashicon'	=> 'visibility',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_homepage_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 * Used to extend HomePage tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_homepage_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'homepage', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_homepage_metabox_general' :
+
+		$language = $this->google_language();
+
+		$page_on_front = $this->has_page_on_front();
+		$home_description_frompost = false;
+
+		$description_from_post_message = '';
+		$title_from_post_message  = '';
+
+		$title_i18n = esc_html__( 'Title', 'autodescription' );
+		$description_i18n = esc_html__( 'Description', 'autodescription' );
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		$home_id = $this->get_the_front_page_ID();
+		$home_title = $this->escape_title( $this->get_option( 'homepage_title' ) );
+		$blog_description = $this->get_blogdescription();
+
+		/**
+		 * Home Page Tagline settings.
+		 * @since 2.3.8
+		 *
+		 * @param string $home_tagline The tagline option.
+		 * @param string $home_tagline_placeholder The option placeholder. Always defaults to description.
+		 * @param string|void $home_tagline_value The tagline input value.
+		 * @param string $blog_description Override blog description with option if applicable.
+		 */
+		$home_tagline = $this->get_field_value( 'homepage_title_tagline' );
+		$home_tagline_placeholder = $blog_description;
+		$home_tagline_value = $home_tagline ? $home_tagline : '';
+		$blog_description = $home_tagline_value ? $home_tagline_value : $blog_description;
+
+		/**
+		 * Create a placeholder for when there's no custom HomePage title found.
+		 * @since 2.2.4
+		 */
+		$home_title_args = $this->generate_home_title( true, '', '', true, false );
+		if ( $this->home_page_add_title_tagline() )
+			$home_title_placeholder = $this->process_title_additions( $home_title_args['blogname'], $home_title_args['title'], $home_title_args['seplocation'] );
+		else
+			$home_title_placeholder = $home_title_args['title'];
+
+		/**
+		 * If the home title is fetched from the post, notify about that instead.
+		 * @since 2.2.4
+		 *
+		 * Nesting often used translations
+		 */
+		if ( empty( $home_title ) && $page_on_front && $this->get_custom_field( '_genesis_title', $home_id ) ) {
+			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
+			$title_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $title_i18n, __( 'Page SEO Settings', 'autodescription' ), $home_page_i18n );
+		}
+
+		/**
+		 * Check for options to calculate title length.
+		 *
+		 * @since 2.3.4
+		 */
+		if ( $home_title ) {
+			$home_title_args = $this->generate_home_title();
+			$tit_len_pre = $this->process_title_additions( $home_title_args['title'], $home_title_args['blogname'], $home_title_args['seplocation'] );
+		} else {
+			$tit_len_pre = $home_title_placeholder;
+		}
+
+		//* Fetch the description from the home page.
+		$frompost_description = $page_on_front ? $this->get_custom_field( '_genesis_description', $home_id ) : '';
+
+		//* Fetch the HomePage Description option.
+		$home_description = $this->get_field_value( 'homepage_description' );
+
+		/**
+		 * Create a placeholder.
+		 * @since 2.3.4
+		 */
+		if ( $frompost_description ) {
+			$description_placeholder = $frompost_description;
+		} else {
+			$description_args = array(
+				'id' => $home_id,
+				'is_home' => true,
+				'get_custom_field' => false
+			);
+
+			$description_placeholder = $this->generate_description( '', $description_args );
+		}
+
+		/**
+		 * Checks if the home is blog, the Home Page Metabox description and
+		 * the frompost description.
+		 * @since 2.3.4
+		 */
+		if ( empty( $home_description ) && $page_on_front && $frompost_description )
+			$home_description_frompost = true;
+
+		/**
+		 *
+		 * If the HomePage Description empty, it will check for the InPost
+		 * Description set on the Home Page. And it will set the InPost
+		 * Description as placeholder.
+		 *
+		 * Nesting often used translations.
+		 *
+		 * Notify that the homepage is a blog.
+		 * @since 2.2.2
+		 */
+		if ( $home_description_frompost ) {
+			$page_seo_settings_i18n = __( 'Page SEO Settings', 'autodescription' );
+			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
+			$description_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $description_i18n, $page_seo_settings_i18n, $home_page_i18n );
+		}
+
+		$desc_len_pre = $home_description ? $home_description : $description_placeholder;
+
+		/**
+		 * Convert to what Google outputs.
+		 *
+		 * This will convert e.g. &raquo; to a single length character.
+		 * @since 2.3.4
+		 */
+		$tit_len = html_entity_decode( $this->escape_title( $tit_len_pre ) );
+		$desc_len = html_entity_decode( $this->escape_title( $desc_len_pre ) );
+
+		?>
+		<p>
+			<label for="<?php $this->field_id( 'homepage_title_tagline' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Title Tagline', 'autodescription' ), $home_page_i18n ); ?></strong>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'homepage_title_tagline' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title_tagline' ); ?>" placeholder="<?php echo $home_tagline_placeholder ?>" value="<?php echo esc_attr( $home_tagline_value ); ?>" />
+		</p>
+
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'homepage_title' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Title', 'autodescription' ), $home_page_i18n ); ?></strong>
+				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3' ); ?>" target="_blank" title="<?php esc_attr_e( 'Recommended Length: 50 to 55 characters', 'autodescription' ) ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( esc_html__( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_title', false ) . '_chars">'. mb_strlen( $tit_len ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
+			</label>
+		</p>
+		<p id="tsf-title-wrap">
+			<input type="text" name="<?php $this->field_name( 'homepage_title' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title' ); ?>" placeholder="<?php echo esc_attr( $home_title_placeholder ); ?>" value="<?php echo esc_attr( $home_title ); ?>" />
+			<span id="tsf-title-offset" class="hide-if-no-js"></span><span id="tsf-title-placeholder" class="hide-if-no-js"></span>
+		</p>
+		<?php
+		if ( $title_from_post_message ) {
+			$this->description( $title_from_post_message );
+		}
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'homepage_description' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Description', 'autodescription' ), $home_page_i18n ); ?></strong>
+				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' ); ?>" target="_blank" title="<?php _e( 'Recommended Length: 145 to 155 characters', 'autodescription' ) ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_description', false ) . '_chars">'. mb_strlen( $desc_len ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
+			</label>
+		</p>
+		<p>
+			<textarea name="<?php $this->field_name( 'homepage_description' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_description' ); ?>" rows="3" cols="70"  placeholder="<?php echo $description_placeholder ?>"><?php echo esc_textarea( $home_description ); ?></textarea>
+		</p>
+		<?php
+		$this->description( __( 'The meta description can be used to determine the text used under the title on Search Engine results pages.', 'autodescription' ) );
+
+		if ( $description_from_post_message ) {
+			echo '<p class="description">' . esc_html( $description_from_post_message ) . '</p>';
+		}
+		break;
+
+	case 'the_seo_framework_homepage_metabox_additions' :
+
+		//* Fetches escaped title parts.
+		$title_args = $this->generate_home_title();
+		$title = $title_args['title'];
+		$blogname = $title_args['blogname'];
+		$sep = $this->get_separator( 'title' );
+
+		$example_left = '<em><span class="custom-title-js">' . $title . '</span><span class="tsf-custom-blogname-js"><span class="autodescription-sep-js"> ' . $sep . ' </span><span class="tsf-custom-tagline-js">' . $blogname . '</span></span></span></em>';
+		$example_right = '<em><span class="tsf-custom-blogname-js"><span class="tsf-custom-tagline-js">' . $blogname . '</span><span class="autodescription-sep-js"> ' . $sep . ' </span></span><span class="custom-title-js">' . $title . '</span></em>';
+
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
+			<?php $this->description( __( 'Determines which side the added title text will go on.', 'autodescription' ) ); ?>
+
+			<p id="tsf-home-title-location" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'home_title_location' ), 'left' ); ?> />
+					<label for="<?php $this->field_id( 'home_title_location_left' ); ?>">
+						<span><?php esc_html_e( 'Left:', 'autodescription' ); ?></span>
+						<?php echo ( $example_left ) ? $this->code_wrap_noesc( $example_left ) : ''; ?>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'home_title_location' ), 'right' ); ?> />
+					<label for="<?php $this->field_id( 'home_title_location_right' ); ?>">
+						<span><?php esc_html_e( 'Right:', 'autodescription' ); ?></span>
+						<?php echo $example_right ? $this->code_wrap_noesc( $example_right ) : ''; ?>
+					</label>
+				</span>
+			</p>
+		</fieldset>
+
+		<hr>
+		<h4><?php printf( esc_html__( '%s Tagline', 'autodescription' ), $home_page_i18n ); ?></h4>
+		<p id="tsf-title-tagline-toggle">
+			<label for="<?php $this->field_id( 'homepage_tagline' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'homepage_tagline' ); ?>" id="<?php $this->field_id( 'homepage_tagline' ); ?>" <?php $this->is_conditional_checked( 'homepage_tagline' ); ?> value="1" <?php checked( $this->get_field_value( 'homepage_tagline' ) ); ?> />
+				<?php printf( esc_html__( 'Add site description (tagline) to the Title on the %s?', 'autodescription' ), $home_page_i18n ); ?>
+			</label>
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_homepage_metabox_robots' :
+
+		$language = $this->google_language();
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		//* Get home page ID. If blog on front, it's 0.
+		$home_id = $this->get_the_front_page_ID();
+
+		$noindex_post = $this->get_custom_field( '_genesis_noindex', $home_id );
+		$nofollow_post = $this->get_custom_field( '_genesis_nofollow', $home_id );
+		$noarchive_post = $this->get_custom_field( '_genesis_noarchive', $home_id );
+
+		$checked_home = '';
+		/**
+		 * Shows user that the setting is checked on the home page.
+		 * Adds starting - with space to maintain readability.
+		 *
+		 * @since 2.2.4
+		 */
+		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
+			$checked_home = ' - <a href="' . esc_url( admin_url( 'post.php?post=' . $home_id . '&action=edit#tsf-inpost-box' ) ) . '" target="_blank" class="attention" title="' . esc_attr__( 'View Home Page Settings', 'autodescription' ) . '" >' . esc_html__( 'Checked in Page', 'autodescription' ) . '</a>';
+		}
+
+		?><h4><?php esc_html_e( 'Home Page Robots Meta Settings', 'autodescription' ); ?></h4><?php
+
+		$noindex_note = $noindex_post ? $checked_home : '';
+		$nofollow_note = $nofollow_post ? $checked_home : '';
+		$noarchive_note = $noarchive_post ? $checked_home : '';
+
+		//* Index label.
+		/* translators: 1: Option, 2: Location */
+		$i_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n );
+		$i_label .= ' ';
+		$i_label .= $this->make_info(
+			__( 'Tell Search Engines not to show this page in their search results', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/93710?hl=' . $language,
+			false
+		) . $noindex_note;
+
+		//* Follow label.
+		/* translators: 1: Option, 2: Location */
+		$f_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'nofollow' ), $home_page_i18n );
+		$f_label .= ' ';
+		$f_label .= $this->make_info(
+			__( 'Tell Search Engines not to follow links on this page', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/96569?hl=' . $language,
+			false
+		) . $nofollow_note;
+
+		//* Archive label.
+		/* translators: 1: Option, 2: Location */
+		$a_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noarchive' ), $home_page_i18n );
+		$a_label .= ' ';
+		$a_label .= $this->make_info(
+			__( 'Tell Search Engines not to save a cached copy of this page', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/79812?hl=' . $language,
+			false
+		) . $noarchive_note;
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			array(
+				$this->make_checkbox(
+					'homepage_noindex',
+					$i_label,
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'homepage_nofollow',
+					$f_label,
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'homepage_noarchive',
+					$a_label,
+					'',
+					false
+				),
+			),
+			true
+		);
+
+		// Add notice if any options are checked on the post.
+		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
+			$this->description( __( 'Note: If any of these options are unchecked, but are checked on the Home Page, they will be outputted regardless.', 'autodescription' ) );
+		}
+		?>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Home Page Pagination Robots Settings', 'autodescription' ); ?></h4>
+		<?php $this->description( __( "If your Home Page is paginated and outputs content that's also found elsewhere on the website, enabling this option might prevent duplicate content.", 'autodescription' ) ); ?>
+
+		<?php
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'home_paged_noindex',
+				/* translators: 1: Option, 2: Location */
+				sprintf( esc_html__( 'Apply %1$s to every second or later page on the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n ),
+				'',
+				false
+			),
+			true
+		);
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/index.php
===================================================================
--- inc/views/metaboxes/index.php	(nonexistent)
+++ inc/views/metaboxes/index.php	(working copy)
@@ -0,0 +1,2 @@
+<?php
+//* When I have them working together, it's like a beautiful kaleidoscope. - Ornette Coleman
Index: inc/views/metaboxes/knowledge-metabox.php
===================================================================
--- inc/views/metaboxes/knowledge-metabox.php	(nonexistent)
+++ inc/views/metaboxes/knowledge-metabox.php	(working copy)
@@ -0,0 +1,230 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_knowledge_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_knowledge_metabox_main' :
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.8
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'knowledge_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'website' => array(
+				'name'		=> __( 'Website', 'autodescription' ),
+				'callback'	=> array( $this, 'knowledge_metabox_about_tab' ),
+				'dashicon'	=> 'admin-home',
+			),
+			'social' => array(
+				'name'		=> 'Social Sites',
+				'callback'	=> array( $this, 'knowledge_metabox_social_tab' ),
+				'dashicon'	=> 'networking',
+			),
+		);
+
+		/**
+		 * Applies filter knowledgegraph_settings_tabs : Array see $default_tabs
+		 * @since 2.2.8
+		 * Used to extend Knowledge Graph tabs
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_knowledgegraph_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'knowledge', $tabs, '2.2.8' );
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Knowledge Graph Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "The Knowledge Graph lets Google and other Search Engines know where to find you or your organization and its relevant content.", 'autodescription' ) );
+		$this->description( __( "Google is becoming more of an 'Answer Engine' than a 'Search Engine'. Setting up these options could have a positive impact on the SEO value of your website.", 'autodescription' ) );
+
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'knowledge_output',
+				__( 'Output Knowledge tags?', 'autodescription' ),
+				'',
+				true
+			), true
+		);
+
+		if ( $this->wp_version( '4.2.999', '>=' ) ) :
+		?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Website logo', 'autodescription' ); ?></h4>
+			<?php
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'knowledge_logo',
+					__( 'Use the Favicon from Customizer as the Organization Logo?', 'autodescription' ),
+					__( 'This option only has an effect when this site represents an Organization. If left disabled, Search Engines will look elsewhere for a logo, if it exists and is assigned as a logo.', 'autodescription' ),
+					true
+				), true
+			);
+		endif;
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_about' :
+
+		$blogname = $this->get_blogname();
+
+		?><h4><?php esc_html_e( 'About this website', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Who or what is your website about?', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'knowledge_type' ); ?>"><?php echo esc_html_x( 'This website represents:', '...Organization or Person.', 'autodescription' ); ?></label>
+			<select name="<?php $this->field_name( 'knowledge_type' ); ?>" id="<?php $this->field_id( 'knowledge_type' ); ?>">
+			<?php
+			$knowledge_type = (array) apply_filters(
+				'the_seo_framework_knowledge_types',
+				array(
+					'organization'	=> __( 'An Organization', 'autodescription' ),
+					'person' 		=> __( 'A Person', 'autodescription' ),
+				)
+			);
+			foreach ( $knowledge_type as $value => $name )
+				echo '<option value="' . esc_attr( $value ) . '"' . selected( $this->get_field_value( 'knowledge_type' ), esc_attr( $value ), false ) . '>' . esc_html( $name ) . '</option>' . "\n";
+			?>
+			</select>
+		</p>
+
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'knowledge_name' ); ?>">
+				<strong><?php esc_html_e( 'The organization or personal name', 'autodescription' ); ?></strong>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'knowledge_name' ); ?>" class="large-text" id="<?php $this->field_id( 'knowledge_name' ); ?>" placeholder="<?php echo esc_attr( $blogname ) ?>" value="<?php echo esc_attr( $this->get_field_value( 'knowledge_name' ) ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_social' :
+
+		?><h4><?php esc_html_e( 'Social Pages connected to this website', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Don't have a page at a site or is the profile only privately accessible? Leave that field empty. Unsure? Fill it in anyway.", 'autodescription' ) );
+		$this->description( __( 'Add the link that leads directly to the social page of this website.', 'autodescription' ) );
+
+		?><hr><?php
+
+		$connectedi18n = _x( 'RelatedProfile', 'No spaces. E.g. https://facebook.com/RelatedProfile', 'autodescription' );
+		$profile18n = _x( 'Profile', 'Social Profile', 'autodescription' );
+
+		/**
+		 * @todo maybe genericons?
+		 */
+
+		$socialsites = array(
+			'facebook' => array(
+				'option'		=> 'knowledge_facebook',
+				'dashicon'		=> 'dashicons-facebook',
+				'desc' 			=> 'Facebook ' . __( 'Page', 'autodescription' ),
+				'placeholder'	=> 'http://www.facebook.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://facebook.com/me' ),
+			),
+			'twitter' => array(
+				'option'		=> 'knowledge_twitter',
+				'dashicon'		=> 'dashicons-twitter',
+				'desc' 			=> 'Twitter ' . $profile18n,
+				'placeholder'	=> 'http://www.twitter.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://twitter.com/home' ), // No example link available.
+			),
+			'gplus' => array(
+				'option'		=> 'knowledge_gplus',
+				'dashicon'		=> 'dashicons-googleplus',
+				'desc' 			=> 'Google+ ' . $profile18n,
+				'placeholder'	=> 'https://plus.google.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://plus.google.com/me' ),
+			),
+			'instagram' => array(
+				'option'		=> 'knowledge_instagram',
+				'dashicon'		=> 'genericon-instagram',
+				'desc' 			=> 'Instagram ' . $profile18n,
+				'placeholder'	=> 'http://instagram.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://instagram.com/' ), // No example link available.
+			),
+			'youtube' => array(
+				'option'		=> 'knowledge_youtube',
+				'dashicon'		=> 'genericon-youtube',
+				'desc' 			=> 'Youtube ' . $profile18n,
+				'placeholder'	=> 'http://www.youtube.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.youtube.com/user/%2f' ), // Yes a double slash.
+			),
+			'linkedin' => array(
+				'option'		=> 'knowledge_linkedin',
+				'dashicon'		=> 'genericon-linkedin-alt',
+				'desc' 			=> 'LinkedIn ' . $profile18n . ' ID',
+				'placeholder'	=> 'http://www.linkedin.com/profile/view?id=' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.linkedin.com/profile/view' ), // This generates a query arg. We should allow that.
+			),
+			'pinterest' => array(
+				'option'		=> 'knowledge_pinterest',
+				'dashicon'		=> 'genericon-pinterest-alt',
+				'desc' 			=> 'Pinterest ' . $profile18n,
+				'placeholder'	=> 'https://www.pinterest.com/' . $connectedi18n . '/',
+				'examplelink'	=> esc_url( 'https://www.pinterest.com/me/' ),
+			),
+			'soundcloud' => array(
+				'option'		=> 'knowledge_soundcloud',
+				'dashicon'		=> 'genericon-cloud', // I know, it's not the real one. D:
+				'desc' 			=> 'SoundCloud ' . $profile18n,
+				'placeholder'	=> 'https://soundcloud.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://soundcloud.com/you' ),
+			),
+			'tumblr' => array(
+				'option'		=> 'knowledge_tumblr',
+				'dashicon'		=> 'genericon-tumblr',
+				'desc' 			=> 'Tumblr ' . __( 'Blog', 'autodescription' ),
+				'placeholder'	=> 'https://tumblr.com/blog/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.tumblr.com/dashboard' ),  // No example link available.
+			),
+		);
+
+		foreach ( $socialsites as $key => $value ) {
+			?>
+			<p>
+				<label for="<?php $this->field_id( $value['option'] ); ?>">
+					<strong><?php echo esc_html( $value['desc'] ); ?></strong>
+					<?php
+					if ( $value['examplelink'] ) {
+						?><a href="<?php echo esc_url( $value['examplelink'] ); ?>" target="_blank">[?]</a><?php
+					}
+					?>
+				</label>
+			</p>
+			<p>
+				<input type="text" name="<?php $this->field_name( $value['option'] ); ?>" class="large-text" id="<?php $this->field_id( $value['option'] ); ?>" placeholder="<?php echo esc_attr( $value['placeholder'] ) ?>" value="<?php echo esc_attr( $this->get_field_value( $value['option'] ) ); ?>" />
+			</p>
+			<?php
+		}
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/robots-metabox.php
===================================================================
--- inc/views/metaboxes/robots-metabox.php	(nonexistent)
+++ inc/views/metaboxes/robots-metabox.php	(working copy)
@@ -0,0 +1,172 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_robots_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_robots_metabox_main' :
+
+		//* Robots types
+		$types = array(
+			'category' => __( 'Category', 'autodescription' ),
+			'tag' => __( 'Tag', 'autodescription' ),
+			'author' => __( 'Author', 'autodescription' ),
+			'date' => __( 'Date', 'autodescription' ),
+			'search' => __( 'Search Pages', 'autodescription' ),
+			'attachment' => __( 'Attachment Pages', 'autodescription' ),
+			'site' => _x( 'the entire site', '...for the entire site', 'autodescription' ),
+		);
+
+		//* Robots i18n
+		$robots = array(
+			'noindex' => array(
+				'value' => 'noindex',
+				'name' 	=> __( 'NoIndex', 'autodescription' ),
+				'desc' 	=> __( 'These options prevent indexing of the selected archives and pages. If you enable this, the selected archives or pages will be removed from Search Engine results pages.', 'autodescription' ),
+			),
+			'nofollow' => array(
+				'value' => 'nofollow',
+				'name'	=> __( 'NoFollow', 'autodescription' ),
+				'desc'	=> __( 'These options prevent links from being followed on the selected archives and pages. If you enable this, the selected archives or pages in-page links will gain no SEO value, including your own links.', 'autodescription' ),
+			),
+			'noarchive' => array(
+				'value' => 'noarchive',
+				'name'	=> __( 'NoArchive', 'autodescription' ),
+				'desc'	=> __( 'These options prevent caching of the selected archives and pages. If you enable this, Search Engines will not create a cached copy of the selected archives or pages.', 'autodescription' ),
+			),
+		);
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback'	=> function callback
+		 *				'dashicon'	=> WordPress Dashicon
+		 *				'args'		=> function args
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+				'general' => array(
+					'name' 		=> __( 'General', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_general_tab' ),
+					'dashicon'	=> 'admin-generic',
+					'args'		=> '',
+				),
+				'index' => array(
+					'name' 		=> __( 'Indexing', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'filter',
+					'args'		=> array( $types, $robots['noindex'] ),
+				),
+				'follow' => array(
+					'name'		=> __( 'Following', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'editor-unlink',
+					'args'		=> array( $types, $robots['nofollow'] ),
+				),
+				'archive' => array(
+					'name'		=> __( 'Archiving', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'download',
+					'args'		=> array( $types, $robots['noarchive'] ),
+				),
+			);
+
+		/**
+		 * Applies filters 'the_seo_framework_robots_settings_tabs' : array see $default_tabs
+		 *
+		 * Used to extend Social tabs
+		 * @since 2.2.4
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_robots_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'robots', $tabs, '2.2.4' );
+		break;
+
+	case 'the_seo_framework_robots_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Open Directory Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Sometimes, Search Engines use resources from certain Directories to find titles and descriptions for your content. You generally don't want them to. Turn these options on to prevent them from doing so.", 'autodescription' ) );
+		$this->description( __( "The Open Directory Project and the Yahoo! Directory may contain outdated SEO values. Therefore, it's best to leave these options checked.", 'autodescription' ) );
+
+		$fields = $this->wrap_fields(
+			array(
+				$this->make_checkbox(
+					'noodp',
+					sprintf( esc_html__( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noodp' ) ),
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'noydir',
+					sprintf( esc_html__( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noydir' ) ),
+					'',
+					false
+				),
+			), true
+		);
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Paginated Archive Settings', 'autodescription' ); ?></h4>
+		<p class="description"><?php printf( esc_html__( "Indexing the second or later page of any archive might cause duplication errors. Search Engines look down upon them; therefore, it's recommended to disable indexing of those pages.", 'autodescription' ), $this->code_wrap( 'noodp' ), $this->code_wrap( 'noydir' ) ); ?></p>
+		<?php
+
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'paged_noindex',
+				sprintf( esc_html__( 'Apply %s to every second or later archive page?', 'autodescription' ), $this->code_wrap( 'noindex' ) ),
+				'',
+				false
+			), true
+		);
+		break;
+
+	case 'the_seo_framework_robots_metabox_no' :
+
+		$ro_value = $robots['value'];
+		$ro_name = esc_html( $robots['name'] );
+		$ro_i18n = $robots['desc'];
+
+		?><h4><?php printf( esc_html__( '%s Robots Settings', 'autodescription' ), $ro_name ); ?></h4><?php
+		$this->description( $ro_i18n );
+
+		$checkboxes = '';
+		foreach ( $types as $type => $i18n ) {
+
+			if ( 'site' === $type || 'attachment' === $type || 'search' === $type ) {
+				//* Singular.
+				/* translators: 1: Option, 2: Post Type */
+				$label = sprintf( esc_html__( 'Apply %1$s to %2$s?', 'autodescription' ), $this->code_wrap( $ro_name ), esc_html( $i18n ) );
+			} else {
+				//* Archive.
+				/* translators: 1: Option, 2: Post Type */
+				$label = sprintf( esc_html__( 'Apply %1$s to %2$s Archives?', 'autodescription' ), $this->code_wrap( $ro_name ), esc_html( $i18n ) );
+			}
+
+			$id = $type . '_' . $ro_value;
+
+			//* Add <hr> if it's 'site'
+			$checkboxes .= 'site' === $type ? '<hr class="tsf-option-spacer">' : '';
+
+			$checkboxes .= $this->make_checkbox( esc_html( $id ), $label, '', false );
+		}
+
+		?><p class="tsf-fields"><?php
+			//* Echo checkboxes.
+			$this->wrap_fields( $checkboxes, true );
+		?></p><?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/schema-metabox.php
===================================================================
--- inc/views/metaboxes/schema-metabox.php	(nonexistent)
+++ inc/views/metaboxes/schema-metabox.php	(working copy)
@@ -0,0 +1,87 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_schema_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_schema_metabox_main' :
+
+		?><h4><?php esc_html_e( 'Schema.org Output Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $this->has_json_ld_plugin() ) :
+			$this->description( __( 'Another Schema.org plugin has been detected.', 'autodescription' ) );
+		else :
+			$this->description( __( 'The Schema.org markup is a standard way of annotating structured data for Search Engines. This markup is represented within hidden scripts throughout the website.', 'autodescription' ) );
+			$this->description( __( 'When your web pages include structured data markup, Search Engines can use that data to index your content better, present it more prominently in Search Results, and use it in several different applications.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<?php /* translators: https://developers.google.com/search/docs/data-types/sitelinks-searchbox */ ?>
+			<h4><?php echo esc_html( _x( 'Sitelinks Searchbox', 'Product name', 'autodescription' ) ); ?></h4><?php
+			$this->description( __( 'When Search users search for your brand name, the following option allows them to search through your website directly from the Search Results.', 'autodescription' ) );
+
+			$info = $this->make_info(
+				_x( 'Sitelinks Searchbox', 'Product name', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/sitelinks-searchbox',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_searchbox',
+					esc_html_x( 'Enable Sitelinks Searchbox?', 'Product name', 'autodescription' ) . ' ' . $info,
+					'',
+					false
+				),
+				true
+			);
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Site Name', 'autodescription' ); ?></h4><?php
+			$this->description( __( "When using breadcrumbs, the first entry is by default your website's address. Using the following option will convert it to the Site Name.", 'autodescription' ) );
+
+			$info = $this->make_info(
+				__( 'Include your Site Name in Search Results', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/sitename',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_sitename',
+					esc_html__( 'Convert URL to Site Name?', 'autodescription' ) . ' ' . $info,
+					sprintf( esc_html__( 'The Site Name is: %s', 'autodescription' ), $this->code_wrap( $this->get_blogname() ) ),
+					false
+				),
+				true
+			);
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Breadcrumbs', 'autodescription' ); ?></h4><?php
+			$this->description( __( "Breadcrumb trails indicate the page's position in the site hierarchy. Using the following option will show the hierarchy within the Search Results when available.", 'autodescription' ) );
+
+			$info = $this->make_info(
+				__( 'About Breadcrumbs', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/breadcrumbs',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_breadcrumbs',
+					esc_html__( 'Enable Breadcrumbs?', 'autodescription' ) . ' ' . $info,
+					esc_html__( 'Multiple trails can be outputted. The longest trail is prioritized.', 'autodescription' ),
+					false
+				),
+				true
+			);
+		endif;
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/sitemaps-metabox.php
===================================================================
--- inc/views/metaboxes/sitemaps-metabox.php	(nonexistent)
+++ inc/views/metaboxes/sitemaps-metabox.php	(working copy)
@@ -0,0 +1,265 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_sitemaps_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_sitemaps_metabox_main' :
+
+		if ( ! $this->pretty_permalinks ) {
+
+			$permalink_settings_url = admin_url( 'options-permalink.php' );
+			$here = '<a href="' . esc_url( $permalink_settings_url ) . '" target="_blank" title="' . esc_attr__( 'Permalink Settings', 'autodescription' ) . '">' . esc_html_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+
+			?><h4><?php esc_html_e( "You're using the plain permalink structure.", 'autodescription' ); ?></h4><?php
+			$this->description( __( "This means we can't output the sitemap through the WordPress rewrite rules.", 'autodescription' ) );
+			?><hr><?php
+			$this->description_noesc( sprintf( esc_html_x( "Change your Permalink Settings %s (Recommended: 'postname').", '%s = here', 'autodescription' ), $here ) );
+
+		} else {
+
+			/**
+			 * Parse tabs content
+			 *
+			 * @param array $default_tabs { 'id' = The identifier =>
+			 *			array(
+			 *				'name' 		=> The name
+			 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+			 *				'dashicon'	=> Desired dashicon
+			 *			)
+			 * }
+			 *
+			 * @since 2.2.9
+			 */
+			$default_tabs = array(
+				'general' => array(
+					'name' 		=> __( 'General', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_general_tab' ),
+					'dashicon'	=> 'admin-generic',
+				),
+				'robots' => array(
+					'name'		=> 'Robots.txt',
+					'callback'	=> array( $this, 'sitemaps_metabox_robots_tab' ),
+					'dashicon'	=> 'share-alt2',
+				),
+				'timestamps' => array(
+					'name'		=> __( 'Timestamps', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_timestamps_tab' ),
+					'dashicon'	=> 'backup',
+				),
+				'notify' => array(
+					'name'		=> _x( 'Ping', 'Ping or notify Search Engine', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_notify_tab' ),
+					'dashicon'	=> 'megaphone',
+				),
+			);
+
+			/**
+			 * Applies filters the_seo_framework_sitemaps_settings_tabs : array see $default_tabs
+			 *
+			 * Used to extend Knowledge Graph tabs
+			 */
+			$defaults = (array) apply_filters( 'the_seo_framework_sitemaps_settings_tabs', $default_tabs, $args );
+
+			$tabs = wp_parse_args( $args, $defaults );
+			$use_tabs = true;
+
+			$sitemap_plugin = $this->detect_sitemap_plugin();
+			$sitemap_detected = $this->has_sitemap_xml();
+			$robots_detected = $this->has_robots_txt();
+
+			/**
+			 * Remove the timestamps and notify submenus
+			 * @since 2.5.2
+			 */
+			if ( $sitemap_plugin || $sitemap_detected ) {
+				unset( $tabs['timestamps'] );
+				unset( $tabs['notify'] );
+			}
+
+			/**
+			 * Remove the robots submenu
+			 * @since 2.5.2
+			 */
+			if ( $robots_detected ) {
+				unset( $tabs['robots'] );
+			}
+
+			if ( $robots_detected && ( $sitemap_plugin || $sitemap_detected ) )
+				$use_tabs = false;
+
+			$this->nav_tab_wrapper( 'sitemaps', $tabs, '2.2.8', $use_tabs );
+
+		}
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_general' :
+
+		$site_url = $this->the_home_url_from_cache( true );
+
+		$sitemap_url = $site_url . 'sitemap.xml';
+		$has_sitemap_plugin = $this->detect_sitemap_plugin();
+		$sitemap_detected = $this->has_sitemap_xml();
+
+		?><h4><?php esc_html_e( 'Sitemap Integration Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $has_sitemap_plugin ) {
+			$this->description( __( 'Another active sitemap plugin has been detected. This means that the sitemap functionality has been replaced.', 'autodescription' ) );
+		} elseif ( $sitemap_detected ) {
+			$this->description( __( 'A sitemap has been detected in the root folder of your website. This means that the sitemap functionality has no effect.', 'autodescription' ) );
+		} else {
+			$this->description( __( 'The Sitemap is an XML file that lists pages and posts for your website along with optional metadata about each post or page. This helps Search Engines crawl your website more easily.', 'autodescription' ) );
+			$this->description( __( 'The optional metadata include the post and page modified time and a page priority indication, which is automated.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Sitemap Output', 'autodescription' ); ?></h4>
+			<?php
+
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'sitemaps_output',
+					__( 'Output Sitemap?', 'autodescription' ),
+					'',
+					true
+				), true
+			);
+		}
+
+		if ( ! ( $has_sitemap_plugin || $sitemap_detected ) && $this->get_option( 'sitemaps_output' ) ) {
+			$here = '<a href="' . esc_url( $sitemap_url ) . '" target="_blank" title="' . esc_attr__( 'View sitemap', 'autodescription' ) . '">' . esc_attr_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+			$this->description_noesc( sprintf( _x( 'The sitemap can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		}
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_robots' :
+
+		$site_url = $this->the_home_url_from_cache( true );
+		$robots_url = trailingslashit( $site_url ) . 'robots.txt';
+		$here = '<a href="' . esc_url( $robots_url ) . '" target="_blank" title="' . esc_attr__( 'View robots.txt', 'autodescription' ) . '">' . esc_html_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+
+		?><h4><?php esc_html_e( 'Robots.txt Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $this->can_do_sitemap_robots() ) :
+			$this->description( __( 'The robots.txt file is the first thing Search Engines look for. If you add the sitemap location in the robots.txt file, then Search Engines will look for and index the sitemap.', 'autodescription' ) );
+			$this->description( __( 'If you do not add the sitemap location to the robots.txt file, you will need to notify Search Engines manually through the Webmaster Console provided by the Search Engines.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Add sitemap location in robots.txt', 'autodescription' ); ?></h4>
+			<?php
+
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'sitemaps_robots',
+					__( 'Add sitemap location in robots?', 'autodescription' ),
+					'',
+					true
+				), true
+			);
+		else :
+			$this->description( __( 'Another robots.txt sitemap Location addition has been detected.', 'autodescription' ) );
+		endif;
+
+		$this->description_noesc( sprintf( esc_html_x( 'The robots.txt file can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_timestamps' :
+
+		//* Sets timezone according to WordPress settings.
+		$this->set_timezone();
+
+		$timestamp_0 = date( 'Y-m-d' );
+
+		/**
+		 * @link https://www.w3.org/TR/NOTE-datetime
+		 * We use the second expression of the time zone offset handling.
+		 */
+		$timestamp_1 = date( 'Y-m-d\TH:iP' );
+
+		//* Reset timezone to previous value.
+		$this->reset_timezone();
+
+		?><h4><?php esc_html_e( 'Timestamps Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The modified time suggests to Search Engines where to look for content changes. It has no impact on the SEO value unless you drastically change pages or posts. It then depends on how well your content is constructed.', 'autodescription' ) );
+		$this->description( __( "By default, the sitemap only outputs the modified date if you've enabled them within the Social Metabox. This setting overrides those settings for the Sitemap.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Output Modified Date', 'autodescription' ); ?></h4>
+		<?php
+
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'sitemaps_modified',
+				sprintf( esc_html__( 'Add %s to the sitemap?', 'autodescription' ), $this->code_wrap( '<lastmod>' ) ),
+				'',
+				false
+			), true
+		);
+
+		?>
+		<hr>
+
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Timestamp Format Settings', 'autodescription' ); ?></h4></legend>
+			<?php $this->description( __( 'Determines how specific the modification timestamp is.', 'autodescription' ) ); ?>
+
+			<p id="sitemaps-timestamp-format" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>" value="0" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '0' ); ?> />
+					<label for="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>">
+						<span title="<?php esc_attr_e( 'Complete date', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_0 ); ?> [?]</span>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>" value="1" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '1' ); ?> />
+					<label for="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>">
+						<span title="<?php esc_attr_e( 'Complete date plus hours, minutes and timezone', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_1 ); ?> [?]</span>
+					</label>
+				</span>
+			</p>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_notify' :
+
+		?><h4><?php esc_html_e( 'Ping Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Notifying Search Engines of a sitemap change is helpful to get your content indexed as soon as possible.', 'autodescription' ) );
+		$this->description( __( 'By default this will happen at most once an hour.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Notify Search Engines', 'autodescription' ); ?></h4>
+		<?php
+
+		$engines = array(
+			'ping_google'	=> 'Google',
+			'ping_bing' 	=> 'Bing',
+			'ping_yandex'	=> 'Yandex',
+		);
+
+		$ping_checkbox = '';
+
+		foreach ( $engines as $option => $engine ) {
+			$ping_label = sprintf( __( 'Notify %s about sitemap changes?', 'autodescription' ), $engine );
+			$ping_checkbox .= $this->make_checkbox( $option, $ping_label, '', true );
+		}
+
+		//* Echo checkbox.
+		$this->wrap_fields( $ping_checkbox, true );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/social-metabox.php
===================================================================
--- inc/views/metaboxes/social-metabox.php	(nonexistent)
+++ inc/views/metaboxes/social-metabox.php	(working copy)
@@ -0,0 +1,323 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_social_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_social_metabox_main' :
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'facebook' => array(
+				'name'		=> 'Facebook',
+				'callback'	=> array( $this, 'social_metabox_facebook_tab' ),
+				'dashicon'	=> 'facebook-alt',
+			),
+			'twitter' => array(
+				'name'		=> 'Twitter',
+				'callback'	=> array( $this, 'social_metabox_twitter_tab' ),
+				'dashicon'	=> 'twitter',
+			),
+			'postdates' => array(
+				'name'		=> __( 'Post Dates', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_postdates_tab' ),
+				'dashicon'	=> 'backup',
+			),
+			'relationships' => array(
+				'name'		=> __( 'Link Relationships', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_relationships_tab' ),
+				'dashicon'	=> 'leftright',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_social_settings_tabs : array see $default_tabs
+		 *
+		 * Used to extend Social tabs
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_social_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'social', $tabs, '2.2.2' );
+		break;
+
+	case 'the_seo_framework_social_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Site Shortlink Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The shortlink tag might have some use for 3rd party service discoverability, but it has little to no SEO value whatsoever.', 'autodescription' ) );
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'shortlink_tag',
+				__( 'Output shortlink tag?', 'autodescription' ),
+				'',
+				true
+			),
+			true
+		);
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Social Meta Tags Settings', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'Output various meta tags for social site integration, among other 3rd party services.', 'autodescription' ) );
+
+		?><hr><?php
+
+		//* Echo Open Graph Tags checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'og_tags',
+				__( 'Output Open Graph meta tags?', 'autodescription' ),
+				__( 'Facebook, Twitter, Pinterest and many other social sites make use of these tags.', 'autodescription' ),
+				true
+			),
+			true
+		);
+
+		if ( $this->detect_og_plugin() )
+			$this->description( __( 'Note: Another Open Graph plugin has been detected.', 'autodescription' ) );
+
+		?><hr><?php
+
+		//* Echo Facebook Tags checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'facebook_tags',
+				__( 'Output Facebook meta tags?', 'autodescription' ),
+				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Facebook' ),
+				true
+			),
+			true
+		);
+
+		?><hr><?php
+
+		//* Echo Twitter Tags checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'twitter_tags',
+				__( 'Output Twitter meta tags?', 'autodescription' ),
+				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Twitter' ),
+				true
+			),
+			true
+		);
+
+		if ( $this->detect_twitter_card_plugin() ) {
+			$this->description( __( 'Note: Another Twitter Card plugin has been detected.', 'autodescription' ) );
+		}
+		break;
+
+	case 'the_seo_framework_social_metabox_facebook' :
+
+		$fb_author = $this->get_field_value( 'facebook_author' );
+		$fb_author_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourPersonalProfile', 'Example Facebook Personal URL', 'autodescription' ) : '';
+
+		$fb_publisher = $this->get_field_value( 'facebook_publisher' );
+		$fb_publisher_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourVerifiedBusinessProfile', 'Example Verified Facebook Business URL', 'autodescription' ) : '';
+
+		$fb_appid = $this->get_field_value( 'facebook_appid' );
+		$fb_appid_placeholder = empty( $fb_appid ) ? '123456789012345' : '';
+
+		?><h4><?php esc_html_e( 'Default Facebook Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Facebook post sharing works mostly through Open Graph. However, you can also link your Business and Personal Facebook pages, among various other options.', 'autodescription' ) );
+		$this->description( __( 'When these options are filled in, Facebook might link your Facebook profile to be followed and liked when your post or page is shared.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_author' ); ?>">
+				<strong><?php esc_html_e( 'Article Author Facebook URL', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://facebook.com/me' ); ?>" class="description" target="_blank" title="<?php esc_attr_e( 'Your Facebook Profile', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_author' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_author' ); ?>" placeholder="<?php echo esc_attr( $fb_author_placeholder ); ?>" value="<?php echo esc_attr( $fb_author ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_publisher' ); ?>">
+				<strong><?php esc_html_e( 'Article Publisher Facebook URL', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://instantarticles.fb.com/' ); ?>" class="description" target="_blank" title="<?php esc_html_e( 'To use this, you need to be a verified business', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_publisher' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_publisher' ); ?>" placeholder="<?php echo esc_attr( $fb_publisher_placeholder ); ?>" value="<?php echo esc_attr( $fb_publisher ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_appid' ); ?>">
+				<strong><?php esc_html_e( 'Facebook App ID', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://developers.facebook.com/apps' ); ?>" target="_blank" class="description" title="<?php esc_html_e( 'Get Facebook App ID', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_appid' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_appid' ); ?>" placeholder="<?php echo esc_attr( $fb_appid_placeholder ); ?>" value="<?php echo esc_attr( $fb_appid ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_social_metabox_twitter' :
+
+		$tw_site = $this->get_field_value( 'twitter_site' );
+		$tw_site_placeholder = empty( $tw_site ) ? _x( '@your-site-username', 'Twitter @username', 'autodescription' ) : '';
+
+		$tw_creator = $this->get_field_value( 'twitter_creator' );
+		$tw_creator_placeholder = empty( $tw_creator ) ? _x( '@your-personal-username', 'Twitter @username', 'autodescription' ) : '';
+
+		$twitter_card = $this->get_twitter_card_types();
+
+		?><h4><?php esc_html_e( 'Default Twitter Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Twitter post sharing works mostly through Open Graph. However, you can also link your Business and Personal Twitter pages, among various other options.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<fieldset id="tsf-twitter-cards">
+			<legend><h4><?php esc_html_e( 'Twitter Card Type', 'autodescription' ); ?></h4></legend>
+			<?php $this->description_noesc( sprintf( esc_html__( 'What kind of Twitter card would you like to use? It will default to %s if no image is found.', 'autodescription' ), $this->code_wrap( 'summary' ) ) ); ?>
+
+			<p class="tsf-fields">
+			<?php
+				foreach ( $twitter_card as $type => $name ) {
+					?>
+					<span class="tsf-toblock">
+						<input type="radio" name="<?php $this->field_name( 'twitter_card' ); ?>" id="<?php $this->field_id( 'twitter_card_' . $type ); ?>" value="<?php echo esc_attr( $type ); ?>" <?php checked( $this->get_field_value( 'twitter_card' ), $type ); ?> />
+						<label for="<?php $this->field_id( 'twitter_card_' . $type ); ?>">
+							<span><?php echo $this->code_wrap( $name ); ?></span>
+							<a class="description" href="<?php echo esc_url( 'https://dev.twitter.com/cards/types/' . $name ); ?>" target="_blank" title="Twitter Card <?php echo esc_attr( $name ) . ' ' . esc_attr__( 'Example', 'autodescription' ); ?>"><?php esc_html_e( 'Example', 'autodescription' ); ?></a>
+						</label>
+					</span>
+					<?php
+				}
+			?>
+			</p>
+		</fieldset>
+
+		<hr>
+
+		<?php $this->description( __( 'When the following options are filled in, Twitter might link your Twitter Site or Personal Profile when your post or page is shared.', 'autodescription' ) ); ?>
+
+		<p>
+			<label for="<?php $this->field_id( 'twitter_site' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( "Your Website's Twitter Profile", 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php esc_html_e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'twitter_site' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_site' ); ?>" placeholder="<?php echo esc_attr( $tw_site_placeholder ); ?>" value="<?php echo esc_attr( $tw_site ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'twitter_creator' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Your Personal Twitter Profile', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'twitter_creator' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_creator' ); ?>" placeholder="<?php echo esc_attr( $tw_creator_placeholder ); ?>" value="<?php echo esc_attr( $tw_creator ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_social_metabox_postdates' :
+
+		$pages_i18n = esc_html__( 'Pages', 'autodescription' );
+		$posts_i18n = esc_html__( 'Posts', 'autodescription' );
+		$home_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		?><h4><?php esc_html_e( 'Post Date Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Some Search Engines output the publishing date and modified date next to the search results. These help Search Engines find new content and could impact the SEO value.', 'autodescription' ) );
+		$this->description( __( "It's recommended on posts, but it's not recommended on pages unless you modify or create new pages frequently.", 'autodescription' ) );
+
+		/* translators: 1: Option, 2: Post Type */
+		$post_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $posts_i18n );
+		$post_publish_time_checkbox = $this->make_checkbox( 'post_publish_time', $post_publish_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$page_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $pages_i18n );
+		$page_publish_time_checkbox = $this->make_checkbox( 'page_publish_time', $page_publish_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $post_publish_time_checkbox . $page_publish_time_checkbox, true );
+
+		/* translators: 1: Option, 2: Post Type */
+		$post_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $posts_i18n );
+		$post_modify_time_checkbox = $this->make_checkbox( 'post_modify_time', $post_modify_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$page_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $pages_i18n );
+		$page_modify_time_checkbox = $this->make_checkbox( 'page_modify_time', $page_modify_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $post_modify_time_checkbox . $page_modify_time_checkbox, true );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Home Page', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'Because you only publish the Home Page once, Search Engines might think your website is outdated. This can be prevented by disabling the following options.', 'autodescription' ) );
+
+		/* translators: 1: Option, 2: Post Type */
+		$home_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $home_i18n );
+		$home_publish_time_checkbox = $this->make_checkbox( 'home_publish_time', $home_publish_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$home_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $home_i18n );
+		$home_modify_time_checkbox = $this->make_checkbox( 'home_modify_time', $home_modify_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $home_publish_time_checkbox . $home_modify_time_checkbox, true );
+		break;
+
+	case 'the_seo_framework_social_metabox_relationships' :
+
+		?><h4><?php esc_html_e( 'Link Relationship Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Some Search Engines look for relations between the content of your pages. If you have multiple pages for a single Post or Page, or have archives indexed, this option will help Search Engines look for the right page to display in the Search Results.', 'autodescription' ) );
+		$this->description( __( "It's recommended to turn this option on for better SEO consistency and to prevent duplicate content errors.", 'autodescription' ) );
+
+		?><hr><?php
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_posts_label = sprintf( esc_html__( 'Add %s link tags to Posts and Pages?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_posts_checkbox = $this->make_checkbox( 'prev_next_posts', $prev_next_posts_label, '', false );
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_archives_label = sprintf( esc_html__( 'Add %s link tags to Archives?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_archives_checkbox = $this->make_checkbox( 'prev_next_archives', $prev_next_archives_label, '', false );
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_frontpage_label = sprintf( esc_html__( 'Add %s link tags to the Home Page?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_frontpage_checkbox = $this->make_checkbox( 'prev_next_frontpage', $prev_next_frontpage_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $prev_next_posts_checkbox . $prev_next_archives_checkbox . $prev_next_frontpage_checkbox, true );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/title-metabox.php
===================================================================
--- inc/views/metaboxes/title-metabox.php	(nonexistent)
+++ inc/views/metaboxes/title-metabox.php	(working copy)
@@ -0,0 +1,257 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_title_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_title_metabox_main' :
+
+		$latest_post_id = $this->get_latest_post_id();
+
+		if ( $latest_post_id ) {
+			$post = get_post( $latest_post_id, OBJECT );
+			$title = esc_attr( $post->post_title );
+		} else {
+			$title = esc_attr__( 'Example Post Title', 'autodescription' );
+		}
+
+		$blogname = $this->get_blogname();
+		$sep = $this->get_separator( 'title' );
+
+		$additions_left = '<span class="tsf-title-additions-js">' . $blogname . '<span class="autodescription-sep-js">' . " $sep " . '</span></span>';
+		$additions_right = '<span class="tsf-title-additions-js"><span class="autodescription-sep-js">' . " $sep " . '</span>' . $blogname . '</span>';
+
+		$example_left = '<em>' . $additions_left . $title . '</em>';
+		$example_right = '<em>' . $title . $additions_right . '</em>';
+
+		//* There's no need for "hide-if-no-js" here.
+		//* Check left first, as right is default (and thus fallback).
+		$showleft = 'left' === $this->get_option( 'title_location' );
+
+		?><h4><?php esc_html_e( 'Automated Title Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The page title is prominently shown within the browser tab as well as within the Search Engine results pages.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Title Output', 'autodescription' ); ?></h4>
+		<p>
+			<span class="tsf-title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
+			<span class="tsf-title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
+		</p>
+
+		<hr>
+		<?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> __( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+				'args'		=> array(
+					'examples' => array(
+						'left'	=> $example_left,
+						'right' => $example_right,
+					),
+				),
+			),
+			'prefixes' => array(
+				'name'		=> __( 'Prefixes', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_prefixes_tab' ),
+				'dashicon'	=> 'plus-alt',
+				'args'		=> array(
+					'additions' => array(
+						'left'	=> $additions_left,
+						'right' => $additions_right,
+					),
+					'showleft' => $showleft,
+				),
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_title_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 *
+		 * Used to extend Description tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_title_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'title', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_title_metabox_general' :
+		$title_separator = $this->get_separator_list();
+		$recommended = ' class="tsf-recommended" title="' . esc_attr__( 'Recommended', 'autodescription' ) . '"';
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Separator', 'autodescription' ); ?></h4></legend>
+			<p id="tsf-title-separator" class="tsf-fields">
+			<?php foreach ( $title_separator as $name => $html ) { ?>
+				<input type="radio" name="<?php $this->field_name( 'title_seperator' ); ?>" id="<?php $this->field_id( 'title_seperator_' . $name ); ?>" value="<?php echo esc_attr( $name ); ?>" <?php checked( $this->get_field_value( 'title_seperator' ), $name ); ?> />
+				<label for="<?php $this->field_id( 'title_seperator_' . $name ); ?>" <?php echo in_array( $name, array( 'dash', 'pipe' ), true ) ? $recommended : ''; ?>><?php echo esc_html( $html ); ?></label>
+			<?php } ?>
+			</p>
+			<?php $this->description( __( 'If the title consists of two parts (original title and optional addition), then the separator will go in-between them.', 'autodescription' ) ); ?>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_title_metabox_additions' :
+
+		$language = $this->google_language();
+
+		$example_left = $examples['left'];
+		$example_right = $examples['right'];
+
+		$home_page_has_option = __( 'The Home Page has a specific option.', 'autodescription' );
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
+
+			<?php $this->description( __( 'Determines which side the added title text will go on.', 'autodescription' ) ); ?>
+
+			<p id="tsf-title-location" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'title_location' ), 'left' ); ?> />
+					<label for="<?php $this->field_id( 'title_location_left' ); ?>">
+						<span><?php esc_html_e( 'Left:', 'autodescription' ); ?></span>
+						<?php echo $this->code_wrap_noesc( $example_left ) ?>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'title_location' ), 'right' ); ?> />
+					<label for="<?php $this->field_id( 'title_location_right' ); ?>">
+						<span><?php esc_html_e( 'Right:', 'autodescription' ); ?></span>
+						<?php echo $this->code_wrap_noesc( $example_right ); ?>
+					</label>
+				</span>
+			</p>
+			<?php $this->description( $home_page_has_option ); ?>
+		</fieldset>
+		<?php
+
+		//* Only add this option if the theme is doing it right.
+		if ( $this->can_manipulate_title() ) :
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Remove Blogname from Title', 'autodescription' ); ?></h4>
+			<div id="tsf-title-additions-toggle">
+				<?php
+				$info = $this->make_info(
+					__( 'This might decouple your posts and pages from the rest of the website', 'autodescription' ),
+					'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3',
+					false
+				);
+
+				$this->wrap_fields(
+					$this->make_checkbox(
+						'title_rem_additions',
+						esc_html__( 'Remove Blogname from title?', 'autodescription' ) . ' ' . $info,
+						'',
+						false
+					),
+					true
+				);
+				?>
+			</div>
+			<?php
+			$this->description( __( 'Only use this option if you are aware of its SEO effects.', 'autodescription' ), false );
+			echo ' ';
+			$this->description( $home_page_has_option, false );
+		endif;
+		break;
+
+	case 'the_seo_framework_title_metabox_prefixes' :
+
+		//* Get translated category label, if it exists. Otherwise, fallback to translation.
+		$term_labels = $this->get_tax_labels( 'category' );
+		$label = isset( $term_labels->singular_name ) ? $term_labels->singular_name : __( 'Category', 'autodescription' );
+
+		/**
+		 * @since WordPress Core 4.5.0 get_terms first parameter is converted to the latter.
+		 */
+		$cats = get_terms( array(), array( 'taxonomy' => 'category', 'fields' => 'ids', 'hide_empty' => false, 'order' => 'ASC', 'number' => 1 ) );
+		if ( is_array( $cats ) && ! empty( $cats ) ) {
+			//* Category should exist.
+			$cat = reset( $cats );
+		} else {
+			//* Default fallback category.
+			$cat = 1;
+		}
+
+		//* If cat is found, it will return its name. Otherwise it's an empty string.
+		$cat_name = get_cat_name( $cat );
+		$cat_name = $cat_name ? $cat_name : __( 'Example Category', 'autodescription' );
+
+		$display_prefix = $this->is_option_checked( 'title_rem_prefixes' ) ? 'none' : 'inline';
+		$title = '<span class="tsf-title-prefix-example" style="display:' . $display_prefix . '">' . esc_html( $label ) . ': </span>' . esc_html( $cat_name );
+
+		$additions_left = $additions['left'];
+		$additions_right = $additions['right'];
+
+		$example_left = '<em>' . $additions_left . $title . '</em>';
+		$example_right = '<em>' . $title . $additions_right . '</em>';
+
+		$language = $this->google_language();
+
+		/**
+		 * @todo use checkbox function
+		 * @priority low 2.6.x
+		 */
+
+		?><h4><?php esc_html_e( 'Title prefix options', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'On archives a descriptive prefix may be added to the title.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Archive Title Output', 'autodescription' ); ?></h4>
+		<p>
+			<span class="tsf-title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
+			<span class="tsf-title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
+		</p>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Remove Archive Title Prefixes', 'autodescription' ); ?></h4>
+		<p id="title-prefixes-toggle">
+			<label for="<?php $this->field_id( 'title_rem_prefixes' ); ?>">
+				<input type="checkbox" name="<?php $this->field_name( 'title_rem_prefixes' ); ?>" id="<?php $this->field_id( 'title_rem_prefixes' ); ?>" <?php $this->is_conditional_checked( 'title_rem_prefixes' ); ?> value="1" <?php checked( $this->get_field_value( 'title_rem_prefixes' ) ); ?> />
+				<?php esc_html_e( 'Remove prefixes from title?', 'autodescription' ); ?>
+			</label>
+			<?php
+			$this->make_info(
+				__( "The prefix helps visitors and Search Engines determine what kind of page they're visiting", 'autodescription' ),
+				'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3',
+				true
+			);
+			?>
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/webmaster-metabox.php
===================================================================
--- inc/views/metaboxes/webmaster-metabox.php	(nonexistent)
+++ inc/views/metaboxes/webmaster-metabox.php	(working copy)
@@ -0,0 +1,69 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_webmaster_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_webmaster_metabox_main' :
+		$site_url = $this->the_home_url_from_cache();
+		$language = $this->google_language();
+
+		$bing_site_url = 'https://www.bing.com/webmaster/configure/verify/ownership?url=' . urlencode( $site_url );
+		$google_site_url = 'https://www.google.com/webmasters/verification/verification?hl=' . $language . '&siteUrl=' . $site_url;
+		$pint_site_url = 'https://analytics.pinterest.com/';
+		$yandex_site_url = 'https://webmaster.yandex.com/site/verification.xml';
+
+		?><h4><?php esc_html_e( 'Webmaster Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "When adding your website to Google, Bing and other Webmaster Tools, you'll be asked to add a code or file to your website for verification purposes. These options will help you easily integrate those codes.", 'autodescription' ) );
+		$this->description( __( "Verifying your website has no SEO value whatsoever. But you might gain added benefits such as search ranking insights to help you improve your website's content.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'google_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Google Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $google_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Google Verification code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'google_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'google_verification' ); ?>" placeholder="ABC1d2eFg34H5iJ6klmNOp7qRstUvWXyZaBc8dEfG9" value="<?php echo esc_attr( $this->get_field_value( 'google_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'bing_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Bing Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $bing_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Bing Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'bing_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'bing_verification' ); ?>" placeholder="123A456B78901C2D3456E7890F1A234D" value="<?php echo esc_attr( $this->get_field_value( 'bing_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'yandex_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Yandex Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $yandex_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Yandex Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'yandex_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'yandex_verification' ); ?>" placeholder="12345abc678901d2" value="<?php echo esc_attr( $this->get_field_value( 'yandex_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'pint_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Pinterest Analytics Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $pint_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Pinterest Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'pint_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'pint_verification' ); ?>" placeholder="123456a7b8901de2fa34bcdef5a67b98" value="<?php echo esc_attr( $this->get_field_value( 'pint_verification' ) ); ?>" />
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/debug/index.php
===================================================================
--- inc/views/debug/index.php	(nonexistent)
+++ inc/views/debug/index.php	(working copy)
@@ -0,0 +1,2 @@
+<?php
+//* We often discover what will do, by finding out what will not do; and probably he who never made a mistake never made a discovery - Samuel Smiles
Index: inc/views/debug/output.php
===================================================================
--- inc/views/debug/output.php	(nonexistent)
+++ inc/views/debug/output.php	(working copy)
@@ -0,0 +1,62 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+if ( $this->debug_output ) {
+	if ( $this->the_seo_framework_debug_hidden ) {
+		echo "\r\n<!--\r\n:: THE SEO FRAMEWORK DEBUG :: \r\n" . $this->debug_output . "\r\n:: / THE SEO FRAMEWORK DEBUG ::\r\n-->\r\n";
+	} else {
+
+		$id = $this->get_the_real_ID();
+		$mdash = ' &mdash; ';
+		$term = $this->is_archive() ? $this->fetch_the_term( $id ) : '';
+		$taxonomy = isset( $term->taxonomy ) ? $term->taxonomy : '';
+
+		//* This will return 'Page' on all non-archive types (except the home page)
+		$type = ! $this->is_archive() && $this->is_front_page( $id ) ? 'Front Page' : $this->get_the_term_name( $term );
+		$cache_key = $this->generate_cache_key( $this->get_the_real_ID(), $taxonomy );
+
+		if ( $this->is_admin() ) {
+			?>
+			<div style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 200px );min-height:700px;padding:0;margin:20px 20px 40px 180px;overflow:hidden;border:1px solid #ccc;border-radius:3px;line-height:18px">
+				<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px;">
+					SEO Debug Information
+					<?php
+					if ( $this->is_post_edit() || $this->is_term_edit() ) :
+						echo ' :: ';
+						echo 'Type: ' . esc_html( $type );
+						echo $mdash . 'ID: ' . esc_html( $id );
+						echo $mdash . 'Cache key: ' . esc_html( $cache_key );
+					endif;
+					?>
+				</h3>
+				<div style="position:absolute;bottom:0;right:0;left:0;top:39px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;z-index:9001">
+					<?php echo $this->debug_header_output(); ?>
+					<?php echo $this->debug_query_output(); ?>
+					<?php echo $this->debug_output; ?>
+				</div>
+			</div>
+			<?php
+		} else {
+			?>
+			<style type="text/css">.wp-ui-notification{color:#fff;background-color:#d54e21}.code.highlight{font-family:Consolas,Monaco,monospace;font-size:14px;}.theseoframework-debug h3{font-size:18px;margin:18px 0}</style>
+			<div class="theseoframework-debug" style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 80px );min-height:700px;padding:0;margin:40px;overflow:hidden;border:1px solid #ccc;border-radius:3px;line-height:18px">
+				<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px">
+					SEO Debug Information
+					<?php
+					echo ' :: ';
+					echo 'Type: ' . esc_html( $type );
+					echo $mdash . 'ID: ' . esc_html( $id );
+					echo $mdash . 'Cache key: ' . esc_html( $cache_key );
+					?>
+				</h3>
+				<div style="position:absolute;bottom:0;right:0;left:0;top:39px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;z-index:9001">
+					<?php echo $this->debug_header_output(); ?>
+					<?php echo $this->debug_query_output(); ?>
+					<?php echo $this->debug_output; ?>
+				</div>
+			</div>
+			<?php
+		}
+	}
+}
Index: inc/views/debug/index.php
===================================================================
--- inc/views/debug/index.php	(nonexistent)
+++ inc/views/debug/index.php	(working copy)
@@ -0,0 +1,2 @@
+<?php
+//* We often discover what will do, by finding out what will not do; and probably he who never made a mistake never made a discovery - Samuel Smiles
Index: inc/views/debug/output.php
===================================================================
--- inc/views/debug/output.php	(nonexistent)
+++ inc/views/debug/output.php	(working copy)
@@ -0,0 +1,62 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+if ( $this->debug_output ) {
+	if ( $this->the_seo_framework_debug_hidden ) {
+		echo "\r\n<!--\r\n:: THE SEO FRAMEWORK DEBUG :: \r\n" . $this->debug_output . "\r\n:: / THE SEO FRAMEWORK DEBUG ::\r\n-->\r\n";
+	} else {
+
+		$id = $this->get_the_real_ID();
+		$mdash = ' &mdash; ';
+		$term = $this->is_archive() ? $this->fetch_the_term( $id ) : '';
+		$taxonomy = isset( $term->taxonomy ) ? $term->taxonomy : '';
+
+		//* This will return 'Page' on all non-archive types (except the home page)
+		$type = ! $this->is_archive() && $this->is_front_page( $id ) ? 'Front Page' : $this->get_the_term_name( $term );
+		$cache_key = $this->generate_cache_key( $this->get_the_real_ID(), $taxonomy );
+
+		if ( $this->is_admin() ) {
+			?>
+			<div style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 200px );min-height:700px;padding:0;margin:20px 20px 40px 180px;overflow:hidden;border:1px solid #ccc;border-radius:3px;line-height:18px">
+				<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px;">
+					SEO Debug Information
+					<?php
+					if ( $this->is_post_edit() || $this->is_term_edit() ) :
+						echo ' :: ';
+						echo 'Type: ' . esc_html( $type );
+						echo $mdash . 'ID: ' . esc_html( $id );
+						echo $mdash . 'Cache key: ' . esc_html( $cache_key );
+					endif;
+					?>
+				</h3>
+				<div style="position:absolute;bottom:0;right:0;left:0;top:39px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;z-index:9001">
+					<?php echo $this->debug_header_output(); ?>
+					<?php echo $this->debug_query_output(); ?>
+					<?php echo $this->debug_output; ?>
+				</div>
+			</div>
+			<?php
+		} else {
+			?>
+			<style type="text/css">.wp-ui-notification{color:#fff;background-color:#d54e21}.code.highlight{font-family:Consolas,Monaco,monospace;font-size:14px;}.theseoframework-debug h3{font-size:18px;margin:18px 0}</style>
+			<div class="theseoframework-debug" style="color:#444;font-family:Georgio,sans-serif;font-size:14px;clear:both;float:left;position:relative;width:calc( 100% - 80px );min-height:700px;padding:0;margin:40px;overflow:hidden;border:1px solid #ccc;border-radius:3px;line-height:18px">
+				<h3 style="font-size:14px;padding:0 12px;margin:0;line-height:39px;border-bottom:2px solid #aaa;position:absolute;z-index:1;width:100%;right:0;left:0;top:0;background:#fff;border-radius:3px 3px 0 0;height:39px">
+					SEO Debug Information
+					<?php
+					echo ' :: ';
+					echo 'Type: ' . esc_html( $type );
+					echo $mdash . 'ID: ' . esc_html( $id );
+					echo $mdash . 'Cache key: ' . esc_html( $cache_key );
+					?>
+				</h3>
+				<div style="position:absolute;bottom:0;right:0;left:0;top:39px;margin:0;padding:0;background:#fff;border-radius:3px;overflow-x:hidden;z-index:9001">
+					<?php echo $this->debug_header_output(); ?>
+					<?php echo $this->debug_query_output(); ?>
+					<?php echo $this->debug_output; ?>
+				</div>
+			</div>
+			<?php
+		}
+	}
+}
Index: inc/views/index.php
===================================================================
--- inc/views/index.php	(nonexistent)
+++ inc/views/index.php	(working copy)
@@ -0,0 +1,13 @@
+<?php
+/**
+ * Human nature is like whirling water. If a breach is made to the east, it flows to the east; if a breach is made to the west, it flows west.
+ * And just as water does not discern between east and west, so man's nature is indifferent to good or bad.
+ * It is true that water will flow indifferently to east and west, but will it flow equally well up and down?
+ * Human nature is disposed toward goodness, just as water tends to flow downwards.
+ * There is no water but flows downwards, and no man but shows his tendency to be good.
+ * Now, by striking water hard, you may splash it higher than your forehead, and by damming it, you may make it go uphill.
+ * But, is that the nature of water? It is external force that causes it to do so.
+ * Likewise, if a man is made to do what is not good, his nature is being similarly forced.
+ *
+ * - 孟子
+ */
Index: inc/views/metaboxes/description-metabox.php
===================================================================
--- inc/views/metaboxes/description-metabox.php	(nonexistent)
+++ inc/views/metaboxes/description-metabox.php	(working copy)
@@ -0,0 +1,149 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_description_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_description_metabox_main' :
+
+		$blogname = $this->escape_description( $this->get_blogname() );
+		$sep = $this->get_separator( 'description' );
+
+		/**
+		 * Generate example.
+		 */
+		$page_title = $this->escape_description( __( 'Example Title', 'autodescription' ) );
+		$on = $this->escape_description( _x( 'on', 'Placement. e.g. Post Title "on" Blog Name', 'autodescription' ) );
+		$excerpt = $this->escape_description( __( 'This is an example description...', 'autodescription' ) );
+
+		//* Put it together.
+		$example 	= '<span id="tsf-description-additions-js">'
+						. $page_title
+						. '<span id="tsf-on-blogname-js">' . " $on " . $blogname . '</span>'
+						. '<span id="autodescription-descsep-js">' . " $sep " . '</span>'
+					. '</span>'
+					. $excerpt
+					;
+
+		$nojs_additions = '';
+		//* Add or remove additions based on option.
+		if ( $this->add_description_additions() ) {
+			$description_blogname_additions = $this->get_option( 'description_blogname' );
+
+			$nojs_additions = $description_blogname_additions ? $page_title . " $on " . $blogname : $page_title;
+			$nojs_additions = $nojs_additions . " $sep ";
+		}
+
+		$example_nojs = $nojs_additions . $excerpt;
+
+		?><h4><?php printf( esc_html__( 'Automated Description Settings', 'autodescription' ) ); ?></h4><?php
+		$this->description( __( 'The meta description can be used to determine the text used under the title on Search Engine results pages.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Description Output', 'autodescription' ); ?></h4>
+		<p class="hide-if-no-js"><?php echo $this->code_wrap_noesc( $example ); ?></p>
+		<p class="hide-if-js"><?php echo $this->code_wrap( $example_nojs ); ?></p>
+
+		<hr>
+		<?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.6.0
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> esc_html__( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'description_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> esc_html__( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'description_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_description_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 *
+		 * Used to extend Description tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_description_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'description', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_description_metabox_general' :
+
+		//* Let's use the same separators as for the title.
+		$description_separator = $this->get_separator_list();
+		$sep_option = $this->get_option( 'description_separator' );
+		$sep_option = $sep_option ? $sep_option : 'pipe';
+
+		$recommended = ' class="tsf-recommended" title="' . esc_attr__( 'Recommended', 'autodescription' ) . '"';
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Description Excerpt Separator', 'autodescription' ); ?></h4></legend>
+			<p id="tsf-description-separator" class="tsf-fields">
+			<?php foreach ( $description_separator as $name => $html ) { ?>
+				<input type="radio" name="<?php $this->field_name( 'description_separator' ); ?>" id="<?php $this->field_id( 'description_separator' . $name ); ?>" value="<?php echo $name ?>" <?php checked( $sep_option, $name ); ?> />
+				<label for="<?php $this->field_id( 'description_separator' . $name ); ?>" <?php echo ( 'pipe' === $name || 'dash' === $name ) ? $recommended : ''; ?>><?php echo $html ?></label>
+			<?php } ?>
+			</p>
+			<span class="description"><?php esc_html_e( 'If the Automated Description consists of two parts (title and excerpt), then the separator will go in-between them.', 'autodescription' ); ?></span>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_description_metabox_additions' :
+
+		$language = $this->google_language();
+		$google_explanation = esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' );
+
+		?>
+		<h4><?php esc_html_e( 'Description Additions Settings', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'To create a more organic description, a small introduction can be added before the description.', 'autodescription' ) );
+		$this->description( __( 'The introduction consists of the title and optionally the blogname.', 'autodescription' ) );
+		?>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Add descriptive Additions to Description', 'autodescription' ); ?></h4>
+		<p id="tsf-description-additions-toggle">
+			<label for="<?php $this->field_id( 'description_additions' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'description_additions' ); ?>" id="<?php $this->field_id( 'description_additions' ); ?>" <?php $this->is_conditional_checked( 'description_additions' ); ?> value="1" <?php checked( $this->get_field_value( 'description_additions' ) ); ?> />
+				<?php esc_html_e( 'Add Additions to automated description?', 'autodescription' ); ?>
+				<a href="<?php echo esc_url( $google_explanation ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'This creates good meta descriptions', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+
+		<h4><?php esc_html_e( 'Add Blogname to Additions', 'autodescription' ); ?></h4>
+		<p id="tsf-description-onblogname-toggle">
+			<label for="<?php $this->field_id( 'description_blogname' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'description_blogname' ); ?>" id="<?php $this->field_id( 'description_blogname' ); ?>" <?php $this->is_conditional_checked( 'description_blogname' ); ?> value="1" <?php checked( $this->get_field_value( 'description_blogname' ) ); ?> />
+				<?php esc_html_e( 'Add Blogname to automated description additions?', 'autodescription' ); ?>
+			</label>
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/feed-metabox.php
===================================================================
--- inc/views/metaboxes/feed-metabox.php	(nonexistent)
+++ inc/views/metaboxes/feed-metabox.php	(working copy)
@@ -0,0 +1,49 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_feed_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_feed_metabox_main' :
+		?><h4><?php esc_html_e( 'Content Feed Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Sometimes, your content can get stolen by robots through the WordPress feeds. This can cause duplicate content issues. To prevent this from happening, it's recommended to convert the feed's content into an excerpt.", 'autodescription' ) );
+		$this->description( __( "Adding a backlink below the feed's content will also let the visitors know where the content came from.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Change Feed Settings', 'autodescription' ); ?></h4>
+		<?php
+		$excerpt_the_feed_label = esc_html__( 'Convert feed content into excerpts?', 'autodescription' );
+		$excerpt_the_feed_label .= ' ' . $this->make_info( __( 'By default the excerpt will be at most 400 characters long', 'autodescription' ), '', false );
+
+		$source_the_feed_label = esc_html__( 'Add backlinks below the feed content?', 'autodescription' );
+		$source_the_feed_label .= ' ' . $this->make_info( __( 'This link will not be followed by Search Engines', 'autodescription' ), '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			array(
+				$this->make_checkbox( 'excerpt_the_feed', $excerpt_the_feed_label, '', false ),
+				$this->make_checkbox( 'source_the_feed', $source_the_feed_label, '', false ),
+			), true
+		);
+
+		if ( $this->rss_uses_excerpt() ) {
+			$reading_settings_url = admin_url( 'options-reading.php' );
+			$reading_settings_title = __( 'Reading Settings', 'autodescription' );
+			$reading_settings = '<a href="' . esc_url( $reading_settings_url ) . '" target="_blank" title="' . esc_attr( $reading_settings_title ) . '">' . esc_html( $reading_settings_title ) . '</a>';
+
+			$this->description_noesc( sprintf( esc_html_x( 'Note: The feed is already converted into an excerpt (summary) through the %s.', '%s = Reading Settings', 'autodescription' ), $reading_settings ) );
+		}
+
+		$feed_url = get_feed_link();
+		$here = '<a href="' . esc_url( $feed_url ) . '" target="_blank" title="' . esc_attr__( 'View feed', 'autodescription' ) . '">' . esc_html_x( 'here', 'The feed can be found %s.', 'autodescription' ) . '</a>';
+
+		$this->description_noesc( sprintf( esc_html_x( 'The feed can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/homepage-metabox.php
===================================================================
--- inc/views/metaboxes/homepage-metabox.php	(nonexistent)
+++ inc/views/metaboxes/homepage-metabox.php	(working copy)
@@ -0,0 +1,393 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_homepage_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_homepage_metabox_main' :
+
+		$this->description( __( 'These settings will take precedence over the settings set within the Home Page edit screen, if any.', 'autodescription' ) );
+
+		?><hr><?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.6.0
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> __( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+			),
+			'robots' => array(
+				'name'		=> __( 'Robots', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_robots_tab' ),
+				'dashicon'	=> 'visibility',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_homepage_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 * Used to extend HomePage tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_homepage_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'homepage', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_homepage_metabox_general' :
+
+		$language = $this->google_language();
+
+		$page_on_front = $this->has_page_on_front();
+		$home_description_frompost = false;
+
+		$description_from_post_message = '';
+		$title_from_post_message  = '';
+
+		$title_i18n = esc_html__( 'Title', 'autodescription' );
+		$description_i18n = esc_html__( 'Description', 'autodescription' );
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		$home_id = $this->get_the_front_page_ID();
+		$home_title = $this->escape_title( $this->get_option( 'homepage_title' ) );
+		$blog_description = $this->get_blogdescription();
+
+		/**
+		 * Home Page Tagline settings.
+		 * @since 2.3.8
+		 *
+		 * @param string $home_tagline The tagline option.
+		 * @param string $home_tagline_placeholder The option placeholder. Always defaults to description.
+		 * @param string|void $home_tagline_value The tagline input value.
+		 * @param string $blog_description Override blog description with option if applicable.
+		 */
+		$home_tagline = $this->get_field_value( 'homepage_title_tagline' );
+		$home_tagline_placeholder = $blog_description;
+		$home_tagline_value = $home_tagline ? $home_tagline : '';
+		$blog_description = $home_tagline_value ? $home_tagline_value : $blog_description;
+
+		/**
+		 * Create a placeholder for when there's no custom HomePage title found.
+		 * @since 2.2.4
+		 */
+		$home_title_args = $this->generate_home_title( true, '', '', true, false );
+		if ( $this->home_page_add_title_tagline() )
+			$home_title_placeholder = $this->process_title_additions( $home_title_args['blogname'], $home_title_args['title'], $home_title_args['seplocation'] );
+		else
+			$home_title_placeholder = $home_title_args['title'];
+
+		/**
+		 * If the home title is fetched from the post, notify about that instead.
+		 * @since 2.2.4
+		 *
+		 * Nesting often used translations
+		 */
+		if ( empty( $home_title ) && $page_on_front && $this->get_custom_field( '_genesis_title', $home_id ) ) {
+			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
+			$title_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $title_i18n, __( 'Page SEO Settings', 'autodescription' ), $home_page_i18n );
+		}
+
+		/**
+		 * Check for options to calculate title length.
+		 *
+		 * @since 2.3.4
+		 */
+		if ( $home_title ) {
+			$home_title_args = $this->generate_home_title();
+			$tit_len_pre = $this->process_title_additions( $home_title_args['title'], $home_title_args['blogname'], $home_title_args['seplocation'] );
+		} else {
+			$tit_len_pre = $home_title_placeholder;
+		}
+
+		//* Fetch the description from the home page.
+		$frompost_description = $page_on_front ? $this->get_custom_field( '_genesis_description', $home_id ) : '';
+
+		//* Fetch the HomePage Description option.
+		$home_description = $this->get_field_value( 'homepage_description' );
+
+		/**
+		 * Create a placeholder.
+		 * @since 2.3.4
+		 */
+		if ( $frompost_description ) {
+			$description_placeholder = $frompost_description;
+		} else {
+			$description_args = array(
+				'id' => $home_id,
+				'is_home' => true,
+				'get_custom_field' => false
+			);
+
+			$description_placeholder = $this->generate_description( '', $description_args );
+		}
+
+		/**
+		 * Checks if the home is blog, the Home Page Metabox description and
+		 * the frompost description.
+		 * @since 2.3.4
+		 */
+		if ( empty( $home_description ) && $page_on_front && $frompost_description )
+			$home_description_frompost = true;
+
+		/**
+		 *
+		 * If the HomePage Description empty, it will check for the InPost
+		 * Description set on the Home Page. And it will set the InPost
+		 * Description as placeholder.
+		 *
+		 * Nesting often used translations.
+		 *
+		 * Notify that the homepage is a blog.
+		 * @since 2.2.2
+		 */
+		if ( $home_description_frompost ) {
+			$page_seo_settings_i18n = __( 'Page SEO Settings', 'autodescription' );
+			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
+			$description_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $description_i18n, $page_seo_settings_i18n, $home_page_i18n );
+		}
+
+		$desc_len_pre = $home_description ? $home_description : $description_placeholder;
+
+		/**
+		 * Convert to what Google outputs.
+		 *
+		 * This will convert e.g. &raquo; to a single length character.
+		 * @since 2.3.4
+		 */
+		$tit_len = html_entity_decode( $this->escape_title( $tit_len_pre ) );
+		$desc_len = html_entity_decode( $this->escape_title( $desc_len_pre ) );
+
+		?>
+		<p>
+			<label for="<?php $this->field_id( 'homepage_title_tagline' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Title Tagline', 'autodescription' ), $home_page_i18n ); ?></strong>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'homepage_title_tagline' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title_tagline' ); ?>" placeholder="<?php echo $home_tagline_placeholder ?>" value="<?php echo esc_attr( $home_tagline_value ); ?>" />
+		</p>
+
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'homepage_title' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Title', 'autodescription' ), $home_page_i18n ); ?></strong>
+				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3' ); ?>" target="_blank" title="<?php esc_attr_e( 'Recommended Length: 50 to 55 characters', 'autodescription' ) ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( esc_html__( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_title', false ) . '_chars">'. mb_strlen( $tit_len ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
+			</label>
+		</p>
+		<p id="tsf-title-wrap">
+			<input type="text" name="<?php $this->field_name( 'homepage_title' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title' ); ?>" placeholder="<?php echo esc_attr( $home_title_placeholder ); ?>" value="<?php echo esc_attr( $home_title ); ?>" />
+			<span id="tsf-title-offset" class="hide-if-no-js"></span><span id="tsf-title-placeholder" class="hide-if-no-js"></span>
+		</p>
+		<?php
+		if ( $title_from_post_message ) {
+			$this->description( $title_from_post_message );
+		}
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'homepage_description' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Description', 'autodescription' ), $home_page_i18n ); ?></strong>
+				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' ); ?>" target="_blank" title="<?php _e( 'Recommended Length: 145 to 155 characters', 'autodescription' ) ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_description', false ) . '_chars">'. mb_strlen( $desc_len ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
+			</label>
+		</p>
+		<p>
+			<textarea name="<?php $this->field_name( 'homepage_description' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_description' ); ?>" rows="3" cols="70"  placeholder="<?php echo $description_placeholder ?>"><?php echo esc_textarea( $home_description ); ?></textarea>
+		</p>
+		<?php
+		$this->description( __( 'The meta description can be used to determine the text used under the title on Search Engine results pages.', 'autodescription' ) );
+
+		if ( $description_from_post_message ) {
+			echo '<p class="description">' . esc_html( $description_from_post_message ) . '</p>';
+		}
+		break;
+
+	case 'the_seo_framework_homepage_metabox_additions' :
+
+		//* Fetches escaped title parts.
+		$title_args = $this->generate_home_title();
+		$title = $title_args['title'];
+		$blogname = $title_args['blogname'];
+		$sep = $this->get_separator( 'title' );
+
+		$example_left = '<em><span class="custom-title-js">' . $title . '</span><span class="tsf-custom-blogname-js"><span class="autodescription-sep-js"> ' . $sep . ' </span><span class="tsf-custom-tagline-js">' . $blogname . '</span></span></span></em>';
+		$example_right = '<em><span class="tsf-custom-blogname-js"><span class="tsf-custom-tagline-js">' . $blogname . '</span><span class="autodescription-sep-js"> ' . $sep . ' </span></span><span class="custom-title-js">' . $title . '</span></em>';
+
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
+			<?php $this->description( __( 'Determines which side the added title text will go on.', 'autodescription' ) ); ?>
+
+			<p id="tsf-home-title-location" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'home_title_location' ), 'left' ); ?> />
+					<label for="<?php $this->field_id( 'home_title_location_left' ); ?>">
+						<span><?php esc_html_e( 'Left:', 'autodescription' ); ?></span>
+						<?php echo ( $example_left ) ? $this->code_wrap_noesc( $example_left ) : ''; ?>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'home_title_location' ), 'right' ); ?> />
+					<label for="<?php $this->field_id( 'home_title_location_right' ); ?>">
+						<span><?php esc_html_e( 'Right:', 'autodescription' ); ?></span>
+						<?php echo $example_right ? $this->code_wrap_noesc( $example_right ) : ''; ?>
+					</label>
+				</span>
+			</p>
+		</fieldset>
+
+		<hr>
+		<h4><?php printf( esc_html__( '%s Tagline', 'autodescription' ), $home_page_i18n ); ?></h4>
+		<p id="tsf-title-tagline-toggle">
+			<label for="<?php $this->field_id( 'homepage_tagline' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'homepage_tagline' ); ?>" id="<?php $this->field_id( 'homepage_tagline' ); ?>" <?php $this->is_conditional_checked( 'homepage_tagline' ); ?> value="1" <?php checked( $this->get_field_value( 'homepage_tagline' ) ); ?> />
+				<?php printf( esc_html__( 'Add site description (tagline) to the Title on the %s?', 'autodescription' ), $home_page_i18n ); ?>
+			</label>
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_homepage_metabox_robots' :
+
+		$language = $this->google_language();
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		//* Get home page ID. If blog on front, it's 0.
+		$home_id = $this->get_the_front_page_ID();
+
+		$noindex_post = $this->get_custom_field( '_genesis_noindex', $home_id );
+		$nofollow_post = $this->get_custom_field( '_genesis_nofollow', $home_id );
+		$noarchive_post = $this->get_custom_field( '_genesis_noarchive', $home_id );
+
+		$checked_home = '';
+		/**
+		 * Shows user that the setting is checked on the home page.
+		 * Adds starting - with space to maintain readability.
+		 *
+		 * @since 2.2.4
+		 */
+		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
+			$checked_home = ' - <a href="' . esc_url( admin_url( 'post.php?post=' . $home_id . '&action=edit#tsf-inpost-box' ) ) . '" target="_blank" class="attention" title="' . esc_attr__( 'View Home Page Settings', 'autodescription' ) . '" >' . esc_html__( 'Checked in Page', 'autodescription' ) . '</a>';
+		}
+
+		?><h4><?php esc_html_e( 'Home Page Robots Meta Settings', 'autodescription' ); ?></h4><?php
+
+		$noindex_note = $noindex_post ? $checked_home : '';
+		$nofollow_note = $nofollow_post ? $checked_home : '';
+		$noarchive_note = $noarchive_post ? $checked_home : '';
+
+		//* Index label.
+		/* translators: 1: Option, 2: Location */
+		$i_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n );
+		$i_label .= ' ';
+		$i_label .= $this->make_info(
+			__( 'Tell Search Engines not to show this page in their search results', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/93710?hl=' . $language,
+			false
+		) . $noindex_note;
+
+		//* Follow label.
+		/* translators: 1: Option, 2: Location */
+		$f_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'nofollow' ), $home_page_i18n );
+		$f_label .= ' ';
+		$f_label .= $this->make_info(
+			__( 'Tell Search Engines not to follow links on this page', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/96569?hl=' . $language,
+			false
+		) . $nofollow_note;
+
+		//* Archive label.
+		/* translators: 1: Option, 2: Location */
+		$a_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noarchive' ), $home_page_i18n );
+		$a_label .= ' ';
+		$a_label .= $this->make_info(
+			__( 'Tell Search Engines not to save a cached copy of this page', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/79812?hl=' . $language,
+			false
+		) . $noarchive_note;
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			array(
+				$this->make_checkbox(
+					'homepage_noindex',
+					$i_label,
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'homepage_nofollow',
+					$f_label,
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'homepage_noarchive',
+					$a_label,
+					'',
+					false
+				),
+			),
+			true
+		);
+
+		// Add notice if any options are checked on the post.
+		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
+			$this->description( __( 'Note: If any of these options are unchecked, but are checked on the Home Page, they will be outputted regardless.', 'autodescription' ) );
+		}
+		?>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Home Page Pagination Robots Settings', 'autodescription' ); ?></h4>
+		<?php $this->description( __( "If your Home Page is paginated and outputs content that's also found elsewhere on the website, enabling this option might prevent duplicate content.", 'autodescription' ) ); ?>
+
+		<?php
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'home_paged_noindex',
+				/* translators: 1: Option, 2: Location */
+				sprintf( esc_html__( 'Apply %1$s to every second or later page on the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n ),
+				'',
+				false
+			),
+			true
+		);
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/index.php
===================================================================
--- inc/views/metaboxes/index.php	(nonexistent)
+++ inc/views/metaboxes/index.php	(working copy)
@@ -0,0 +1,2 @@
+<?php
+//* When I have them working together, it's like a beautiful kaleidoscope. - Ornette Coleman
Index: inc/views/metaboxes/knowledge-metabox.php
===================================================================
--- inc/views/metaboxes/knowledge-metabox.php	(nonexistent)
+++ inc/views/metaboxes/knowledge-metabox.php	(working copy)
@@ -0,0 +1,230 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_knowledge_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_knowledge_metabox_main' :
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.8
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'knowledge_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'website' => array(
+				'name'		=> __( 'Website', 'autodescription' ),
+				'callback'	=> array( $this, 'knowledge_metabox_about_tab' ),
+				'dashicon'	=> 'admin-home',
+			),
+			'social' => array(
+				'name'		=> 'Social Sites',
+				'callback'	=> array( $this, 'knowledge_metabox_social_tab' ),
+				'dashicon'	=> 'networking',
+			),
+		);
+
+		/**
+		 * Applies filter knowledgegraph_settings_tabs : Array see $default_tabs
+		 * @since 2.2.8
+		 * Used to extend Knowledge Graph tabs
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_knowledgegraph_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'knowledge', $tabs, '2.2.8' );
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Knowledge Graph Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "The Knowledge Graph lets Google and other Search Engines know where to find you or your organization and its relevant content.", 'autodescription' ) );
+		$this->description( __( "Google is becoming more of an 'Answer Engine' than a 'Search Engine'. Setting up these options could have a positive impact on the SEO value of your website.", 'autodescription' ) );
+
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'knowledge_output',
+				__( 'Output Knowledge tags?', 'autodescription' ),
+				'',
+				true
+			), true
+		);
+
+		if ( $this->wp_version( '4.2.999', '>=' ) ) :
+		?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Website logo', 'autodescription' ); ?></h4>
+			<?php
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'knowledge_logo',
+					__( 'Use the Favicon from Customizer as the Organization Logo?', 'autodescription' ),
+					__( 'This option only has an effect when this site represents an Organization. If left disabled, Search Engines will look elsewhere for a logo, if it exists and is assigned as a logo.', 'autodescription' ),
+					true
+				), true
+			);
+		endif;
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_about' :
+
+		$blogname = $this->get_blogname();
+
+		?><h4><?php esc_html_e( 'About this website', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Who or what is your website about?', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'knowledge_type' ); ?>"><?php echo esc_html_x( 'This website represents:', '...Organization or Person.', 'autodescription' ); ?></label>
+			<select name="<?php $this->field_name( 'knowledge_type' ); ?>" id="<?php $this->field_id( 'knowledge_type' ); ?>">
+			<?php
+			$knowledge_type = (array) apply_filters(
+				'the_seo_framework_knowledge_types',
+				array(
+					'organization'	=> __( 'An Organization', 'autodescription' ),
+					'person' 		=> __( 'A Person', 'autodescription' ),
+				)
+			);
+			foreach ( $knowledge_type as $value => $name )
+				echo '<option value="' . esc_attr( $value ) . '"' . selected( $this->get_field_value( 'knowledge_type' ), esc_attr( $value ), false ) . '>' . esc_html( $name ) . '</option>' . "\n";
+			?>
+			</select>
+		</p>
+
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'knowledge_name' ); ?>">
+				<strong><?php esc_html_e( 'The organization or personal name', 'autodescription' ); ?></strong>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'knowledge_name' ); ?>" class="large-text" id="<?php $this->field_id( 'knowledge_name' ); ?>" placeholder="<?php echo esc_attr( $blogname ) ?>" value="<?php echo esc_attr( $this->get_field_value( 'knowledge_name' ) ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_social' :
+
+		?><h4><?php esc_html_e( 'Social Pages connected to this website', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Don't have a page at a site or is the profile only privately accessible? Leave that field empty. Unsure? Fill it in anyway.", 'autodescription' ) );
+		$this->description( __( 'Add the link that leads directly to the social page of this website.', 'autodescription' ) );
+
+		?><hr><?php
+
+		$connectedi18n = _x( 'RelatedProfile', 'No spaces. E.g. https://facebook.com/RelatedProfile', 'autodescription' );
+		$profile18n = _x( 'Profile', 'Social Profile', 'autodescription' );
+
+		/**
+		 * @todo maybe genericons?
+		 */
+
+		$socialsites = array(
+			'facebook' => array(
+				'option'		=> 'knowledge_facebook',
+				'dashicon'		=> 'dashicons-facebook',
+				'desc' 			=> 'Facebook ' . __( 'Page', 'autodescription' ),
+				'placeholder'	=> 'http://www.facebook.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://facebook.com/me' ),
+			),
+			'twitter' => array(
+				'option'		=> 'knowledge_twitter',
+				'dashicon'		=> 'dashicons-twitter',
+				'desc' 			=> 'Twitter ' . $profile18n,
+				'placeholder'	=> 'http://www.twitter.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://twitter.com/home' ), // No example link available.
+			),
+			'gplus' => array(
+				'option'		=> 'knowledge_gplus',
+				'dashicon'		=> 'dashicons-googleplus',
+				'desc' 			=> 'Google+ ' . $profile18n,
+				'placeholder'	=> 'https://plus.google.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://plus.google.com/me' ),
+			),
+			'instagram' => array(
+				'option'		=> 'knowledge_instagram',
+				'dashicon'		=> 'genericon-instagram',
+				'desc' 			=> 'Instagram ' . $profile18n,
+				'placeholder'	=> 'http://instagram.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://instagram.com/' ), // No example link available.
+			),
+			'youtube' => array(
+				'option'		=> 'knowledge_youtube',
+				'dashicon'		=> 'genericon-youtube',
+				'desc' 			=> 'Youtube ' . $profile18n,
+				'placeholder'	=> 'http://www.youtube.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.youtube.com/user/%2f' ), // Yes a double slash.
+			),
+			'linkedin' => array(
+				'option'		=> 'knowledge_linkedin',
+				'dashicon'		=> 'genericon-linkedin-alt',
+				'desc' 			=> 'LinkedIn ' . $profile18n . ' ID',
+				'placeholder'	=> 'http://www.linkedin.com/profile/view?id=' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.linkedin.com/profile/view' ), // This generates a query arg. We should allow that.
+			),
+			'pinterest' => array(
+				'option'		=> 'knowledge_pinterest',
+				'dashicon'		=> 'genericon-pinterest-alt',
+				'desc' 			=> 'Pinterest ' . $profile18n,
+				'placeholder'	=> 'https://www.pinterest.com/' . $connectedi18n . '/',
+				'examplelink'	=> esc_url( 'https://www.pinterest.com/me/' ),
+			),
+			'soundcloud' => array(
+				'option'		=> 'knowledge_soundcloud',
+				'dashicon'		=> 'genericon-cloud', // I know, it's not the real one. D:
+				'desc' 			=> 'SoundCloud ' . $profile18n,
+				'placeholder'	=> 'https://soundcloud.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://soundcloud.com/you' ),
+			),
+			'tumblr' => array(
+				'option'		=> 'knowledge_tumblr',
+				'dashicon'		=> 'genericon-tumblr',
+				'desc' 			=> 'Tumblr ' . __( 'Blog', 'autodescription' ),
+				'placeholder'	=> 'https://tumblr.com/blog/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.tumblr.com/dashboard' ),  // No example link available.
+			),
+		);
+
+		foreach ( $socialsites as $key => $value ) {
+			?>
+			<p>
+				<label for="<?php $this->field_id( $value['option'] ); ?>">
+					<strong><?php echo esc_html( $value['desc'] ); ?></strong>
+					<?php
+					if ( $value['examplelink'] ) {
+						?><a href="<?php echo esc_url( $value['examplelink'] ); ?>" target="_blank">[?]</a><?php
+					}
+					?>
+				</label>
+			</p>
+			<p>
+				<input type="text" name="<?php $this->field_name( $value['option'] ); ?>" class="large-text" id="<?php $this->field_id( $value['option'] ); ?>" placeholder="<?php echo esc_attr( $value['placeholder'] ) ?>" value="<?php echo esc_attr( $this->get_field_value( $value['option'] ) ); ?>" />
+			</p>
+			<?php
+		}
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/robots-metabox.php
===================================================================
--- inc/views/metaboxes/robots-metabox.php	(nonexistent)
+++ inc/views/metaboxes/robots-metabox.php	(working copy)
@@ -0,0 +1,172 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_robots_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_robots_metabox_main' :
+
+		//* Robots types
+		$types = array(
+			'category' => __( 'Category', 'autodescription' ),
+			'tag' => __( 'Tag', 'autodescription' ),
+			'author' => __( 'Author', 'autodescription' ),
+			'date' => __( 'Date', 'autodescription' ),
+			'search' => __( 'Search Pages', 'autodescription' ),
+			'attachment' => __( 'Attachment Pages', 'autodescription' ),
+			'site' => _x( 'the entire site', '...for the entire site', 'autodescription' ),
+		);
+
+		//* Robots i18n
+		$robots = array(
+			'noindex' => array(
+				'value' => 'noindex',
+				'name' 	=> __( 'NoIndex', 'autodescription' ),
+				'desc' 	=> __( 'These options prevent indexing of the selected archives and pages. If you enable this, the selected archives or pages will be removed from Search Engine results pages.', 'autodescription' ),
+			),
+			'nofollow' => array(
+				'value' => 'nofollow',
+				'name'	=> __( 'NoFollow', 'autodescription' ),
+				'desc'	=> __( 'These options prevent links from being followed on the selected archives and pages. If you enable this, the selected archives or pages in-page links will gain no SEO value, including your own links.', 'autodescription' ),
+			),
+			'noarchive' => array(
+				'value' => 'noarchive',
+				'name'	=> __( 'NoArchive', 'autodescription' ),
+				'desc'	=> __( 'These options prevent caching of the selected archives and pages. If you enable this, Search Engines will not create a cached copy of the selected archives or pages.', 'autodescription' ),
+			),
+		);
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback'	=> function callback
+		 *				'dashicon'	=> WordPress Dashicon
+		 *				'args'		=> function args
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+				'general' => array(
+					'name' 		=> __( 'General', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_general_tab' ),
+					'dashicon'	=> 'admin-generic',
+					'args'		=> '',
+				),
+				'index' => array(
+					'name' 		=> __( 'Indexing', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'filter',
+					'args'		=> array( $types, $robots['noindex'] ),
+				),
+				'follow' => array(
+					'name'		=> __( 'Following', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'editor-unlink',
+					'args'		=> array( $types, $robots['nofollow'] ),
+				),
+				'archive' => array(
+					'name'		=> __( 'Archiving', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'download',
+					'args'		=> array( $types, $robots['noarchive'] ),
+				),
+			);
+
+		/**
+		 * Applies filters 'the_seo_framework_robots_settings_tabs' : array see $default_tabs
+		 *
+		 * Used to extend Social tabs
+		 * @since 2.2.4
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_robots_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'robots', $tabs, '2.2.4' );
+		break;
+
+	case 'the_seo_framework_robots_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Open Directory Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Sometimes, Search Engines use resources from certain Directories to find titles and descriptions for your content. You generally don't want them to. Turn these options on to prevent them from doing so.", 'autodescription' ) );
+		$this->description( __( "The Open Directory Project and the Yahoo! Directory may contain outdated SEO values. Therefore, it's best to leave these options checked.", 'autodescription' ) );
+
+		$fields = $this->wrap_fields(
+			array(
+				$this->make_checkbox(
+					'noodp',
+					sprintf( esc_html__( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noodp' ) ),
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'noydir',
+					sprintf( esc_html__( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noydir' ) ),
+					'',
+					false
+				),
+			), true
+		);
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Paginated Archive Settings', 'autodescription' ); ?></h4>
+		<p class="description"><?php printf( esc_html__( "Indexing the second or later page of any archive might cause duplication errors. Search Engines look down upon them; therefore, it's recommended to disable indexing of those pages.", 'autodescription' ), $this->code_wrap( 'noodp' ), $this->code_wrap( 'noydir' ) ); ?></p>
+		<?php
+
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'paged_noindex',
+				sprintf( esc_html__( 'Apply %s to every second or later archive page?', 'autodescription' ), $this->code_wrap( 'noindex' ) ),
+				'',
+				false
+			), true
+		);
+		break;
+
+	case 'the_seo_framework_robots_metabox_no' :
+
+		$ro_value = $robots['value'];
+		$ro_name = esc_html( $robots['name'] );
+		$ro_i18n = $robots['desc'];
+
+		?><h4><?php printf( esc_html__( '%s Robots Settings', 'autodescription' ), $ro_name ); ?></h4><?php
+		$this->description( $ro_i18n );
+
+		$checkboxes = '';
+		foreach ( $types as $type => $i18n ) {
+
+			if ( 'site' === $type || 'attachment' === $type || 'search' === $type ) {
+				//* Singular.
+				/* translators: 1: Option, 2: Post Type */
+				$label = sprintf( esc_html__( 'Apply %1$s to %2$s?', 'autodescription' ), $this->code_wrap( $ro_name ), esc_html( $i18n ) );
+			} else {
+				//* Archive.
+				/* translators: 1: Option, 2: Post Type */
+				$label = sprintf( esc_html__( 'Apply %1$s to %2$s Archives?', 'autodescription' ), $this->code_wrap( $ro_name ), esc_html( $i18n ) );
+			}
+
+			$id = $type . '_' . $ro_value;
+
+			//* Add <hr> if it's 'site'
+			$checkboxes .= 'site' === $type ? '<hr class="tsf-option-spacer">' : '';
+
+			$checkboxes .= $this->make_checkbox( esc_html( $id ), $label, '', false );
+		}
+
+		?><p class="tsf-fields"><?php
+			//* Echo checkboxes.
+			$this->wrap_fields( $checkboxes, true );
+		?></p><?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/schema-metabox.php
===================================================================
--- inc/views/metaboxes/schema-metabox.php	(nonexistent)
+++ inc/views/metaboxes/schema-metabox.php	(working copy)
@@ -0,0 +1,87 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_schema_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_schema_metabox_main' :
+
+		?><h4><?php esc_html_e( 'Schema.org Output Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $this->has_json_ld_plugin() ) :
+			$this->description( __( 'Another Schema.org plugin has been detected.', 'autodescription' ) );
+		else :
+			$this->description( __( 'The Schema.org markup is a standard way of annotating structured data for Search Engines. This markup is represented within hidden scripts throughout the website.', 'autodescription' ) );
+			$this->description( __( 'When your web pages include structured data markup, Search Engines can use that data to index your content better, present it more prominently in Search Results, and use it in several different applications.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<?php /* translators: https://developers.google.com/search/docs/data-types/sitelinks-searchbox */ ?>
+			<h4><?php echo esc_html( _x( 'Sitelinks Searchbox', 'Product name', 'autodescription' ) ); ?></h4><?php
+			$this->description( __( 'When Search users search for your brand name, the following option allows them to search through your website directly from the Search Results.', 'autodescription' ) );
+
+			$info = $this->make_info(
+				_x( 'Sitelinks Searchbox', 'Product name', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/sitelinks-searchbox',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_searchbox',
+					esc_html_x( 'Enable Sitelinks Searchbox?', 'Product name', 'autodescription' ) . ' ' . $info,
+					'',
+					false
+				),
+				true
+			);
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Site Name', 'autodescription' ); ?></h4><?php
+			$this->description( __( "When using breadcrumbs, the first entry is by default your website's address. Using the following option will convert it to the Site Name.", 'autodescription' ) );
+
+			$info = $this->make_info(
+				__( 'Include your Site Name in Search Results', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/sitename',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_sitename',
+					esc_html__( 'Convert URL to Site Name?', 'autodescription' ) . ' ' . $info,
+					sprintf( esc_html__( 'The Site Name is: %s', 'autodescription' ), $this->code_wrap( $this->get_blogname() ) ),
+					false
+				),
+				true
+			);
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Breadcrumbs', 'autodescription' ); ?></h4><?php
+			$this->description( __( "Breadcrumb trails indicate the page's position in the site hierarchy. Using the following option will show the hierarchy within the Search Results when available.", 'autodescription' ) );
+
+			$info = $this->make_info(
+				__( 'About Breadcrumbs', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/breadcrumbs',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_breadcrumbs',
+					esc_html__( 'Enable Breadcrumbs?', 'autodescription' ) . ' ' . $info,
+					esc_html__( 'Multiple trails can be outputted. The longest trail is prioritized.', 'autodescription' ),
+					false
+				),
+				true
+			);
+		endif;
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/sitemaps-metabox.php
===================================================================
--- inc/views/metaboxes/sitemaps-metabox.php	(nonexistent)
+++ inc/views/metaboxes/sitemaps-metabox.php	(working copy)
@@ -0,0 +1,265 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_sitemaps_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_sitemaps_metabox_main' :
+
+		if ( ! $this->pretty_permalinks ) {
+
+			$permalink_settings_url = admin_url( 'options-permalink.php' );
+			$here = '<a href="' . esc_url( $permalink_settings_url ) . '" target="_blank" title="' . esc_attr__( 'Permalink Settings', 'autodescription' ) . '">' . esc_html_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+
+			?><h4><?php esc_html_e( "You're using the plain permalink structure.", 'autodescription' ); ?></h4><?php
+			$this->description( __( "This means we can't output the sitemap through the WordPress rewrite rules.", 'autodescription' ) );
+			?><hr><?php
+			$this->description_noesc( sprintf( esc_html_x( "Change your Permalink Settings %s (Recommended: 'postname').", '%s = here', 'autodescription' ), $here ) );
+
+		} else {
+
+			/**
+			 * Parse tabs content
+			 *
+			 * @param array $default_tabs { 'id' = The identifier =>
+			 *			array(
+			 *				'name' 		=> The name
+			 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+			 *				'dashicon'	=> Desired dashicon
+			 *			)
+			 * }
+			 *
+			 * @since 2.2.9
+			 */
+			$default_tabs = array(
+				'general' => array(
+					'name' 		=> __( 'General', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_general_tab' ),
+					'dashicon'	=> 'admin-generic',
+				),
+				'robots' => array(
+					'name'		=> 'Robots.txt',
+					'callback'	=> array( $this, 'sitemaps_metabox_robots_tab' ),
+					'dashicon'	=> 'share-alt2',
+				),
+				'timestamps' => array(
+					'name'		=> __( 'Timestamps', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_timestamps_tab' ),
+					'dashicon'	=> 'backup',
+				),
+				'notify' => array(
+					'name'		=> _x( 'Ping', 'Ping or notify Search Engine', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_notify_tab' ),
+					'dashicon'	=> 'megaphone',
+				),
+			);
+
+			/**
+			 * Applies filters the_seo_framework_sitemaps_settings_tabs : array see $default_tabs
+			 *
+			 * Used to extend Knowledge Graph tabs
+			 */
+			$defaults = (array) apply_filters( 'the_seo_framework_sitemaps_settings_tabs', $default_tabs, $args );
+
+			$tabs = wp_parse_args( $args, $defaults );
+			$use_tabs = true;
+
+			$sitemap_plugin = $this->detect_sitemap_plugin();
+			$sitemap_detected = $this->has_sitemap_xml();
+			$robots_detected = $this->has_robots_txt();
+
+			/**
+			 * Remove the timestamps and notify submenus
+			 * @since 2.5.2
+			 */
+			if ( $sitemap_plugin || $sitemap_detected ) {
+				unset( $tabs['timestamps'] );
+				unset( $tabs['notify'] );
+			}
+
+			/**
+			 * Remove the robots submenu
+			 * @since 2.5.2
+			 */
+			if ( $robots_detected ) {
+				unset( $tabs['robots'] );
+			}
+
+			if ( $robots_detected && ( $sitemap_plugin || $sitemap_detected ) )
+				$use_tabs = false;
+
+			$this->nav_tab_wrapper( 'sitemaps', $tabs, '2.2.8', $use_tabs );
+
+		}
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_general' :
+
+		$site_url = $this->the_home_url_from_cache( true );
+
+		$sitemap_url = $site_url . 'sitemap.xml';
+		$has_sitemap_plugin = $this->detect_sitemap_plugin();
+		$sitemap_detected = $this->has_sitemap_xml();
+
+		?><h4><?php esc_html_e( 'Sitemap Integration Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $has_sitemap_plugin ) {
+			$this->description( __( 'Another active sitemap plugin has been detected. This means that the sitemap functionality has been replaced.', 'autodescription' ) );
+		} elseif ( $sitemap_detected ) {
+			$this->description( __( 'A sitemap has been detected in the root folder of your website. This means that the sitemap functionality has no effect.', 'autodescription' ) );
+		} else {
+			$this->description( __( 'The Sitemap is an XML file that lists pages and posts for your website along with optional metadata about each post or page. This helps Search Engines crawl your website more easily.', 'autodescription' ) );
+			$this->description( __( 'The optional metadata include the post and page modified time and a page priority indication, which is automated.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Sitemap Output', 'autodescription' ); ?></h4>
+			<?php
+
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'sitemaps_output',
+					__( 'Output Sitemap?', 'autodescription' ),
+					'',
+					true
+				), true
+			);
+		}
+
+		if ( ! ( $has_sitemap_plugin || $sitemap_detected ) && $this->get_option( 'sitemaps_output' ) ) {
+			$here = '<a href="' . esc_url( $sitemap_url ) . '" target="_blank" title="' . esc_attr__( 'View sitemap', 'autodescription' ) . '">' . esc_attr_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+			$this->description_noesc( sprintf( _x( 'The sitemap can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		}
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_robots' :
+
+		$site_url = $this->the_home_url_from_cache( true );
+		$robots_url = trailingslashit( $site_url ) . 'robots.txt';
+		$here = '<a href="' . esc_url( $robots_url ) . '" target="_blank" title="' . esc_attr__( 'View robots.txt', 'autodescription' ) . '">' . esc_html_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+
+		?><h4><?php esc_html_e( 'Robots.txt Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $this->can_do_sitemap_robots() ) :
+			$this->description( __( 'The robots.txt file is the first thing Search Engines look for. If you add the sitemap location in the robots.txt file, then Search Engines will look for and index the sitemap.', 'autodescription' ) );
+			$this->description( __( 'If you do not add the sitemap location to the robots.txt file, you will need to notify Search Engines manually through the Webmaster Console provided by the Search Engines.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Add sitemap location in robots.txt', 'autodescription' ); ?></h4>
+			<?php
+
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'sitemaps_robots',
+					__( 'Add sitemap location in robots?', 'autodescription' ),
+					'',
+					true
+				), true
+			);
+		else :
+			$this->description( __( 'Another robots.txt sitemap Location addition has been detected.', 'autodescription' ) );
+		endif;
+
+		$this->description_noesc( sprintf( esc_html_x( 'The robots.txt file can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_timestamps' :
+
+		//* Sets timezone according to WordPress settings.
+		$this->set_timezone();
+
+		$timestamp_0 = date( 'Y-m-d' );
+
+		/**
+		 * @link https://www.w3.org/TR/NOTE-datetime
+		 * We use the second expression of the time zone offset handling.
+		 */
+		$timestamp_1 = date( 'Y-m-d\TH:iP' );
+
+		//* Reset timezone to previous value.
+		$this->reset_timezone();
+
+		?><h4><?php esc_html_e( 'Timestamps Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The modified time suggests to Search Engines where to look for content changes. It has no impact on the SEO value unless you drastically change pages or posts. It then depends on how well your content is constructed.', 'autodescription' ) );
+		$this->description( __( "By default, the sitemap only outputs the modified date if you've enabled them within the Social Metabox. This setting overrides those settings for the Sitemap.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Output Modified Date', 'autodescription' ); ?></h4>
+		<?php
+
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'sitemaps_modified',
+				sprintf( esc_html__( 'Add %s to the sitemap?', 'autodescription' ), $this->code_wrap( '<lastmod>' ) ),
+				'',
+				false
+			), true
+		);
+
+		?>
+		<hr>
+
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Timestamp Format Settings', 'autodescription' ); ?></h4></legend>
+			<?php $this->description( __( 'Determines how specific the modification timestamp is.', 'autodescription' ) ); ?>
+
+			<p id="sitemaps-timestamp-format" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>" value="0" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '0' ); ?> />
+					<label for="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>">
+						<span title="<?php esc_attr_e( 'Complete date', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_0 ); ?> [?]</span>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>" value="1" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '1' ); ?> />
+					<label for="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>">
+						<span title="<?php esc_attr_e( 'Complete date plus hours, minutes and timezone', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_1 ); ?> [?]</span>
+					</label>
+				</span>
+			</p>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_notify' :
+
+		?><h4><?php esc_html_e( 'Ping Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Notifying Search Engines of a sitemap change is helpful to get your content indexed as soon as possible.', 'autodescription' ) );
+		$this->description( __( 'By default this will happen at most once an hour.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Notify Search Engines', 'autodescription' ); ?></h4>
+		<?php
+
+		$engines = array(
+			'ping_google'	=> 'Google',
+			'ping_bing' 	=> 'Bing',
+			'ping_yandex'	=> 'Yandex',
+		);
+
+		$ping_checkbox = '';
+
+		foreach ( $engines as $option => $engine ) {
+			$ping_label = sprintf( __( 'Notify %s about sitemap changes?', 'autodescription' ), $engine );
+			$ping_checkbox .= $this->make_checkbox( $option, $ping_label, '', true );
+		}
+
+		//* Echo checkbox.
+		$this->wrap_fields( $ping_checkbox, true );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/social-metabox.php
===================================================================
--- inc/views/metaboxes/social-metabox.php	(nonexistent)
+++ inc/views/metaboxes/social-metabox.php	(working copy)
@@ -0,0 +1,323 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_social_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_social_metabox_main' :
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'facebook' => array(
+				'name'		=> 'Facebook',
+				'callback'	=> array( $this, 'social_metabox_facebook_tab' ),
+				'dashicon'	=> 'facebook-alt',
+			),
+			'twitter' => array(
+				'name'		=> 'Twitter',
+				'callback'	=> array( $this, 'social_metabox_twitter_tab' ),
+				'dashicon'	=> 'twitter',
+			),
+			'postdates' => array(
+				'name'		=> __( 'Post Dates', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_postdates_tab' ),
+				'dashicon'	=> 'backup',
+			),
+			'relationships' => array(
+				'name'		=> __( 'Link Relationships', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_relationships_tab' ),
+				'dashicon'	=> 'leftright',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_social_settings_tabs : array see $default_tabs
+		 *
+		 * Used to extend Social tabs
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_social_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'social', $tabs, '2.2.2' );
+		break;
+
+	case 'the_seo_framework_social_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Site Shortlink Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The shortlink tag might have some use for 3rd party service discoverability, but it has little to no SEO value whatsoever.', 'autodescription' ) );
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'shortlink_tag',
+				__( 'Output shortlink tag?', 'autodescription' ),
+				'',
+				true
+			),
+			true
+		);
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Social Meta Tags Settings', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'Output various meta tags for social site integration, among other 3rd party services.', 'autodescription' ) );
+
+		?><hr><?php
+
+		//* Echo Open Graph Tags checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'og_tags',
+				__( 'Output Open Graph meta tags?', 'autodescription' ),
+				__( 'Facebook, Twitter, Pinterest and many other social sites make use of these tags.', 'autodescription' ),
+				true
+			),
+			true
+		);
+
+		if ( $this->detect_og_plugin() )
+			$this->description( __( 'Note: Another Open Graph plugin has been detected.', 'autodescription' ) );
+
+		?><hr><?php
+
+		//* Echo Facebook Tags checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'facebook_tags',
+				__( 'Output Facebook meta tags?', 'autodescription' ),
+				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Facebook' ),
+				true
+			),
+			true
+		);
+
+		?><hr><?php
+
+		//* Echo Twitter Tags checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'twitter_tags',
+				__( 'Output Twitter meta tags?', 'autodescription' ),
+				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Twitter' ),
+				true
+			),
+			true
+		);
+
+		if ( $this->detect_twitter_card_plugin() ) {
+			$this->description( __( 'Note: Another Twitter Card plugin has been detected.', 'autodescription' ) );
+		}
+		break;
+
+	case 'the_seo_framework_social_metabox_facebook' :
+
+		$fb_author = $this->get_field_value( 'facebook_author' );
+		$fb_author_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourPersonalProfile', 'Example Facebook Personal URL', 'autodescription' ) : '';
+
+		$fb_publisher = $this->get_field_value( 'facebook_publisher' );
+		$fb_publisher_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourVerifiedBusinessProfile', 'Example Verified Facebook Business URL', 'autodescription' ) : '';
+
+		$fb_appid = $this->get_field_value( 'facebook_appid' );
+		$fb_appid_placeholder = empty( $fb_appid ) ? '123456789012345' : '';
+
+		?><h4><?php esc_html_e( 'Default Facebook Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Facebook post sharing works mostly through Open Graph. However, you can also link your Business and Personal Facebook pages, among various other options.', 'autodescription' ) );
+		$this->description( __( 'When these options are filled in, Facebook might link your Facebook profile to be followed and liked when your post or page is shared.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_author' ); ?>">
+				<strong><?php esc_html_e( 'Article Author Facebook URL', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://facebook.com/me' ); ?>" class="description" target="_blank" title="<?php esc_attr_e( 'Your Facebook Profile', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_author' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_author' ); ?>" placeholder="<?php echo esc_attr( $fb_author_placeholder ); ?>" value="<?php echo esc_attr( $fb_author ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_publisher' ); ?>">
+				<strong><?php esc_html_e( 'Article Publisher Facebook URL', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://instantarticles.fb.com/' ); ?>" class="description" target="_blank" title="<?php esc_html_e( 'To use this, you need to be a verified business', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_publisher' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_publisher' ); ?>" placeholder="<?php echo esc_attr( $fb_publisher_placeholder ); ?>" value="<?php echo esc_attr( $fb_publisher ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_appid' ); ?>">
+				<strong><?php esc_html_e( 'Facebook App ID', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://developers.facebook.com/apps' ); ?>" target="_blank" class="description" title="<?php esc_html_e( 'Get Facebook App ID', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_appid' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_appid' ); ?>" placeholder="<?php echo esc_attr( $fb_appid_placeholder ); ?>" value="<?php echo esc_attr( $fb_appid ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_social_metabox_twitter' :
+
+		$tw_site = $this->get_field_value( 'twitter_site' );
+		$tw_site_placeholder = empty( $tw_site ) ? _x( '@your-site-username', 'Twitter @username', 'autodescription' ) : '';
+
+		$tw_creator = $this->get_field_value( 'twitter_creator' );
+		$tw_creator_placeholder = empty( $tw_creator ) ? _x( '@your-personal-username', 'Twitter @username', 'autodescription' ) : '';
+
+		$twitter_card = $this->get_twitter_card_types();
+
+		?><h4><?php esc_html_e( 'Default Twitter Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Twitter post sharing works mostly through Open Graph. However, you can also link your Business and Personal Twitter pages, among various other options.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<fieldset id="tsf-twitter-cards">
+			<legend><h4><?php esc_html_e( 'Twitter Card Type', 'autodescription' ); ?></h4></legend>
+			<?php $this->description_noesc( sprintf( esc_html__( 'What kind of Twitter card would you like to use? It will default to %s if no image is found.', 'autodescription' ), $this->code_wrap( 'summary' ) ) ); ?>
+
+			<p class="tsf-fields">
+			<?php
+				foreach ( $twitter_card as $type => $name ) {
+					?>
+					<span class="tsf-toblock">
+						<input type="radio" name="<?php $this->field_name( 'twitter_card' ); ?>" id="<?php $this->field_id( 'twitter_card_' . $type ); ?>" value="<?php echo esc_attr( $type ); ?>" <?php checked( $this->get_field_value( 'twitter_card' ), $type ); ?> />
+						<label for="<?php $this->field_id( 'twitter_card_' . $type ); ?>">
+							<span><?php echo $this->code_wrap( $name ); ?></span>
+							<a class="description" href="<?php echo esc_url( 'https://dev.twitter.com/cards/types/' . $name ); ?>" target="_blank" title="Twitter Card <?php echo esc_attr( $name ) . ' ' . esc_attr__( 'Example', 'autodescription' ); ?>"><?php esc_html_e( 'Example', 'autodescription' ); ?></a>
+						</label>
+					</span>
+					<?php
+				}
+			?>
+			</p>
+		</fieldset>
+
+		<hr>
+
+		<?php $this->description( __( 'When the following options are filled in, Twitter might link your Twitter Site or Personal Profile when your post or page is shared.', 'autodescription' ) ); ?>
+
+		<p>
+			<label for="<?php $this->field_id( 'twitter_site' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( "Your Website's Twitter Profile", 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php esc_html_e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'twitter_site' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_site' ); ?>" placeholder="<?php echo esc_attr( $tw_site_placeholder ); ?>" value="<?php echo esc_attr( $tw_site ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'twitter_creator' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Your Personal Twitter Profile', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'twitter_creator' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_creator' ); ?>" placeholder="<?php echo esc_attr( $tw_creator_placeholder ); ?>" value="<?php echo esc_attr( $tw_creator ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_social_metabox_postdates' :
+
+		$pages_i18n = esc_html__( 'Pages', 'autodescription' );
+		$posts_i18n = esc_html__( 'Posts', 'autodescription' );
+		$home_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		?><h4><?php esc_html_e( 'Post Date Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Some Search Engines output the publishing date and modified date next to the search results. These help Search Engines find new content and could impact the SEO value.', 'autodescription' ) );
+		$this->description( __( "It's recommended on posts, but it's not recommended on pages unless you modify or create new pages frequently.", 'autodescription' ) );
+
+		/* translators: 1: Option, 2: Post Type */
+		$post_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $posts_i18n );
+		$post_publish_time_checkbox = $this->make_checkbox( 'post_publish_time', $post_publish_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$page_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $pages_i18n );
+		$page_publish_time_checkbox = $this->make_checkbox( 'page_publish_time', $page_publish_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $post_publish_time_checkbox . $page_publish_time_checkbox, true );
+
+		/* translators: 1: Option, 2: Post Type */
+		$post_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $posts_i18n );
+		$post_modify_time_checkbox = $this->make_checkbox( 'post_modify_time', $post_modify_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$page_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $pages_i18n );
+		$page_modify_time_checkbox = $this->make_checkbox( 'page_modify_time', $page_modify_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $post_modify_time_checkbox . $page_modify_time_checkbox, true );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Home Page', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'Because you only publish the Home Page once, Search Engines might think your website is outdated. This can be prevented by disabling the following options.', 'autodescription' ) );
+
+		/* translators: 1: Option, 2: Post Type */
+		$home_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $home_i18n );
+		$home_publish_time_checkbox = $this->make_checkbox( 'home_publish_time', $home_publish_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$home_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $home_i18n );
+		$home_modify_time_checkbox = $this->make_checkbox( 'home_modify_time', $home_modify_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $home_publish_time_checkbox . $home_modify_time_checkbox, true );
+		break;
+
+	case 'the_seo_framework_social_metabox_relationships' :
+
+		?><h4><?php esc_html_e( 'Link Relationship Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Some Search Engines look for relations between the content of your pages. If you have multiple pages for a single Post or Page, or have archives indexed, this option will help Search Engines look for the right page to display in the Search Results.', 'autodescription' ) );
+		$this->description( __( "It's recommended to turn this option on for better SEO consistency and to prevent duplicate content errors.", 'autodescription' ) );
+
+		?><hr><?php
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_posts_label = sprintf( esc_html__( 'Add %s link tags to Posts and Pages?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_posts_checkbox = $this->make_checkbox( 'prev_next_posts', $prev_next_posts_label, '', false );
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_archives_label = sprintf( esc_html__( 'Add %s link tags to Archives?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_archives_checkbox = $this->make_checkbox( 'prev_next_archives', $prev_next_archives_label, '', false );
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_frontpage_label = sprintf( esc_html__( 'Add %s link tags to the Home Page?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_frontpage_checkbox = $this->make_checkbox( 'prev_next_frontpage', $prev_next_frontpage_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $prev_next_posts_checkbox . $prev_next_archives_checkbox . $prev_next_frontpage_checkbox, true );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/title-metabox.php
===================================================================
--- inc/views/metaboxes/title-metabox.php	(nonexistent)
+++ inc/views/metaboxes/title-metabox.php	(working copy)
@@ -0,0 +1,257 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_title_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_title_metabox_main' :
+
+		$latest_post_id = $this->get_latest_post_id();
+
+		if ( $latest_post_id ) {
+			$post = get_post( $latest_post_id, OBJECT );
+			$title = esc_attr( $post->post_title );
+		} else {
+			$title = esc_attr__( 'Example Post Title', 'autodescription' );
+		}
+
+		$blogname = $this->get_blogname();
+		$sep = $this->get_separator( 'title' );
+
+		$additions_left = '<span class="tsf-title-additions-js">' . $blogname . '<span class="autodescription-sep-js">' . " $sep " . '</span></span>';
+		$additions_right = '<span class="tsf-title-additions-js"><span class="autodescription-sep-js">' . " $sep " . '</span>' . $blogname . '</span>';
+
+		$example_left = '<em>' . $additions_left . $title . '</em>';
+		$example_right = '<em>' . $title . $additions_right . '</em>';
+
+		//* There's no need for "hide-if-no-js" here.
+		//* Check left first, as right is default (and thus fallback).
+		$showleft = 'left' === $this->get_option( 'title_location' );
+
+		?><h4><?php esc_html_e( 'Automated Title Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The page title is prominently shown within the browser tab as well as within the Search Engine results pages.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Title Output', 'autodescription' ); ?></h4>
+		<p>
+			<span class="tsf-title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
+			<span class="tsf-title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
+		</p>
+
+		<hr>
+		<?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> __( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+				'args'		=> array(
+					'examples' => array(
+						'left'	=> $example_left,
+						'right' => $example_right,
+					),
+				),
+			),
+			'prefixes' => array(
+				'name'		=> __( 'Prefixes', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_prefixes_tab' ),
+				'dashicon'	=> 'plus-alt',
+				'args'		=> array(
+					'additions' => array(
+						'left'	=> $additions_left,
+						'right' => $additions_right,
+					),
+					'showleft' => $showleft,
+				),
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_title_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 *
+		 * Used to extend Description tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_title_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'title', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_title_metabox_general' :
+		$title_separator = $this->get_separator_list();
+		$recommended = ' class="tsf-recommended" title="' . esc_attr__( 'Recommended', 'autodescription' ) . '"';
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Separator', 'autodescription' ); ?></h4></legend>
+			<p id="tsf-title-separator" class="tsf-fields">
+			<?php foreach ( $title_separator as $name => $html ) { ?>
+				<input type="radio" name="<?php $this->field_name( 'title_seperator' ); ?>" id="<?php $this->field_id( 'title_seperator_' . $name ); ?>" value="<?php echo esc_attr( $name ); ?>" <?php checked( $this->get_field_value( 'title_seperator' ), $name ); ?> />
+				<label for="<?php $this->field_id( 'title_seperator_' . $name ); ?>" <?php echo in_array( $name, array( 'dash', 'pipe' ), true ) ? $recommended : ''; ?>><?php echo esc_html( $html ); ?></label>
+			<?php } ?>
+			</p>
+			<?php $this->description( __( 'If the title consists of two parts (original title and optional addition), then the separator will go in-between them.', 'autodescription' ) ); ?>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_title_metabox_additions' :
+
+		$language = $this->google_language();
+
+		$example_left = $examples['left'];
+		$example_right = $examples['right'];
+
+		$home_page_has_option = __( 'The Home Page has a specific option.', 'autodescription' );
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
+
+			<?php $this->description( __( 'Determines which side the added title text will go on.', 'autodescription' ) ); ?>
+
+			<p id="tsf-title-location" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'title_location' ), 'left' ); ?> />
+					<label for="<?php $this->field_id( 'title_location_left' ); ?>">
+						<span><?php esc_html_e( 'Left:', 'autodescription' ); ?></span>
+						<?php echo $this->code_wrap_noesc( $example_left ) ?>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'title_location' ), 'right' ); ?> />
+					<label for="<?php $this->field_id( 'title_location_right' ); ?>">
+						<span><?php esc_html_e( 'Right:', 'autodescription' ); ?></span>
+						<?php echo $this->code_wrap_noesc( $example_right ); ?>
+					</label>
+				</span>
+			</p>
+			<?php $this->description( $home_page_has_option ); ?>
+		</fieldset>
+		<?php
+
+		//* Only add this option if the theme is doing it right.
+		if ( $this->can_manipulate_title() ) :
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Remove Blogname from Title', 'autodescription' ); ?></h4>
+			<div id="tsf-title-additions-toggle">
+				<?php
+				$info = $this->make_info(
+					__( 'This might decouple your posts and pages from the rest of the website', 'autodescription' ),
+					'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3',
+					false
+				);
+
+				$this->wrap_fields(
+					$this->make_checkbox(
+						'title_rem_additions',
+						esc_html__( 'Remove Blogname from title?', 'autodescription' ) . ' ' . $info,
+						'',
+						false
+					),
+					true
+				);
+				?>
+			</div>
+			<?php
+			$this->description( __( 'Only use this option if you are aware of its SEO effects.', 'autodescription' ), false );
+			echo ' ';
+			$this->description( $home_page_has_option, false );
+		endif;
+		break;
+
+	case 'the_seo_framework_title_metabox_prefixes' :
+
+		//* Get translated category label, if it exists. Otherwise, fallback to translation.
+		$term_labels = $this->get_tax_labels( 'category' );
+		$label = isset( $term_labels->singular_name ) ? $term_labels->singular_name : __( 'Category', 'autodescription' );
+
+		/**
+		 * @since WordPress Core 4.5.0 get_terms first parameter is converted to the latter.
+		 */
+		$cats = get_terms( array(), array( 'taxonomy' => 'category', 'fields' => 'ids', 'hide_empty' => false, 'order' => 'ASC', 'number' => 1 ) );
+		if ( is_array( $cats ) && ! empty( $cats ) ) {
+			//* Category should exist.
+			$cat = reset( $cats );
+		} else {
+			//* Default fallback category.
+			$cat = 1;
+		}
+
+		//* If cat is found, it will return its name. Otherwise it's an empty string.
+		$cat_name = get_cat_name( $cat );
+		$cat_name = $cat_name ? $cat_name : __( 'Example Category', 'autodescription' );
+
+		$display_prefix = $this->is_option_checked( 'title_rem_prefixes' ) ? 'none' : 'inline';
+		$title = '<span class="tsf-title-prefix-example" style="display:' . $display_prefix . '">' . esc_html( $label ) . ': </span>' . esc_html( $cat_name );
+
+		$additions_left = $additions['left'];
+		$additions_right = $additions['right'];
+
+		$example_left = '<em>' . $additions_left . $title . '</em>';
+		$example_right = '<em>' . $title . $additions_right . '</em>';
+
+		$language = $this->google_language();
+
+		/**
+		 * @todo use checkbox function
+		 * @priority low 2.6.x
+		 */
+
+		?><h4><?php esc_html_e( 'Title prefix options', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'On archives a descriptive prefix may be added to the title.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Archive Title Output', 'autodescription' ); ?></h4>
+		<p>
+			<span class="tsf-title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
+			<span class="tsf-title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
+		</p>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Remove Archive Title Prefixes', 'autodescription' ); ?></h4>
+		<p id="title-prefixes-toggle">
+			<label for="<?php $this->field_id( 'title_rem_prefixes' ); ?>">
+				<input type="checkbox" name="<?php $this->field_name( 'title_rem_prefixes' ); ?>" id="<?php $this->field_id( 'title_rem_prefixes' ); ?>" <?php $this->is_conditional_checked( 'title_rem_prefixes' ); ?> value="1" <?php checked( $this->get_field_value( 'title_rem_prefixes' ) ); ?> />
+				<?php esc_html_e( 'Remove prefixes from title?', 'autodescription' ); ?>
+			</label>
+			<?php
+			$this->make_info(
+				__( "The prefix helps visitors and Search Engines determine what kind of page they're visiting", 'autodescription' ),
+				'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3',
+				true
+			);
+			?>
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/webmaster-metabox.php
===================================================================
--- inc/views/metaboxes/webmaster-metabox.php	(nonexistent)
+++ inc/views/metaboxes/webmaster-metabox.php	(working copy)
@@ -0,0 +1,69 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_webmaster_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_webmaster_metabox_main' :
+		$site_url = $this->the_home_url_from_cache();
+		$language = $this->google_language();
+
+		$bing_site_url = 'https://www.bing.com/webmaster/configure/verify/ownership?url=' . urlencode( $site_url );
+		$google_site_url = 'https://www.google.com/webmasters/verification/verification?hl=' . $language . '&siteUrl=' . $site_url;
+		$pint_site_url = 'https://analytics.pinterest.com/';
+		$yandex_site_url = 'https://webmaster.yandex.com/site/verification.xml';
+
+		?><h4><?php esc_html_e( 'Webmaster Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "When adding your website to Google, Bing and other Webmaster Tools, you'll be asked to add a code or file to your website for verification purposes. These options will help you easily integrate those codes.", 'autodescription' ) );
+		$this->description( __( "Verifying your website has no SEO value whatsoever. But you might gain added benefits such as search ranking insights to help you improve your website's content.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'google_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Google Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $google_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Google Verification code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'google_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'google_verification' ); ?>" placeholder="ABC1d2eFg34H5iJ6klmNOp7qRstUvWXyZaBc8dEfG9" value="<?php echo esc_attr( $this->get_field_value( 'google_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'bing_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Bing Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $bing_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Bing Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'bing_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'bing_verification' ); ?>" placeholder="123A456B78901C2D3456E7890F1A234D" value="<?php echo esc_attr( $this->get_field_value( 'bing_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'yandex_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Yandex Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $yandex_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Yandex Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'yandex_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'yandex_verification' ); ?>" placeholder="12345abc678901d2" value="<?php echo esc_attr( $this->get_field_value( 'yandex_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'pint_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Pinterest Analytics Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $pint_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Pinterest Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'pint_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'pint_verification' ); ?>" placeholder="123456a7b8901de2fa34bcdef5a67b98" value="<?php echo esc_attr( $this->get_field_value( 'pint_verification' ) ); ?>" />
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/description-metabox.php
===================================================================
--- inc/views/metaboxes/description-metabox.php	(nonexistent)
+++ inc/views/metaboxes/description-metabox.php	(working copy)
@@ -0,0 +1,149 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_description_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_description_metabox_main' :
+
+		$blogname = $this->escape_description( $this->get_blogname() );
+		$sep = $this->get_separator( 'description' );
+
+		/**
+		 * Generate example.
+		 */
+		$page_title = $this->escape_description( __( 'Example Title', 'autodescription' ) );
+		$on = $this->escape_description( _x( 'on', 'Placement. e.g. Post Title "on" Blog Name', 'autodescription' ) );
+		$excerpt = $this->escape_description( __( 'This is an example description...', 'autodescription' ) );
+
+		//* Put it together.
+		$example 	= '<span id="tsf-description-additions-js">'
+						. $page_title
+						. '<span id="tsf-on-blogname-js">' . " $on " . $blogname . '</span>'
+						. '<span id="autodescription-descsep-js">' . " $sep " . '</span>'
+					. '</span>'
+					. $excerpt
+					;
+
+		$nojs_additions = '';
+		//* Add or remove additions based on option.
+		if ( $this->add_description_additions() ) {
+			$description_blogname_additions = $this->get_option( 'description_blogname' );
+
+			$nojs_additions = $description_blogname_additions ? $page_title . " $on " . $blogname : $page_title;
+			$nojs_additions = $nojs_additions . " $sep ";
+		}
+
+		$example_nojs = $nojs_additions . $excerpt;
+
+		?><h4><?php printf( esc_html__( 'Automated Description Settings', 'autodescription' ) ); ?></h4><?php
+		$this->description( __( 'The meta description can be used to determine the text used under the title on Search Engine results pages.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Description Output', 'autodescription' ); ?></h4>
+		<p class="hide-if-no-js"><?php echo $this->code_wrap_noesc( $example ); ?></p>
+		<p class="hide-if-js"><?php echo $this->code_wrap( $example_nojs ); ?></p>
+
+		<hr>
+		<?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.6.0
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> esc_html__( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'description_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> esc_html__( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'description_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_description_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 *
+		 * Used to extend Description tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_description_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'description', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_description_metabox_general' :
+
+		//* Let's use the same separators as for the title.
+		$description_separator = $this->get_separator_list();
+		$sep_option = $this->get_option( 'description_separator' );
+		$sep_option = $sep_option ? $sep_option : 'pipe';
+
+		$recommended = ' class="tsf-recommended" title="' . esc_attr__( 'Recommended', 'autodescription' ) . '"';
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Description Excerpt Separator', 'autodescription' ); ?></h4></legend>
+			<p id="tsf-description-separator" class="tsf-fields">
+			<?php foreach ( $description_separator as $name => $html ) { ?>
+				<input type="radio" name="<?php $this->field_name( 'description_separator' ); ?>" id="<?php $this->field_id( 'description_separator' . $name ); ?>" value="<?php echo $name ?>" <?php checked( $sep_option, $name ); ?> />
+				<label for="<?php $this->field_id( 'description_separator' . $name ); ?>" <?php echo ( 'pipe' === $name || 'dash' === $name ) ? $recommended : ''; ?>><?php echo $html ?></label>
+			<?php } ?>
+			</p>
+			<span class="description"><?php esc_html_e( 'If the Automated Description consists of two parts (title and excerpt), then the separator will go in-between them.', 'autodescription' ); ?></span>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_description_metabox_additions' :
+
+		$language = $this->google_language();
+		$google_explanation = esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' );
+
+		?>
+		<h4><?php esc_html_e( 'Description Additions Settings', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'To create a more organic description, a small introduction can be added before the description.', 'autodescription' ) );
+		$this->description( __( 'The introduction consists of the title and optionally the blogname.', 'autodescription' ) );
+		?>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Add descriptive Additions to Description', 'autodescription' ); ?></h4>
+		<p id="tsf-description-additions-toggle">
+			<label for="<?php $this->field_id( 'description_additions' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'description_additions' ); ?>" id="<?php $this->field_id( 'description_additions' ); ?>" <?php $this->is_conditional_checked( 'description_additions' ); ?> value="1" <?php checked( $this->get_field_value( 'description_additions' ) ); ?> />
+				<?php esc_html_e( 'Add Additions to automated description?', 'autodescription' ); ?>
+				<a href="<?php echo esc_url( $google_explanation ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'This creates good meta descriptions', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+
+		<h4><?php esc_html_e( 'Add Blogname to Additions', 'autodescription' ); ?></h4>
+		<p id="tsf-description-onblogname-toggle">
+			<label for="<?php $this->field_id( 'description_blogname' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'description_blogname' ); ?>" id="<?php $this->field_id( 'description_blogname' ); ?>" <?php $this->is_conditional_checked( 'description_blogname' ); ?> value="1" <?php checked( $this->get_field_value( 'description_blogname' ) ); ?> />
+				<?php esc_html_e( 'Add Blogname to automated description additions?', 'autodescription' ); ?>
+			</label>
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/feed-metabox.php
===================================================================
--- inc/views/metaboxes/feed-metabox.php	(nonexistent)
+++ inc/views/metaboxes/feed-metabox.php	(working copy)
@@ -0,0 +1,49 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_feed_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_feed_metabox_main' :
+		?><h4><?php esc_html_e( 'Content Feed Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Sometimes, your content can get stolen by robots through the WordPress feeds. This can cause duplicate content issues. To prevent this from happening, it's recommended to convert the feed's content into an excerpt.", 'autodescription' ) );
+		$this->description( __( "Adding a backlink below the feed's content will also let the visitors know where the content came from.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Change Feed Settings', 'autodescription' ); ?></h4>
+		<?php
+		$excerpt_the_feed_label = esc_html__( 'Convert feed content into excerpts?', 'autodescription' );
+		$excerpt_the_feed_label .= ' ' . $this->make_info( __( 'By default the excerpt will be at most 400 characters long', 'autodescription' ), '', false );
+
+		$source_the_feed_label = esc_html__( 'Add backlinks below the feed content?', 'autodescription' );
+		$source_the_feed_label .= ' ' . $this->make_info( __( 'This link will not be followed by Search Engines', 'autodescription' ), '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			array(
+				$this->make_checkbox( 'excerpt_the_feed', $excerpt_the_feed_label, '', false ),
+				$this->make_checkbox( 'source_the_feed', $source_the_feed_label, '', false ),
+			), true
+		);
+
+		if ( $this->rss_uses_excerpt() ) {
+			$reading_settings_url = admin_url( 'options-reading.php' );
+			$reading_settings_title = __( 'Reading Settings', 'autodescription' );
+			$reading_settings = '<a href="' . esc_url( $reading_settings_url ) . '" target="_blank" title="' . esc_attr( $reading_settings_title ) . '">' . esc_html( $reading_settings_title ) . '</a>';
+
+			$this->description_noesc( sprintf( esc_html_x( 'Note: The feed is already converted into an excerpt (summary) through the %s.', '%s = Reading Settings', 'autodescription' ), $reading_settings ) );
+		}
+
+		$feed_url = get_feed_link();
+		$here = '<a href="' . esc_url( $feed_url ) . '" target="_blank" title="' . esc_attr__( 'View feed', 'autodescription' ) . '">' . esc_html_x( 'here', 'The feed can be found %s.', 'autodescription' ) . '</a>';
+
+		$this->description_noesc( sprintf( esc_html_x( 'The feed can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/homepage-metabox.php
===================================================================
--- inc/views/metaboxes/homepage-metabox.php	(nonexistent)
+++ inc/views/metaboxes/homepage-metabox.php	(working copy)
@@ -0,0 +1,393 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_homepage_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_homepage_metabox_main' :
+
+		$this->description( __( 'These settings will take precedence over the settings set within the Home Page edit screen, if any.', 'autodescription' ) );
+
+		?><hr><?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.6.0
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> __( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+			),
+			'robots' => array(
+				'name'		=> __( 'Robots', 'autodescription' ),
+				'callback'	=> array( $this, 'homepage_metabox_robots_tab' ),
+				'dashicon'	=> 'visibility',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_homepage_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 * Used to extend HomePage tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_homepage_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'homepage', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_homepage_metabox_general' :
+
+		$language = $this->google_language();
+
+		$page_on_front = $this->has_page_on_front();
+		$home_description_frompost = false;
+
+		$description_from_post_message = '';
+		$title_from_post_message  = '';
+
+		$title_i18n = esc_html__( 'Title', 'autodescription' );
+		$description_i18n = esc_html__( 'Description', 'autodescription' );
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		$home_id = $this->get_the_front_page_ID();
+		$home_title = $this->escape_title( $this->get_option( 'homepage_title' ) );
+		$blog_description = $this->get_blogdescription();
+
+		/**
+		 * Home Page Tagline settings.
+		 * @since 2.3.8
+		 *
+		 * @param string $home_tagline The tagline option.
+		 * @param string $home_tagline_placeholder The option placeholder. Always defaults to description.
+		 * @param string|void $home_tagline_value The tagline input value.
+		 * @param string $blog_description Override blog description with option if applicable.
+		 */
+		$home_tagline = $this->get_field_value( 'homepage_title_tagline' );
+		$home_tagline_placeholder = $blog_description;
+		$home_tagline_value = $home_tagline ? $home_tagline : '';
+		$blog_description = $home_tagline_value ? $home_tagline_value : $blog_description;
+
+		/**
+		 * Create a placeholder for when there's no custom HomePage title found.
+		 * @since 2.2.4
+		 */
+		$home_title_args = $this->generate_home_title( true, '', '', true, false );
+		if ( $this->home_page_add_title_tagline() )
+			$home_title_placeholder = $this->process_title_additions( $home_title_args['blogname'], $home_title_args['title'], $home_title_args['seplocation'] );
+		else
+			$home_title_placeholder = $home_title_args['title'];
+
+		/**
+		 * If the home title is fetched from the post, notify about that instead.
+		 * @since 2.2.4
+		 *
+		 * Nesting often used translations
+		 */
+		if ( empty( $home_title ) && $page_on_front && $this->get_custom_field( '_genesis_title', $home_id ) ) {
+			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
+			$title_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $title_i18n, __( 'Page SEO Settings', 'autodescription' ), $home_page_i18n );
+		}
+
+		/**
+		 * Check for options to calculate title length.
+		 *
+		 * @since 2.3.4
+		 */
+		if ( $home_title ) {
+			$home_title_args = $this->generate_home_title();
+			$tit_len_pre = $this->process_title_additions( $home_title_args['title'], $home_title_args['blogname'], $home_title_args['seplocation'] );
+		} else {
+			$tit_len_pre = $home_title_placeholder;
+		}
+
+		//* Fetch the description from the home page.
+		$frompost_description = $page_on_front ? $this->get_custom_field( '_genesis_description', $home_id ) : '';
+
+		//* Fetch the HomePage Description option.
+		$home_description = $this->get_field_value( 'homepage_description' );
+
+		/**
+		 * Create a placeholder.
+		 * @since 2.3.4
+		 */
+		if ( $frompost_description ) {
+			$description_placeholder = $frompost_description;
+		} else {
+			$description_args = array(
+				'id' => $home_id,
+				'is_home' => true,
+				'get_custom_field' => false
+			);
+
+			$description_placeholder = $this->generate_description( '', $description_args );
+		}
+
+		/**
+		 * Checks if the home is blog, the Home Page Metabox description and
+		 * the frompost description.
+		 * @since 2.3.4
+		 */
+		if ( empty( $home_description ) && $page_on_front && $frompost_description )
+			$home_description_frompost = true;
+
+		/**
+		 *
+		 * If the HomePage Description empty, it will check for the InPost
+		 * Description set on the Home Page. And it will set the InPost
+		 * Description as placeholder.
+		 *
+		 * Nesting often used translations.
+		 *
+		 * Notify that the homepage is a blog.
+		 * @since 2.2.2
+		 */
+		if ( $home_description_frompost ) {
+			$page_seo_settings_i18n = __( 'Page SEO Settings', 'autodescription' );
+			/* translators: 1: Option, 2: Page SEO Settings, 3: Home Page */
+			$description_from_post_message = sprintf( __( 'Note: The %1$s is fetched from the %2$s on the %3$s.', 'autodescription' ), $description_i18n, $page_seo_settings_i18n, $home_page_i18n );
+		}
+
+		$desc_len_pre = $home_description ? $home_description : $description_placeholder;
+
+		/**
+		 * Convert to what Google outputs.
+		 *
+		 * This will convert e.g. &raquo; to a single length character.
+		 * @since 2.3.4
+		 */
+		$tit_len = html_entity_decode( $this->escape_title( $tit_len_pre ) );
+		$desc_len = html_entity_decode( $this->escape_title( $desc_len_pre ) );
+
+		?>
+		<p>
+			<label for="<?php $this->field_id( 'homepage_title_tagline' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Title Tagline', 'autodescription' ), $home_page_i18n ); ?></strong>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'homepage_title_tagline' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title_tagline' ); ?>" placeholder="<?php echo $home_tagline_placeholder ?>" value="<?php echo esc_attr( $home_tagline_value ); ?>" />
+		</p>
+
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'homepage_title' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Title', 'autodescription' ), $home_page_i18n ); ?></strong>
+				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3' ); ?>" target="_blank" title="<?php esc_attr_e( 'Recommended Length: 50 to 55 characters', 'autodescription' ) ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( esc_html__( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_title', false ) . '_chars">'. mb_strlen( $tit_len ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
+			</label>
+		</p>
+		<p id="tsf-title-wrap">
+			<input type="text" name="<?php $this->field_name( 'homepage_title' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_title' ); ?>" placeholder="<?php echo esc_attr( $home_title_placeholder ); ?>" value="<?php echo esc_attr( $home_title ); ?>" />
+			<span id="tsf-title-offset" class="hide-if-no-js"></span><span id="tsf-title-placeholder" class="hide-if-no-js"></span>
+		</p>
+		<?php
+		if ( $title_from_post_message ) {
+			$this->description( $title_from_post_message );
+		}
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'homepage_description' ); ?>" class="tsf-toblock">
+				<strong><?php printf( esc_html__( 'Custom %s Description', 'autodescription' ), $home_page_i18n ); ?></strong>
+				<a href="<?php echo esc_url( 'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#1' ); ?>" target="_blank" title="<?php _e( 'Recommended Length: 145 to 155 characters', 'autodescription' ) ?>">[?]</a>
+				<span class="description tsf-counter">
+					<?php printf( __( 'Characters Used: %s', 'autodescription' ), '<span id="' . $this->field_id( 'homepage_description', false ) . '_chars">'. mb_strlen( $desc_len ) .'</span>' ); ?>
+					<span class="hide-if-no-js tsf-ajax"></span>
+				</span>
+			</label>
+		</p>
+		<p>
+			<textarea name="<?php $this->field_name( 'homepage_description' ); ?>" class="large-text" id="<?php $this->field_id( 'homepage_description' ); ?>" rows="3" cols="70"  placeholder="<?php echo $description_placeholder ?>"><?php echo esc_textarea( $home_description ); ?></textarea>
+		</p>
+		<?php
+		$this->description( __( 'The meta description can be used to determine the text used under the title on Search Engine results pages.', 'autodescription' ) );
+
+		if ( $description_from_post_message ) {
+			echo '<p class="description">' . esc_html( $description_from_post_message ) . '</p>';
+		}
+		break;
+
+	case 'the_seo_framework_homepage_metabox_additions' :
+
+		//* Fetches escaped title parts.
+		$title_args = $this->generate_home_title();
+		$title = $title_args['title'];
+		$blogname = $title_args['blogname'];
+		$sep = $this->get_separator( 'title' );
+
+		$example_left = '<em><span class="custom-title-js">' . $title . '</span><span class="tsf-custom-blogname-js"><span class="autodescription-sep-js"> ' . $sep . ' </span><span class="tsf-custom-tagline-js">' . $blogname . '</span></span></span></em>';
+		$example_right = '<em><span class="tsf-custom-blogname-js"><span class="tsf-custom-tagline-js">' . $blogname . '</span><span class="autodescription-sep-js"> ' . $sep . ' </span></span><span class="custom-title-js">' . $title . '</span></em>';
+
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
+			<?php $this->description( __( 'Determines which side the added title text will go on.', 'autodescription' ) ); ?>
+
+			<p id="tsf-home-title-location" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'home_title_location' ), 'left' ); ?> />
+					<label for="<?php $this->field_id( 'home_title_location_left' ); ?>">
+						<span><?php esc_html_e( 'Left:', 'autodescription' ); ?></span>
+						<?php echo ( $example_left ) ? $this->code_wrap_noesc( $example_left ) : ''; ?>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'home_title_location' ); ?>" id="<?php $this->field_id( 'home_title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'home_title_location' ), 'right' ); ?> />
+					<label for="<?php $this->field_id( 'home_title_location_right' ); ?>">
+						<span><?php esc_html_e( 'Right:', 'autodescription' ); ?></span>
+						<?php echo $example_right ? $this->code_wrap_noesc( $example_right ) : ''; ?>
+					</label>
+				</span>
+			</p>
+		</fieldset>
+
+		<hr>
+		<h4><?php printf( esc_html__( '%s Tagline', 'autodescription' ), $home_page_i18n ); ?></h4>
+		<p id="tsf-title-tagline-toggle">
+			<label for="<?php $this->field_id( 'homepage_tagline' ); ?>" class="tsf-toblock">
+				<input type="checkbox" name="<?php $this->field_name( 'homepage_tagline' ); ?>" id="<?php $this->field_id( 'homepage_tagline' ); ?>" <?php $this->is_conditional_checked( 'homepage_tagline' ); ?> value="1" <?php checked( $this->get_field_value( 'homepage_tagline' ) ); ?> />
+				<?php printf( esc_html__( 'Add site description (tagline) to the Title on the %s?', 'autodescription' ), $home_page_i18n ); ?>
+			</label>
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_homepage_metabox_robots' :
+
+		$language = $this->google_language();
+		$home_page_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		//* Get home page ID. If blog on front, it's 0.
+		$home_id = $this->get_the_front_page_ID();
+
+		$noindex_post = $this->get_custom_field( '_genesis_noindex', $home_id );
+		$nofollow_post = $this->get_custom_field( '_genesis_nofollow', $home_id );
+		$noarchive_post = $this->get_custom_field( '_genesis_noarchive', $home_id );
+
+		$checked_home = '';
+		/**
+		 * Shows user that the setting is checked on the home page.
+		 * Adds starting - with space to maintain readability.
+		 *
+		 * @since 2.2.4
+		 */
+		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
+			$checked_home = ' - <a href="' . esc_url( admin_url( 'post.php?post=' . $home_id . '&action=edit#tsf-inpost-box' ) ) . '" target="_blank" class="attention" title="' . esc_attr__( 'View Home Page Settings', 'autodescription' ) . '" >' . esc_html__( 'Checked in Page', 'autodescription' ) . '</a>';
+		}
+
+		?><h4><?php esc_html_e( 'Home Page Robots Meta Settings', 'autodescription' ); ?></h4><?php
+
+		$noindex_note = $noindex_post ? $checked_home : '';
+		$nofollow_note = $nofollow_post ? $checked_home : '';
+		$noarchive_note = $noarchive_post ? $checked_home : '';
+
+		//* Index label.
+		/* translators: 1: Option, 2: Location */
+		$i_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n );
+		$i_label .= ' ';
+		$i_label .= $this->make_info(
+			__( 'Tell Search Engines not to show this page in their search results', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/93710?hl=' . $language,
+			false
+		) . $noindex_note;
+
+		//* Follow label.
+		/* translators: 1: Option, 2: Location */
+		$f_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'nofollow' ), $home_page_i18n );
+		$f_label .= ' ';
+		$f_label .= $this->make_info(
+			__( 'Tell Search Engines not to follow links on this page', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/96569?hl=' . $language,
+			false
+		) . $nofollow_note;
+
+		//* Archive label.
+		/* translators: 1: Option, 2: Location */
+		$a_label = sprintf( esc_html__( 'Apply %1$s to the %2$s?', 'autodescription' ), $this->code_wrap( 'noarchive' ), $home_page_i18n );
+		$a_label .= ' ';
+		$a_label .= $this->make_info(
+			__( 'Tell Search Engines not to save a cached copy of this page', 'autodescription' ),
+			'https://support.google.com/webmasters/answer/79812?hl=' . $language,
+			false
+		) . $noarchive_note;
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			array(
+				$this->make_checkbox(
+					'homepage_noindex',
+					$i_label,
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'homepage_nofollow',
+					$f_label,
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'homepage_noarchive',
+					$a_label,
+					'',
+					false
+				),
+			),
+			true
+		);
+
+		// Add notice if any options are checked on the post.
+		if ( $noindex_post || $nofollow_post || $noarchive_post ) {
+			$this->description( __( 'Note: If any of these options are unchecked, but are checked on the Home Page, they will be outputted regardless.', 'autodescription' ) );
+		}
+		?>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Home Page Pagination Robots Settings', 'autodescription' ); ?></h4>
+		<?php $this->description( __( "If your Home Page is paginated and outputs content that's also found elsewhere on the website, enabling this option might prevent duplicate content.", 'autodescription' ) ); ?>
+
+		<?php
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'home_paged_noindex',
+				/* translators: 1: Option, 2: Location */
+				sprintf( esc_html__( 'Apply %1$s to every second or later page on the %2$s?', 'autodescription' ), $this->code_wrap( 'noindex' ), $home_page_i18n ),
+				'',
+				false
+			),
+			true
+		);
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/index.php
===================================================================
--- inc/views/metaboxes/index.php	(nonexistent)
+++ inc/views/metaboxes/index.php	(working copy)
@@ -0,0 +1,2 @@
+<?php
+//* When I have them working together, it's like a beautiful kaleidoscope. - Ornette Coleman
Index: inc/views/metaboxes/knowledge-metabox.php
===================================================================
--- inc/views/metaboxes/knowledge-metabox.php	(nonexistent)
+++ inc/views/metaboxes/knowledge-metabox.php	(working copy)
@@ -0,0 +1,230 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_knowledge_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_knowledge_metabox_main' :
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.8
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'knowledge_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'website' => array(
+				'name'		=> __( 'Website', 'autodescription' ),
+				'callback'	=> array( $this, 'knowledge_metabox_about_tab' ),
+				'dashicon'	=> 'admin-home',
+			),
+			'social' => array(
+				'name'		=> 'Social Sites',
+				'callback'	=> array( $this, 'knowledge_metabox_social_tab' ),
+				'dashicon'	=> 'networking',
+			),
+		);
+
+		/**
+		 * Applies filter knowledgegraph_settings_tabs : Array see $default_tabs
+		 * @since 2.2.8
+		 * Used to extend Knowledge Graph tabs
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_knowledgegraph_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'knowledge', $tabs, '2.2.8' );
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Knowledge Graph Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "The Knowledge Graph lets Google and other Search Engines know where to find you or your organization and its relevant content.", 'autodescription' ) );
+		$this->description( __( "Google is becoming more of an 'Answer Engine' than a 'Search Engine'. Setting up these options could have a positive impact on the SEO value of your website.", 'autodescription' ) );
+
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'knowledge_output',
+				__( 'Output Knowledge tags?', 'autodescription' ),
+				'',
+				true
+			), true
+		);
+
+		if ( $this->wp_version( '4.2.999', '>=' ) ) :
+		?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Website logo', 'autodescription' ); ?></h4>
+			<?php
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'knowledge_logo',
+					__( 'Use the Favicon from Customizer as the Organization Logo?', 'autodescription' ),
+					__( 'This option only has an effect when this site represents an Organization. If left disabled, Search Engines will look elsewhere for a logo, if it exists and is assigned as a logo.', 'autodescription' ),
+					true
+				), true
+			);
+		endif;
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_about' :
+
+		$blogname = $this->get_blogname();
+
+		?><h4><?php esc_html_e( 'About this website', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Who or what is your website about?', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'knowledge_type' ); ?>"><?php echo esc_html_x( 'This website represents:', '...Organization or Person.', 'autodescription' ); ?></label>
+			<select name="<?php $this->field_name( 'knowledge_type' ); ?>" id="<?php $this->field_id( 'knowledge_type' ); ?>">
+			<?php
+			$knowledge_type = (array) apply_filters(
+				'the_seo_framework_knowledge_types',
+				array(
+					'organization'	=> __( 'An Organization', 'autodescription' ),
+					'person' 		=> __( 'A Person', 'autodescription' ),
+				)
+			);
+			foreach ( $knowledge_type as $value => $name )
+				echo '<option value="' . esc_attr( $value ) . '"' . selected( $this->get_field_value( 'knowledge_type' ), esc_attr( $value ), false ) . '>' . esc_html( $name ) . '</option>' . "\n";
+			?>
+			</select>
+		</p>
+
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'knowledge_name' ); ?>">
+				<strong><?php esc_html_e( 'The organization or personal name', 'autodescription' ); ?></strong>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'knowledge_name' ); ?>" class="large-text" id="<?php $this->field_id( 'knowledge_name' ); ?>" placeholder="<?php echo esc_attr( $blogname ) ?>" value="<?php echo esc_attr( $this->get_field_value( 'knowledge_name' ) ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_knowledge_metabox_social' :
+
+		?><h4><?php esc_html_e( 'Social Pages connected to this website', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Don't have a page at a site or is the profile only privately accessible? Leave that field empty. Unsure? Fill it in anyway.", 'autodescription' ) );
+		$this->description( __( 'Add the link that leads directly to the social page of this website.', 'autodescription' ) );
+
+		?><hr><?php
+
+		$connectedi18n = _x( 'RelatedProfile', 'No spaces. E.g. https://facebook.com/RelatedProfile', 'autodescription' );
+		$profile18n = _x( 'Profile', 'Social Profile', 'autodescription' );
+
+		/**
+		 * @todo maybe genericons?
+		 */
+
+		$socialsites = array(
+			'facebook' => array(
+				'option'		=> 'knowledge_facebook',
+				'dashicon'		=> 'dashicons-facebook',
+				'desc' 			=> 'Facebook ' . __( 'Page', 'autodescription' ),
+				'placeholder'	=> 'http://www.facebook.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://facebook.com/me' ),
+			),
+			'twitter' => array(
+				'option'		=> 'knowledge_twitter',
+				'dashicon'		=> 'dashicons-twitter',
+				'desc' 			=> 'Twitter ' . $profile18n,
+				'placeholder'	=> 'http://www.twitter.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://twitter.com/home' ), // No example link available.
+			),
+			'gplus' => array(
+				'option'		=> 'knowledge_gplus',
+				'dashicon'		=> 'dashicons-googleplus',
+				'desc' 			=> 'Google+ ' . $profile18n,
+				'placeholder'	=> 'https://plus.google.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://plus.google.com/me' ),
+			),
+			'instagram' => array(
+				'option'		=> 'knowledge_instagram',
+				'dashicon'		=> 'genericon-instagram',
+				'desc' 			=> 'Instagram ' . $profile18n,
+				'placeholder'	=> 'http://instagram.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://instagram.com/' ), // No example link available.
+			),
+			'youtube' => array(
+				'option'		=> 'knowledge_youtube',
+				'dashicon'		=> 'genericon-youtube',
+				'desc' 			=> 'Youtube ' . $profile18n,
+				'placeholder'	=> 'http://www.youtube.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.youtube.com/user/%2f' ), // Yes a double slash.
+			),
+			'linkedin' => array(
+				'option'		=> 'knowledge_linkedin',
+				'dashicon'		=> 'genericon-linkedin-alt',
+				'desc' 			=> 'LinkedIn ' . $profile18n . ' ID',
+				'placeholder'	=> 'http://www.linkedin.com/profile/view?id=' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.linkedin.com/profile/view' ), // This generates a query arg. We should allow that.
+			),
+			'pinterest' => array(
+				'option'		=> 'knowledge_pinterest',
+				'dashicon'		=> 'genericon-pinterest-alt',
+				'desc' 			=> 'Pinterest ' . $profile18n,
+				'placeholder'	=> 'https://www.pinterest.com/' . $connectedi18n . '/',
+				'examplelink'	=> esc_url( 'https://www.pinterest.com/me/' ),
+			),
+			'soundcloud' => array(
+				'option'		=> 'knowledge_soundcloud',
+				'dashicon'		=> 'genericon-cloud', // I know, it's not the real one. D:
+				'desc' 			=> 'SoundCloud ' . $profile18n,
+				'placeholder'	=> 'https://soundcloud.com/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://soundcloud.com/you' ),
+			),
+			'tumblr' => array(
+				'option'		=> 'knowledge_tumblr',
+				'dashicon'		=> 'genericon-tumblr',
+				'desc' 			=> 'Tumblr ' . __( 'Blog', 'autodescription' ),
+				'placeholder'	=> 'https://tumblr.com/blog/' . $connectedi18n,
+				'examplelink'	=> esc_url( 'https://www.tumblr.com/dashboard' ),  // No example link available.
+			),
+		);
+
+		foreach ( $socialsites as $key => $value ) {
+			?>
+			<p>
+				<label for="<?php $this->field_id( $value['option'] ); ?>">
+					<strong><?php echo esc_html( $value['desc'] ); ?></strong>
+					<?php
+					if ( $value['examplelink'] ) {
+						?><a href="<?php echo esc_url( $value['examplelink'] ); ?>" target="_blank">[?]</a><?php
+					}
+					?>
+				</label>
+			</p>
+			<p>
+				<input type="text" name="<?php $this->field_name( $value['option'] ); ?>" class="large-text" id="<?php $this->field_id( $value['option'] ); ?>" placeholder="<?php echo esc_attr( $value['placeholder'] ) ?>" value="<?php echo esc_attr( $this->get_field_value( $value['option'] ) ); ?>" />
+			</p>
+			<?php
+		}
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/robots-metabox.php
===================================================================
--- inc/views/metaboxes/robots-metabox.php	(nonexistent)
+++ inc/views/metaboxes/robots-metabox.php	(working copy)
@@ -0,0 +1,172 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_robots_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_robots_metabox_main' :
+
+		//* Robots types
+		$types = array(
+			'category' => __( 'Category', 'autodescription' ),
+			'tag' => __( 'Tag', 'autodescription' ),
+			'author' => __( 'Author', 'autodescription' ),
+			'date' => __( 'Date', 'autodescription' ),
+			'search' => __( 'Search Pages', 'autodescription' ),
+			'attachment' => __( 'Attachment Pages', 'autodescription' ),
+			'site' => _x( 'the entire site', '...for the entire site', 'autodescription' ),
+		);
+
+		//* Robots i18n
+		$robots = array(
+			'noindex' => array(
+				'value' => 'noindex',
+				'name' 	=> __( 'NoIndex', 'autodescription' ),
+				'desc' 	=> __( 'These options prevent indexing of the selected archives and pages. If you enable this, the selected archives or pages will be removed from Search Engine results pages.', 'autodescription' ),
+			),
+			'nofollow' => array(
+				'value' => 'nofollow',
+				'name'	=> __( 'NoFollow', 'autodescription' ),
+				'desc'	=> __( 'These options prevent links from being followed on the selected archives and pages. If you enable this, the selected archives or pages in-page links will gain no SEO value, including your own links.', 'autodescription' ),
+			),
+			'noarchive' => array(
+				'value' => 'noarchive',
+				'name'	=> __( 'NoArchive', 'autodescription' ),
+				'desc'	=> __( 'These options prevent caching of the selected archives and pages. If you enable this, Search Engines will not create a cached copy of the selected archives or pages.', 'autodescription' ),
+			),
+		);
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback'	=> function callback
+		 *				'dashicon'	=> WordPress Dashicon
+		 *				'args'		=> function args
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+				'general' => array(
+					'name' 		=> __( 'General', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_general_tab' ),
+					'dashicon'	=> 'admin-generic',
+					'args'		=> '',
+				),
+				'index' => array(
+					'name' 		=> __( 'Indexing', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'filter',
+					'args'		=> array( $types, $robots['noindex'] ),
+				),
+				'follow' => array(
+					'name'		=> __( 'Following', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'editor-unlink',
+					'args'		=> array( $types, $robots['nofollow'] ),
+				),
+				'archive' => array(
+					'name'		=> __( 'Archiving', 'autodescription' ),
+					'callback'	=> array( $this, 'robots_metabox_no_tab' ),
+					'dashicon'	=> 'download',
+					'args'		=> array( $types, $robots['noarchive'] ),
+				),
+			);
+
+		/**
+		 * Applies filters 'the_seo_framework_robots_settings_tabs' : array see $default_tabs
+		 *
+		 * Used to extend Social tabs
+		 * @since 2.2.4
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_robots_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'robots', $tabs, '2.2.4' );
+		break;
+
+	case 'the_seo_framework_robots_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Open Directory Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "Sometimes, Search Engines use resources from certain Directories to find titles and descriptions for your content. You generally don't want them to. Turn these options on to prevent them from doing so.", 'autodescription' ) );
+		$this->description( __( "The Open Directory Project and the Yahoo! Directory may contain outdated SEO values. Therefore, it's best to leave these options checked.", 'autodescription' ) );
+
+		$fields = $this->wrap_fields(
+			array(
+				$this->make_checkbox(
+					'noodp',
+					sprintf( esc_html__( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noodp' ) ),
+					'',
+					false
+				),
+				$this->make_checkbox(
+					'noydir',
+					sprintf( esc_html__( 'Apply %s to the entire site?', 'autodescription' ), $this->code_wrap( 'noydir' ) ),
+					'',
+					false
+				),
+			), true
+		);
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Paginated Archive Settings', 'autodescription' ); ?></h4>
+		<p class="description"><?php printf( esc_html__( "Indexing the second or later page of any archive might cause duplication errors. Search Engines look down upon them; therefore, it's recommended to disable indexing of those pages.", 'autodescription' ), $this->code_wrap( 'noodp' ), $this->code_wrap( 'noydir' ) ); ?></p>
+		<?php
+
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'paged_noindex',
+				sprintf( esc_html__( 'Apply %s to every second or later archive page?', 'autodescription' ), $this->code_wrap( 'noindex' ) ),
+				'',
+				false
+			), true
+		);
+		break;
+
+	case 'the_seo_framework_robots_metabox_no' :
+
+		$ro_value = $robots['value'];
+		$ro_name = esc_html( $robots['name'] );
+		$ro_i18n = $robots['desc'];
+
+		?><h4><?php printf( esc_html__( '%s Robots Settings', 'autodescription' ), $ro_name ); ?></h4><?php
+		$this->description( $ro_i18n );
+
+		$checkboxes = '';
+		foreach ( $types as $type => $i18n ) {
+
+			if ( 'site' === $type || 'attachment' === $type || 'search' === $type ) {
+				//* Singular.
+				/* translators: 1: Option, 2: Post Type */
+				$label = sprintf( esc_html__( 'Apply %1$s to %2$s?', 'autodescription' ), $this->code_wrap( $ro_name ), esc_html( $i18n ) );
+			} else {
+				//* Archive.
+				/* translators: 1: Option, 2: Post Type */
+				$label = sprintf( esc_html__( 'Apply %1$s to %2$s Archives?', 'autodescription' ), $this->code_wrap( $ro_name ), esc_html( $i18n ) );
+			}
+
+			$id = $type . '_' . $ro_value;
+
+			//* Add <hr> if it's 'site'
+			$checkboxes .= 'site' === $type ? '<hr class="tsf-option-spacer">' : '';
+
+			$checkboxes .= $this->make_checkbox( esc_html( $id ), $label, '', false );
+		}
+
+		?><p class="tsf-fields"><?php
+			//* Echo checkboxes.
+			$this->wrap_fields( $checkboxes, true );
+		?></p><?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/schema-metabox.php
===================================================================
--- inc/views/metaboxes/schema-metabox.php	(nonexistent)
+++ inc/views/metaboxes/schema-metabox.php	(working copy)
@@ -0,0 +1,87 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_schema_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_schema_metabox_main' :
+
+		?><h4><?php esc_html_e( 'Schema.org Output Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $this->has_json_ld_plugin() ) :
+			$this->description( __( 'Another Schema.org plugin has been detected.', 'autodescription' ) );
+		else :
+			$this->description( __( 'The Schema.org markup is a standard way of annotating structured data for Search Engines. This markup is represented within hidden scripts throughout the website.', 'autodescription' ) );
+			$this->description( __( 'When your web pages include structured data markup, Search Engines can use that data to index your content better, present it more prominently in Search Results, and use it in several different applications.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<?php /* translators: https://developers.google.com/search/docs/data-types/sitelinks-searchbox */ ?>
+			<h4><?php echo esc_html( _x( 'Sitelinks Searchbox', 'Product name', 'autodescription' ) ); ?></h4><?php
+			$this->description( __( 'When Search users search for your brand name, the following option allows them to search through your website directly from the Search Results.', 'autodescription' ) );
+
+			$info = $this->make_info(
+				_x( 'Sitelinks Searchbox', 'Product name', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/sitelinks-searchbox',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_searchbox',
+					esc_html_x( 'Enable Sitelinks Searchbox?', 'Product name', 'autodescription' ) . ' ' . $info,
+					'',
+					false
+				),
+				true
+			);
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Site Name', 'autodescription' ); ?></h4><?php
+			$this->description( __( "When using breadcrumbs, the first entry is by default your website's address. Using the following option will convert it to the Site Name.", 'autodescription' ) );
+
+			$info = $this->make_info(
+				__( 'Include your Site Name in Search Results', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/sitename',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_sitename',
+					esc_html__( 'Convert URL to Site Name?', 'autodescription' ) . ' ' . $info,
+					sprintf( esc_html__( 'The Site Name is: %s', 'autodescription' ), $this->code_wrap( $this->get_blogname() ) ),
+					false
+				),
+				true
+			);
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Breadcrumbs', 'autodescription' ); ?></h4><?php
+			$this->description( __( "Breadcrumb trails indicate the page's position in the site hierarchy. Using the following option will show the hierarchy within the Search Results when available.", 'autodescription' ) );
+
+			$info = $this->make_info(
+				__( 'About Breadcrumbs', 'autodescription' ),
+				'https://developers.google.com/search/docs/data-types/breadcrumbs',
+				false
+			);
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'ld_json_breadcrumbs',
+					esc_html__( 'Enable Breadcrumbs?', 'autodescription' ) . ' ' . $info,
+					esc_html__( 'Multiple trails can be outputted. The longest trail is prioritized.', 'autodescription' ),
+					false
+				),
+				true
+			);
+		endif;
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/sitemaps-metabox.php
===================================================================
--- inc/views/metaboxes/sitemaps-metabox.php	(nonexistent)
+++ inc/views/metaboxes/sitemaps-metabox.php	(working copy)
@@ -0,0 +1,265 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_sitemaps_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_sitemaps_metabox_main' :
+
+		if ( ! $this->pretty_permalinks ) {
+
+			$permalink_settings_url = admin_url( 'options-permalink.php' );
+			$here = '<a href="' . esc_url( $permalink_settings_url ) . '" target="_blank" title="' . esc_attr__( 'Permalink Settings', 'autodescription' ) . '">' . esc_html_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+
+			?><h4><?php esc_html_e( "You're using the plain permalink structure.", 'autodescription' ); ?></h4><?php
+			$this->description( __( "This means we can't output the sitemap through the WordPress rewrite rules.", 'autodescription' ) );
+			?><hr><?php
+			$this->description_noesc( sprintf( esc_html_x( "Change your Permalink Settings %s (Recommended: 'postname').", '%s = here', 'autodescription' ), $here ) );
+
+		} else {
+
+			/**
+			 * Parse tabs content
+			 *
+			 * @param array $default_tabs { 'id' = The identifier =>
+			 *			array(
+			 *				'name' 		=> The name
+			 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+			 *				'dashicon'	=> Desired dashicon
+			 *			)
+			 * }
+			 *
+			 * @since 2.2.9
+			 */
+			$default_tabs = array(
+				'general' => array(
+					'name' 		=> __( 'General', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_general_tab' ),
+					'dashicon'	=> 'admin-generic',
+				),
+				'robots' => array(
+					'name'		=> 'Robots.txt',
+					'callback'	=> array( $this, 'sitemaps_metabox_robots_tab' ),
+					'dashicon'	=> 'share-alt2',
+				),
+				'timestamps' => array(
+					'name'		=> __( 'Timestamps', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_timestamps_tab' ),
+					'dashicon'	=> 'backup',
+				),
+				'notify' => array(
+					'name'		=> _x( 'Ping', 'Ping or notify Search Engine', 'autodescription' ),
+					'callback'	=> array( $this, 'sitemaps_metabox_notify_tab' ),
+					'dashicon'	=> 'megaphone',
+				),
+			);
+
+			/**
+			 * Applies filters the_seo_framework_sitemaps_settings_tabs : array see $default_tabs
+			 *
+			 * Used to extend Knowledge Graph tabs
+			 */
+			$defaults = (array) apply_filters( 'the_seo_framework_sitemaps_settings_tabs', $default_tabs, $args );
+
+			$tabs = wp_parse_args( $args, $defaults );
+			$use_tabs = true;
+
+			$sitemap_plugin = $this->detect_sitemap_plugin();
+			$sitemap_detected = $this->has_sitemap_xml();
+			$robots_detected = $this->has_robots_txt();
+
+			/**
+			 * Remove the timestamps and notify submenus
+			 * @since 2.5.2
+			 */
+			if ( $sitemap_plugin || $sitemap_detected ) {
+				unset( $tabs['timestamps'] );
+				unset( $tabs['notify'] );
+			}
+
+			/**
+			 * Remove the robots submenu
+			 * @since 2.5.2
+			 */
+			if ( $robots_detected ) {
+				unset( $tabs['robots'] );
+			}
+
+			if ( $robots_detected && ( $sitemap_plugin || $sitemap_detected ) )
+				$use_tabs = false;
+
+			$this->nav_tab_wrapper( 'sitemaps', $tabs, '2.2.8', $use_tabs );
+
+		}
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_general' :
+
+		$site_url = $this->the_home_url_from_cache( true );
+
+		$sitemap_url = $site_url . 'sitemap.xml';
+		$has_sitemap_plugin = $this->detect_sitemap_plugin();
+		$sitemap_detected = $this->has_sitemap_xml();
+
+		?><h4><?php esc_html_e( 'Sitemap Integration Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $has_sitemap_plugin ) {
+			$this->description( __( 'Another active sitemap plugin has been detected. This means that the sitemap functionality has been replaced.', 'autodescription' ) );
+		} elseif ( $sitemap_detected ) {
+			$this->description( __( 'A sitemap has been detected in the root folder of your website. This means that the sitemap functionality has no effect.', 'autodescription' ) );
+		} else {
+			$this->description( __( 'The Sitemap is an XML file that lists pages and posts for your website along with optional metadata about each post or page. This helps Search Engines crawl your website more easily.', 'autodescription' ) );
+			$this->description( __( 'The optional metadata include the post and page modified time and a page priority indication, which is automated.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Sitemap Output', 'autodescription' ); ?></h4>
+			<?php
+
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'sitemaps_output',
+					__( 'Output Sitemap?', 'autodescription' ),
+					'',
+					true
+				), true
+			);
+		}
+
+		if ( ! ( $has_sitemap_plugin || $sitemap_detected ) && $this->get_option( 'sitemaps_output' ) ) {
+			$here = '<a href="' . esc_url( $sitemap_url ) . '" target="_blank" title="' . esc_attr__( 'View sitemap', 'autodescription' ) . '">' . esc_attr_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+			$this->description_noesc( sprintf( _x( 'The sitemap can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		}
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_robots' :
+
+		$site_url = $this->the_home_url_from_cache( true );
+		$robots_url = trailingslashit( $site_url ) . 'robots.txt';
+		$here = '<a href="' . esc_url( $robots_url ) . '" target="_blank" title="' . esc_attr__( 'View robots.txt', 'autodescription' ) . '">' . esc_html_x( 'here', 'The sitemap can be found %s.', 'autodescription' ) . '</a>';
+
+		?><h4><?php esc_html_e( 'Robots.txt Settings', 'autodescription' ); ?></h4><?php
+
+		if ( $this->can_do_sitemap_robots() ) :
+			$this->description( __( 'The robots.txt file is the first thing Search Engines look for. If you add the sitemap location in the robots.txt file, then Search Engines will look for and index the sitemap.', 'autodescription' ) );
+			$this->description( __( 'If you do not add the sitemap location to the robots.txt file, you will need to notify Search Engines manually through the Webmaster Console provided by the Search Engines.', 'autodescription' ) );
+
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Add sitemap location in robots.txt', 'autodescription' ); ?></h4>
+			<?php
+
+			//* Echo checkbox.
+			$this->wrap_fields(
+				$this->make_checkbox(
+					'sitemaps_robots',
+					__( 'Add sitemap location in robots?', 'autodescription' ),
+					'',
+					true
+				), true
+			);
+		else :
+			$this->description( __( 'Another robots.txt sitemap Location addition has been detected.', 'autodescription' ) );
+		endif;
+
+		$this->description_noesc( sprintf( esc_html_x( 'The robots.txt file can be found %s.', '%s = here', 'autodescription' ), $here ) );
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_timestamps' :
+
+		//* Sets timezone according to WordPress settings.
+		$this->set_timezone();
+
+		$timestamp_0 = date( 'Y-m-d' );
+
+		/**
+		 * @link https://www.w3.org/TR/NOTE-datetime
+		 * We use the second expression of the time zone offset handling.
+		 */
+		$timestamp_1 = date( 'Y-m-d\TH:iP' );
+
+		//* Reset timezone to previous value.
+		$this->reset_timezone();
+
+		?><h4><?php esc_html_e( 'Timestamps Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The modified time suggests to Search Engines where to look for content changes. It has no impact on the SEO value unless you drastically change pages or posts. It then depends on how well your content is constructed.', 'autodescription' ) );
+		$this->description( __( "By default, the sitemap only outputs the modified date if you've enabled them within the Social Metabox. This setting overrides those settings for the Sitemap.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Output Modified Date', 'autodescription' ); ?></h4>
+		<?php
+
+		//* Echo checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'sitemaps_modified',
+				sprintf( esc_html__( 'Add %s to the sitemap?', 'autodescription' ), $this->code_wrap( '<lastmod>' ) ),
+				'',
+				false
+			), true
+		);
+
+		?>
+		<hr>
+
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Timestamp Format Settings', 'autodescription' ); ?></h4></legend>
+			<?php $this->description( __( 'Determines how specific the modification timestamp is.', 'autodescription' ) ); ?>
+
+			<p id="sitemaps-timestamp-format" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>" value="0" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '0' ); ?> />
+					<label for="<?php $this->field_id( 'sitemap_timestamps_0' ); ?>">
+						<span title="<?php esc_attr_e( 'Complete date', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_0 ); ?> [?]</span>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'sitemap_timestamps' ); ?>" id="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>" value="1" <?php checked( $this->get_field_value( 'sitemap_timestamps' ), '1' ); ?> />
+					<label for="<?php $this->field_id( 'sitemap_timestamps_1' ); ?>">
+						<span title="<?php esc_attr_e( 'Complete date plus hours, minutes and timezone', 'autodescription' ); ?>"><?php echo $this->code_wrap( $timestamp_1 ); ?> [?]</span>
+					</label>
+				</span>
+			</p>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_sitemaps_metabox_notify' :
+
+		?><h4><?php esc_html_e( 'Ping Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Notifying Search Engines of a sitemap change is helpful to get your content indexed as soon as possible.', 'autodescription' ) );
+		$this->description( __( 'By default this will happen at most once an hour.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Notify Search Engines', 'autodescription' ); ?></h4>
+		<?php
+
+		$engines = array(
+			'ping_google'	=> 'Google',
+			'ping_bing' 	=> 'Bing',
+			'ping_yandex'	=> 'Yandex',
+		);
+
+		$ping_checkbox = '';
+
+		foreach ( $engines as $option => $engine ) {
+			$ping_label = sprintf( __( 'Notify %s about sitemap changes?', 'autodescription' ), $engine );
+			$ping_checkbox .= $this->make_checkbox( $option, $ping_label, '', true );
+		}
+
+		//* Echo checkbox.
+		$this->wrap_fields( $ping_checkbox, true );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/social-metabox.php
===================================================================
--- inc/views/metaboxes/social-metabox.php	(nonexistent)
+++ inc/views/metaboxes/social-metabox.php	(working copy)
@@ -0,0 +1,323 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_social_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_social_metabox_main' :
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'facebook' => array(
+				'name'		=> 'Facebook',
+				'callback'	=> array( $this, 'social_metabox_facebook_tab' ),
+				'dashicon'	=> 'facebook-alt',
+			),
+			'twitter' => array(
+				'name'		=> 'Twitter',
+				'callback'	=> array( $this, 'social_metabox_twitter_tab' ),
+				'dashicon'	=> 'twitter',
+			),
+			'postdates' => array(
+				'name'		=> __( 'Post Dates', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_postdates_tab' ),
+				'dashicon'	=> 'backup',
+			),
+			'relationships' => array(
+				'name'		=> __( 'Link Relationships', 'autodescription' ),
+				'callback'	=> array( $this, 'social_metabox_relationships_tab' ),
+				'dashicon'	=> 'leftright',
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_social_settings_tabs : array see $default_tabs
+		 *
+		 * Used to extend Social tabs
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_social_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'social', $tabs, '2.2.2' );
+		break;
+
+	case 'the_seo_framework_social_metabox_general' :
+
+		?><h4><?php esc_html_e( 'Site Shortlink Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The shortlink tag might have some use for 3rd party service discoverability, but it has little to no SEO value whatsoever.', 'autodescription' ) );
+
+		//* Echo checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'shortlink_tag',
+				__( 'Output shortlink tag?', 'autodescription' ),
+				'',
+				true
+			),
+			true
+		);
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Social Meta Tags Settings', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'Output various meta tags for social site integration, among other 3rd party services.', 'autodescription' ) );
+
+		?><hr><?php
+
+		//* Echo Open Graph Tags checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'og_tags',
+				__( 'Output Open Graph meta tags?', 'autodescription' ),
+				__( 'Facebook, Twitter, Pinterest and many other social sites make use of these tags.', 'autodescription' ),
+				true
+			),
+			true
+		);
+
+		if ( $this->detect_og_plugin() )
+			$this->description( __( 'Note: Another Open Graph plugin has been detected.', 'autodescription' ) );
+
+		?><hr><?php
+
+		//* Echo Facebook Tags checkbox.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'facebook_tags',
+				__( 'Output Facebook meta tags?', 'autodescription' ),
+				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Facebook' ),
+				true
+			),
+			true
+		);
+
+		?><hr><?php
+
+		//* Echo Twitter Tags checkboxes.
+		$this->wrap_fields(
+			$this->make_checkbox(
+				'twitter_tags',
+				__( 'Output Twitter meta tags?', 'autodescription' ),
+				sprintf( __( 'Output various tags targetted at %s.', 'autodescription' ), 'Twitter' ),
+				true
+			),
+			true
+		);
+
+		if ( $this->detect_twitter_card_plugin() ) {
+			$this->description( __( 'Note: Another Twitter Card plugin has been detected.', 'autodescription' ) );
+		}
+		break;
+
+	case 'the_seo_framework_social_metabox_facebook' :
+
+		$fb_author = $this->get_field_value( 'facebook_author' );
+		$fb_author_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourPersonalProfile', 'Example Facebook Personal URL', 'autodescription' ) : '';
+
+		$fb_publisher = $this->get_field_value( 'facebook_publisher' );
+		$fb_publisher_placeholder = empty( $fb_publisher ) ? _x( 'http://www.facebook.com/YourVerifiedBusinessProfile', 'Example Verified Facebook Business URL', 'autodescription' ) : '';
+
+		$fb_appid = $this->get_field_value( 'facebook_appid' );
+		$fb_appid_placeholder = empty( $fb_appid ) ? '123456789012345' : '';
+
+		?><h4><?php esc_html_e( 'Default Facebook Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Facebook post sharing works mostly through Open Graph. However, you can also link your Business and Personal Facebook pages, among various other options.', 'autodescription' ) );
+		$this->description( __( 'When these options are filled in, Facebook might link your Facebook profile to be followed and liked when your post or page is shared.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_author' ); ?>">
+				<strong><?php esc_html_e( 'Article Author Facebook URL', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://facebook.com/me' ); ?>" class="description" target="_blank" title="<?php esc_attr_e( 'Your Facebook Profile', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_author' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_author' ); ?>" placeholder="<?php echo esc_attr( $fb_author_placeholder ); ?>" value="<?php echo esc_attr( $fb_author ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_publisher' ); ?>">
+				<strong><?php esc_html_e( 'Article Publisher Facebook URL', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://instantarticles.fb.com/' ); ?>" class="description" target="_blank" title="<?php esc_html_e( 'To use this, you need to be a verified business', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_publisher' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_publisher' ); ?>" placeholder="<?php echo esc_attr( $fb_publisher_placeholder ); ?>" value="<?php echo esc_attr( $fb_publisher ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'facebook_appid' ); ?>">
+				<strong><?php esc_html_e( 'Facebook App ID', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://developers.facebook.com/apps' ); ?>" target="_blank" class="description" title="<?php esc_html_e( 'Get Facebook App ID', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'facebook_appid' ); ?>" class="large-text" id="<?php $this->field_id( 'facebook_appid' ); ?>" placeholder="<?php echo esc_attr( $fb_appid_placeholder ); ?>" value="<?php echo esc_attr( $fb_appid ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_social_metabox_twitter' :
+
+		$tw_site = $this->get_field_value( 'twitter_site' );
+		$tw_site_placeholder = empty( $tw_site ) ? _x( '@your-site-username', 'Twitter @username', 'autodescription' ) : '';
+
+		$tw_creator = $this->get_field_value( 'twitter_creator' );
+		$tw_creator_placeholder = empty( $tw_creator ) ? _x( '@your-personal-username', 'Twitter @username', 'autodescription' ) : '';
+
+		$twitter_card = $this->get_twitter_card_types();
+
+		?><h4><?php esc_html_e( 'Default Twitter Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Twitter post sharing works mostly through Open Graph. However, you can also link your Business and Personal Twitter pages, among various other options.', 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<fieldset id="tsf-twitter-cards">
+			<legend><h4><?php esc_html_e( 'Twitter Card Type', 'autodescription' ); ?></h4></legend>
+			<?php $this->description_noesc( sprintf( esc_html__( 'What kind of Twitter card would you like to use? It will default to %s if no image is found.', 'autodescription' ), $this->code_wrap( 'summary' ) ) ); ?>
+
+			<p class="tsf-fields">
+			<?php
+				foreach ( $twitter_card as $type => $name ) {
+					?>
+					<span class="tsf-toblock">
+						<input type="radio" name="<?php $this->field_name( 'twitter_card' ); ?>" id="<?php $this->field_id( 'twitter_card_' . $type ); ?>" value="<?php echo esc_attr( $type ); ?>" <?php checked( $this->get_field_value( 'twitter_card' ), $type ); ?> />
+						<label for="<?php $this->field_id( 'twitter_card_' . $type ); ?>">
+							<span><?php echo $this->code_wrap( $name ); ?></span>
+							<a class="description" href="<?php echo esc_url( 'https://dev.twitter.com/cards/types/' . $name ); ?>" target="_blank" title="Twitter Card <?php echo esc_attr( $name ) . ' ' . esc_attr__( 'Example', 'autodescription' ); ?>"><?php esc_html_e( 'Example', 'autodescription' ); ?></a>
+						</label>
+					</span>
+					<?php
+				}
+			?>
+			</p>
+		</fieldset>
+
+		<hr>
+
+		<?php $this->description( __( 'When the following options are filled in, Twitter might link your Twitter Site or Personal Profile when your post or page is shared.', 'autodescription' ) ); ?>
+
+		<p>
+			<label for="<?php $this->field_id( 'twitter_site' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( "Your Website's Twitter Profile", 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php esc_html_e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'twitter_site' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_site' ); ?>" placeholder="<?php echo esc_attr( $tw_site_placeholder ); ?>" value="<?php echo esc_attr( $tw_site ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'twitter_creator' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Your Personal Twitter Profile', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( 'https://twitter.com/home' ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Find your @username', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'twitter_creator' ); ?>" class="large-text" id="<?php $this->field_id( 'twitter_creator' ); ?>" placeholder="<?php echo esc_attr( $tw_creator_placeholder ); ?>" value="<?php echo esc_attr( $tw_creator ); ?>" />
+		</p>
+		<?php
+		break;
+
+	case 'the_seo_framework_social_metabox_postdates' :
+
+		$pages_i18n = esc_html__( 'Pages', 'autodescription' );
+		$posts_i18n = esc_html__( 'Posts', 'autodescription' );
+		$home_i18n = esc_html__( 'Home Page', 'autodescription' );
+
+		?><h4><?php esc_html_e( 'Post Date Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Some Search Engines output the publishing date and modified date next to the search results. These help Search Engines find new content and could impact the SEO value.', 'autodescription' ) );
+		$this->description( __( "It's recommended on posts, but it's not recommended on pages unless you modify or create new pages frequently.", 'autodescription' ) );
+
+		/* translators: 1: Option, 2: Post Type */
+		$post_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $posts_i18n );
+		$post_publish_time_checkbox = $this->make_checkbox( 'post_publish_time', $post_publish_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$page_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $pages_i18n );
+		$page_publish_time_checkbox = $this->make_checkbox( 'page_publish_time', $page_publish_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $post_publish_time_checkbox . $page_publish_time_checkbox, true );
+
+		/* translators: 1: Option, 2: Post Type */
+		$post_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $posts_i18n );
+		$post_modify_time_checkbox = $this->make_checkbox( 'post_modify_time', $post_modify_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$page_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $pages_i18n );
+		$page_modify_time_checkbox = $this->make_checkbox( 'page_modify_time', $page_modify_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $post_modify_time_checkbox . $page_modify_time_checkbox, true );
+
+		?>
+		<hr>
+
+		<h4><?php esc_html_e( 'Home Page', 'autodescription' ); ?></h4>
+		<?php
+		$this->description( __( 'Because you only publish the Home Page once, Search Engines might think your website is outdated. This can be prevented by disabling the following options.', 'autodescription' ) );
+
+		/* translators: 1: Option, 2: Post Type */
+		$home_publish_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:published_time' ), $home_i18n );
+		$home_publish_time_checkbox = $this->make_checkbox( 'home_publish_time', $home_publish_time_label, '', false );
+
+		/* translators: 1: Option, 2: Post Type */
+		$home_modify_time_label = sprintf( esc_html__( 'Add %1$s to %2$s?', 'autodescription' ), $this->code_wrap( 'article:modified_time' ), $home_i18n );
+		$home_modify_time_checkbox = $this->make_checkbox( 'home_modify_time', $home_modify_time_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $home_publish_time_checkbox . $home_modify_time_checkbox, true );
+		break;
+
+	case 'the_seo_framework_social_metabox_relationships' :
+
+		?><h4><?php esc_html_e( 'Link Relationship Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'Some Search Engines look for relations between the content of your pages. If you have multiple pages for a single Post or Page, or have archives indexed, this option will help Search Engines look for the right page to display in the Search Results.', 'autodescription' ) );
+		$this->description( __( "It's recommended to turn this option on for better SEO consistency and to prevent duplicate content errors.", 'autodescription' ) );
+
+		?><hr><?php
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_posts_label = sprintf( esc_html__( 'Add %s link tags to Posts and Pages?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_posts_checkbox = $this->make_checkbox( 'prev_next_posts', $prev_next_posts_label, '', false );
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_archives_label = sprintf( esc_html__( 'Add %s link tags to Archives?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_archives_checkbox = $this->make_checkbox( 'prev_next_archives', $prev_next_archives_label, '', false );
+
+		/* translators: %s = <code>rel</code> */
+		$prev_next_frontpage_label = sprintf( esc_html__( 'Add %s link tags to the Home Page?', 'autodescription' ), $this->code_wrap( 'rel' ) );
+		$prev_next_frontpage_checkbox = $this->make_checkbox( 'prev_next_frontpage', $prev_next_frontpage_label, '', false );
+
+		//* Echo checkboxes.
+		$this->wrap_fields( $prev_next_posts_checkbox . $prev_next_archives_checkbox . $prev_next_frontpage_checkbox, true );
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/title-metabox.php
===================================================================
--- inc/views/metaboxes/title-metabox.php	(nonexistent)
+++ inc/views/metaboxes/title-metabox.php	(working copy)
@@ -0,0 +1,257 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_title_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_title_metabox_main' :
+
+		$latest_post_id = $this->get_latest_post_id();
+
+		if ( $latest_post_id ) {
+			$post = get_post( $latest_post_id, OBJECT );
+			$title = esc_attr( $post->post_title );
+		} else {
+			$title = esc_attr__( 'Example Post Title', 'autodescription' );
+		}
+
+		$blogname = $this->get_blogname();
+		$sep = $this->get_separator( 'title' );
+
+		$additions_left = '<span class="tsf-title-additions-js">' . $blogname . '<span class="autodescription-sep-js">' . " $sep " . '</span></span>';
+		$additions_right = '<span class="tsf-title-additions-js"><span class="autodescription-sep-js">' . " $sep " . '</span>' . $blogname . '</span>';
+
+		$example_left = '<em>' . $additions_left . $title . '</em>';
+		$example_right = '<em>' . $title . $additions_right . '</em>';
+
+		//* There's no need for "hide-if-no-js" here.
+		//* Check left first, as right is default (and thus fallback).
+		$showleft = 'left' === $this->get_option( 'title_location' );
+
+		?><h4><?php esc_html_e( 'Automated Title Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'The page title is prominently shown within the browser tab as well as within the Search Engine results pages.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Title Output', 'autodescription' ); ?></h4>
+		<p>
+			<span class="tsf-title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
+			<span class="tsf-title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
+		</p>
+
+		<hr>
+		<?php
+
+		/**
+		 * Parse tabs content.
+		 *
+		 * @since 2.2.2
+		 *
+		 * @param array $default_tabs { 'id' = The identifier =>
+		 *			array(
+		 *				'name' 		=> The name
+		 *				'callback' 	=> The callback function, use array for method calling (accepts $this, but isn't used here for optimization purposes)
+		 *				'dashicon'	=> Desired dashicon
+		 *			)
+		 * }
+		 */
+		$default_tabs = array(
+			'general' => array(
+				'name' 		=> __( 'General', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_general_tab' ),
+				'dashicon'	=> 'admin-generic',
+			),
+			'additions' => array(
+				'name'		=> __( 'Additions', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_additions_tab' ),
+				'dashicon'	=> 'plus',
+				'args'		=> array(
+					'examples' => array(
+						'left'	=> $example_left,
+						'right' => $example_right,
+					),
+				),
+			),
+			'prefixes' => array(
+				'name'		=> __( 'Prefixes', 'autodescription' ),
+				'callback'	=> array( $this, 'title_metabox_prefixes_tab' ),
+				'dashicon'	=> 'plus-alt',
+				'args'		=> array(
+					'additions' => array(
+						'left'	=> $additions_left,
+						'right' => $additions_right,
+					),
+					'showleft' => $showleft,
+				),
+			),
+		);
+
+		/**
+		 * Applies filters the_seo_framework_title_settings_tabs : array see $default_tabs
+		 * @since 2.6.0
+		 *
+		 * Used to extend Description tabs.
+		 */
+		$defaults = (array) apply_filters( 'the_seo_framework_title_settings_tabs', $default_tabs, $args );
+
+		$tabs = wp_parse_args( $args, $defaults );
+
+		$this->nav_tab_wrapper( 'title', $tabs, '2.6.0' );
+		break;
+
+	case 'the_seo_framework_title_metabox_general' :
+		$title_separator = $this->get_separator_list();
+		$recommended = ' class="tsf-recommended" title="' . esc_attr__( 'Recommended', 'autodescription' ) . '"';
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Separator', 'autodescription' ); ?></h4></legend>
+			<p id="tsf-title-separator" class="tsf-fields">
+			<?php foreach ( $title_separator as $name => $html ) { ?>
+				<input type="radio" name="<?php $this->field_name( 'title_seperator' ); ?>" id="<?php $this->field_id( 'title_seperator_' . $name ); ?>" value="<?php echo esc_attr( $name ); ?>" <?php checked( $this->get_field_value( 'title_seperator' ), $name ); ?> />
+				<label for="<?php $this->field_id( 'title_seperator_' . $name ); ?>" <?php echo in_array( $name, array( 'dash', 'pipe' ), true ) ? $recommended : ''; ?>><?php echo esc_html( $html ); ?></label>
+			<?php } ?>
+			</p>
+			<?php $this->description( __( 'If the title consists of two parts (original title and optional addition), then the separator will go in-between them.', 'autodescription' ) ); ?>
+		</fieldset>
+		<?php
+		break;
+
+	case 'the_seo_framework_title_metabox_additions' :
+
+		$language = $this->google_language();
+
+		$example_left = $examples['left'];
+		$example_right = $examples['right'];
+
+		$home_page_has_option = __( 'The Home Page has a specific option.', 'autodescription' );
+
+		?>
+		<fieldset>
+			<legend><h4><?php esc_html_e( 'Document Title Additions Location', 'autodescription' ); ?></h4></legend>
+
+			<?php $this->description( __( 'Determines which side the added title text will go on.', 'autodescription' ) ); ?>
+
+			<p id="tsf-title-location" class="tsf-fields">
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_left' ); ?>" value="left" <?php checked( $this->get_field_value( 'title_location' ), 'left' ); ?> />
+					<label for="<?php $this->field_id( 'title_location_left' ); ?>">
+						<span><?php esc_html_e( 'Left:', 'autodescription' ); ?></span>
+						<?php echo $this->code_wrap_noesc( $example_left ) ?>
+					</label>
+				</span>
+				<span class="tsf-toblock">
+					<input type="radio" name="<?php $this->field_name( 'title_location' ); ?>" id="<?php $this->field_id( 'title_location_right' ); ?>" value="right" <?php checked( $this->get_field_value( 'title_location' ), 'right' ); ?> />
+					<label for="<?php $this->field_id( 'title_location_right' ); ?>">
+						<span><?php esc_html_e( 'Right:', 'autodescription' ); ?></span>
+						<?php echo $this->code_wrap_noesc( $example_right ); ?>
+					</label>
+				</span>
+			</p>
+			<?php $this->description( $home_page_has_option ); ?>
+		</fieldset>
+		<?php
+
+		//* Only add this option if the theme is doing it right.
+		if ( $this->can_manipulate_title() ) :
+			?>
+			<hr>
+
+			<h4><?php esc_html_e( 'Remove Blogname from Title', 'autodescription' ); ?></h4>
+			<div id="tsf-title-additions-toggle">
+				<?php
+				$info = $this->make_info(
+					__( 'This might decouple your posts and pages from the rest of the website', 'autodescription' ),
+					'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3',
+					false
+				);
+
+				$this->wrap_fields(
+					$this->make_checkbox(
+						'title_rem_additions',
+						esc_html__( 'Remove Blogname from title?', 'autodescription' ) . ' ' . $info,
+						'',
+						false
+					),
+					true
+				);
+				?>
+			</div>
+			<?php
+			$this->description( __( 'Only use this option if you are aware of its SEO effects.', 'autodescription' ), false );
+			echo ' ';
+			$this->description( $home_page_has_option, false );
+		endif;
+		break;
+
+	case 'the_seo_framework_title_metabox_prefixes' :
+
+		//* Get translated category label, if it exists. Otherwise, fallback to translation.
+		$term_labels = $this->get_tax_labels( 'category' );
+		$label = isset( $term_labels->singular_name ) ? $term_labels->singular_name : __( 'Category', 'autodescription' );
+
+		/**
+		 * @since WordPress Core 4.5.0 get_terms first parameter is converted to the latter.
+		 */
+		$cats = get_terms( array(), array( 'taxonomy' => 'category', 'fields' => 'ids', 'hide_empty' => false, 'order' => 'ASC', 'number' => 1 ) );
+		if ( is_array( $cats ) && ! empty( $cats ) ) {
+			//* Category should exist.
+			$cat = reset( $cats );
+		} else {
+			//* Default fallback category.
+			$cat = 1;
+		}
+
+		//* If cat is found, it will return its name. Otherwise it's an empty string.
+		$cat_name = get_cat_name( $cat );
+		$cat_name = $cat_name ? $cat_name : __( 'Example Category', 'autodescription' );
+
+		$display_prefix = $this->is_option_checked( 'title_rem_prefixes' ) ? 'none' : 'inline';
+		$title = '<span class="tsf-title-prefix-example" style="display:' . $display_prefix . '">' . esc_html( $label ) . ': </span>' . esc_html( $cat_name );
+
+		$additions_left = $additions['left'];
+		$additions_right = $additions['right'];
+
+		$example_left = '<em>' . $additions_left . $title . '</em>';
+		$example_right = '<em>' . $title . $additions_right . '</em>';
+
+		$language = $this->google_language();
+
+		/**
+		 * @todo use checkbox function
+		 * @priority low 2.6.x
+		 */
+
+		?><h4><?php esc_html_e( 'Title prefix options', 'autodescription' ); ?></h4><?php
+		$this->description( __( 'On archives a descriptive prefix may be added to the title.', 'autodescription' ) );
+
+		?>
+		<h4><?php esc_html_e( 'Example Automated Archive Title Output', 'autodescription' ); ?></h4>
+		<p>
+			<span class="tsf-title-additions-example-left" style="display:<?php echo $showleft ? 'inline' : 'none'; ?>"><?php echo $this->code_wrap_noesc( $example_left ); ?></span>
+			<span class="tsf-title-additions-example-right" style="display:<?php echo $showleft ? 'none' : 'inline'; ?>"><?php echo $this->code_wrap_noesc( $example_right ); ?></span>
+		</p>
+
+		<hr>
+
+		<h4><?php esc_html_e( 'Remove Archive Title Prefixes', 'autodescription' ); ?></h4>
+		<p id="title-prefixes-toggle">
+			<label for="<?php $this->field_id( 'title_rem_prefixes' ); ?>">
+				<input type="checkbox" name="<?php $this->field_name( 'title_rem_prefixes' ); ?>" id="<?php $this->field_id( 'title_rem_prefixes' ); ?>" <?php $this->is_conditional_checked( 'title_rem_prefixes' ); ?> value="1" <?php checked( $this->get_field_value( 'title_rem_prefixes' ) ); ?> />
+				<?php esc_html_e( 'Remove prefixes from title?', 'autodescription' ); ?>
+			</label>
+			<?php
+			$this->make_info(
+				__( "The prefix helps visitors and Search Engines determine what kind of page they're visiting", 'autodescription' ),
+				'https://support.google.com/webmasters/answer/35624?hl=' . $language . '#3',
+				true
+			);
+			?>
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: inc/views/metaboxes/webmaster-metabox.php
===================================================================
--- inc/views/metaboxes/webmaster-metabox.php	(nonexistent)
+++ inc/views/metaboxes/webmaster-metabox.php	(working copy)
@@ -0,0 +1,69 @@
+<?php
+
+defined( 'ABSPATH' ) and $_this = the_seo_framework_class() and $this instanceof $_this or die;
+
+//* Fetch the required instance within this file.
+$instance = $this->get_view_instance( 'the_seo_framework_webmaster_metabox', $instance );
+
+switch ( $instance ) :
+	case 'the_seo_framework_webmaster_metabox_main' :
+		$site_url = $this->the_home_url_from_cache();
+		$language = $this->google_language();
+
+		$bing_site_url = 'https://www.bing.com/webmaster/configure/verify/ownership?url=' . urlencode( $site_url );
+		$google_site_url = 'https://www.google.com/webmasters/verification/verification?hl=' . $language . '&siteUrl=' . $site_url;
+		$pint_site_url = 'https://analytics.pinterest.com/';
+		$yandex_site_url = 'https://webmaster.yandex.com/site/verification.xml';
+
+		?><h4><?php esc_html_e( 'Webmaster Integration Settings', 'autodescription' ); ?></h4><?php
+		$this->description( __( "When adding your website to Google, Bing and other Webmaster Tools, you'll be asked to add a code or file to your website for verification purposes. These options will help you easily integrate those codes.", 'autodescription' ) );
+		$this->description( __( "Verifying your website has no SEO value whatsoever. But you might gain added benefits such as search ranking insights to help you improve your website's content.", 'autodescription' ) );
+
+		?>
+		<hr>
+
+		<p>
+			<label for="<?php $this->field_id( 'google_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Google Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $google_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Google Verification code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'google_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'google_verification' ); ?>" placeholder="ABC1d2eFg34H5iJ6klmNOp7qRstUvWXyZaBc8dEfG9" value="<?php echo esc_attr( $this->get_field_value( 'google_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'bing_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Bing Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $bing_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Bing Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'bing_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'bing_verification' ); ?>" placeholder="123A456B78901C2D3456E7890F1A234D" value="<?php echo esc_attr( $this->get_field_value( 'bing_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'yandex_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Yandex Webmaster Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $yandex_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Yandex Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'yandex_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'yandex_verification' ); ?>" placeholder="12345abc678901d2" value="<?php echo esc_attr( $this->get_field_value( 'yandex_verification' ) ); ?>" />
+		</p>
+
+		<p>
+			<label for="<?php $this->field_id( 'pint_verification' ); ?>" class="tsf-toblock">
+				<strong><?php esc_html_e( 'Pinterest Analytics Verification Code', 'autodescription' ); ?></strong>
+				<a href="<?php echo esc_url( $pint_site_url ); ?>" target="_blank" class="description" title="<?php esc_attr_e( 'Get the Pinterest Verification Code', 'autodescription' ); ?>">[?]</a>
+			</label>
+		</p>
+		<p>
+			<input type="text" name="<?php $this->field_name( 'pint_verification' ); ?>" class="large-text" id="<?php $this->field_id( 'pint_verification' ); ?>" placeholder="123456a7b8901de2fa34bcdef5a67b98" value="<?php echo esc_attr( $this->get_field_value( 'pint_verification' ) ); ?>" />
+		</p>
+		<?php
+		break;
+
+	default :
+		break;
+endswitch;
Index: language/autodescription.pot
===================================================================
--- language/autodescription.pot	(revision 1475679)
+++ language/autodescription.pot	(working copy)
@@ -2,9 +2,9 @@
 # This file is distributed under the same license as the The SEO Framework package.
 msgid ""
 msgstr ""
-"Project-Id-Version: The SEO Framework 2.6.5\n"
+"Project-Id-Version: The SEO Framework 2.7.0\n"
 "Report-Msgid-Bugs-To: https://wordpress.org/support/plugin/autodescription\n"
-"POT-Creation-Date: 2016-06-08 22:02:53+00:00\n"
+"POT-Creation-Date: 2016-09-09 18:15:47+00:00\n"
 "MIME-Version: 1.0\n"
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
@@ -12,159 +12,163 @@
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
 
-#: inc/classes/admininit.class.php:220
+#: inc/classes/admin-init.class.php:232
 msgid "Good"
 msgstr ""
 
-#: inc/classes/admininit.class.php:221
+#: inc/classes/admin-init.class.php:233
 msgid "Okay"
 msgstr ""
 
-#: inc/classes/admininit.class.php:222
+#: inc/classes/admin-init.class.php:234
 msgid "Bad"
 msgstr ""
 
-#: inc/classes/admininit.class.php:223
+#: inc/classes/admin-init.class.php:235
 msgid "Unknown"
 msgstr ""
 
-#: inc/classes/admininit.class.php:310
+#: inc/classes/admin-init.class.php:316
 msgid "The changes you made will be lost if you navigate away from this page."
 msgstr ""
 
-#: inc/classes/admininit.class.php:311
+#: inc/classes/admin-init.class.php:317
 msgid "Are you sure you want to reset all SEO settings to their defaults?"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:114
+#: inc/classes/adminpages.class.php:123
 msgid "Save Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:115
+#: inc/classes/adminpages.class.php:124
 msgid "Reset Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:116
+#: inc/classes/adminpages.class.php:125
 msgid "Settings are saved."
 msgstr ""
 
-#: inc/classes/adminpages.class.php:117
+#: inc/classes/adminpages.class.php:126
 msgid "Settings are reset."
 msgstr ""
 
-#: inc/classes/adminpages.class.php:118
+#: inc/classes/adminpages.class.php:127
 msgid "Error saving settings."
 msgstr ""
 
-#: inc/classes/adminpages.class.php:119
+#: inc/classes/adminpages.class.php:128
 msgid "New SEO Settings have been updated."
 msgstr ""
 
-#: inc/classes/adminpages.class.php:135 inc/classes/core.class.php:108
-#: inc/classes/siteoptions.class.php:461
+#: inc/classes/adminpages.class.php:144 inc/classes/core.class.php:181
+#: inc/classes/siteoptions.class.php:471
 msgid "SEO Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:136
+#: inc/classes/adminpages.class.php:145
 msgid "SEO"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:177
-msgid "Network SEO Settings"
-msgstr ""
-
-#: inc/classes/adminpages.class.php:178
-msgid "Network SEO"
-msgstr ""
-
-#: inc/classes/adminpages.class.php:297
+#: inc/classes/adminpages.class.php:275
 msgid "Title Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:307
+#: inc/classes/adminpages.class.php:286
 msgid "Description Meta Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:317
+#: inc/classes/adminpages.class.php:297
 msgid "Home Page Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:327
+#: inc/classes/adminpages.class.php:308
 msgid "Social Meta Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:337 inc/classes/metaboxes.class.php:1802
+#: inc/classes/adminpages.class.php:319
+#: inc/views/metaboxes/knowledge-metabox.php:56
 msgid "Knowledge Graph Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:347
+#: inc/classes/adminpages.class.php:330
 msgid "Schema Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:357 inc/classes/inpost.class.php:377
-#: inc/classes/inpost.class.php:604
+#: inc/classes/adminpages.class.php:341 inc/classes/inpost.class.php:414
+#: inc/classes/inpost.class.php:645
 msgid "Robots Meta Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:367
+#: inc/classes/adminpages.class.php:352
 msgid "Webmaster Meta Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:377
+#: inc/classes/adminpages.class.php:363
 msgid "Sitemap Settings"
 msgstr ""
 
-#: inc/classes/adminpages.class.php:387
+#: inc/classes/adminpages.class.php:374
 msgid "Feed Settings"
 msgstr ""
 
-#: inc/classes/core.class.php:110
+#: inc/classes/core.class.php:183
 msgctxt "As in: The Plugin Home Page"
 msgid "Plugin Home"
 msgstr ""
 
-#: inc/classes/core.class.php:149
+#: inc/classes/core.class.php:234
 msgid "Dismiss"
 msgstr ""
 
-#: inc/classes/core.class.php:257
+#: inc/classes/core.class.php:368
 msgctxt "e.g. en for English, nl for Dutch, fi for Finish, de for German"
 msgid "en"
 msgstr ""
 
-#: inc/classes/debug.class.php:90
+#. translators: 1: Function name, 2: Plugin Version notification, 3:
+#. Replacement function
+
+#: inc/classes/debug.class.php:114
 msgid "%1$s is <strong>deprecated</strong> since version %2$s of The SEO Framework! Use %3$s instead."
 msgstr ""
 
-#: inc/classes/debug.class.php:92
+#. translators: 1: Function name, 2: Plugin Version notification
+
+#: inc/classes/debug.class.php:117
 msgid "%1$s is <strong>deprecated</strong> since version %2$s of The SEO Framework with no alternative available."
 msgstr ""
 
-#: inc/classes/debug.class.php:142
+#: inc/classes/debug.class.php:167
 msgid "(This message was added in version %s of The SEO Framework.)"
 msgstr ""
 
 #. translators: %s: Codex URL
 
-#: inc/classes/debug.class.php:144
+#: inc/classes/debug.class.php:169
 msgid "Please see <a href=\"%s\">Debugging in WordPress</a> for more information."
 msgstr ""
 
-#: inc/classes/debug.class.php:145
+#: inc/classes/debug.class.php:170
 msgid "https://codex.wordpress.org/Debugging_in_WordPress"
 msgstr ""
 
 #. translators: 1: Function name, 2: Message, 3: Plugin Version notification
 
-#: inc/classes/debug.class.php:148
+#: inc/classes/debug.class.php:173
 msgid "%1$s was called <strong>incorrectly</strong>. %2$s %3$s"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:86
+#. translators: 1: Method or Property name, 2: Message
+
+#: inc/classes/debug.class.php:223
+msgid "%1$s is not <strong>accessible</strong>. %2$s"
+msgstr ""
+
+#: inc/classes/doingitright.class.php:101
 msgid "No Search"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:300
+#: inc/classes/doingitright.class.php:302
 msgid "Refresh to see the SEO Bar status."
 msgstr ""
 
@@ -172,9 +176,9 @@
 msgid "Post"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:384 inc/classes/inpost.class.php:242
-#: inc/classes/metaboxes.class.php:1905 inc/classes/termdata.class.php:187
-#: inc/classes/termdata.class.php:223
+#: inc/classes/doingitright.class.php:384 inc/classes/inpost.class.php:273
+#: inc/classes/termdata.class.php:359
+#: inc/views/metaboxes/knowledge-metabox.php:147
 msgid "Page"
 msgstr ""
 
@@ -184,219 +188,222 @@
 
 #. translators: %s = But or And
 
-#: inc/classes/doingitright.class.php:826
+#: inc/classes/doingitright.class.php:798
 msgid "%s the Title contains the Blogname multiple times."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:929
-#: inc/classes/doingitright.class.php:1569
-msgid "Length is far too short."
-msgstr ""
+#. translators: 1: Word, 2: Occurences
 
-#: inc/classes/doingitright.class.php:932
-#: inc/classes/doingitright.class.php:1572
-msgid "Length is too short."
+#: inc/classes/doingitright.class.php:969
+msgid "%1$s is used %2$d times."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:937
-#: inc/classes/doingitright.class.php:1575
-msgid "Length is too long."
-msgstr ""
-
-#: inc/classes/doingitright.class.php:942
-#: inc/classes/doingitright.class.php:1578
-msgid "Length is far too long."
-msgstr ""
-
-#: inc/classes/doingitright.class.php:945
-#: inc/classes/doingitright.class.php:1581
-msgid "Length is good."
-msgstr ""
-
-#: inc/classes/doingitright.class.php:1043
-msgid "%s is used %d times."
-msgstr ""
-
-#: inc/classes/doingitright.class.php:1087
+#: inc/classes/doingitright.class.php:1013
 msgid "%s is being indexed."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1096
+#: inc/classes/doingitright.class.php:1022
 msgid "But you've disabled indexing for the whole site."
 msgstr ""
 
 #. translators: 1: But or And, 2: Current taxonomy term plural label
 
-#: inc/classes/doingitright.class.php:1120
+#: inc/classes/doingitright.class.php:1046
 msgid "%1$s indexing for %2$s have been disabled."
 msgstr ""
 
 #. translators: %s = But or And
 
-#: inc/classes/doingitright.class.php:1130
+#: inc/classes/doingitright.class.php:1056
 msgid "%s the blog isn't set to public. This means WordPress discourages indexing."
 msgstr ""
 
 #. translators: %s = But or And
 
-#: inc/classes/doingitright.class.php:1144
+#: inc/classes/doingitright.class.php:1070
 msgid "%s there are no posts in this term; therefore, indexing has been disabled."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1229
+#: inc/classes/doingitright.class.php:1154
 msgid "%s links aren't being followed."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1235
+#: inc/classes/doingitright.class.php:1160
 msgid "%s links are being followed."
 msgstr ""
 
 #. translators: %s = But or And
 
-#: inc/classes/doingitright.class.php:1247
+#: inc/classes/doingitright.class.php:1172
 msgid "%s you've disabled the following of links for the whole site."
 msgstr ""
 
 #. translators: 1: But or And, 2: Current taxonomy term plural label
 
-#: inc/classes/doingitright.class.php:1273
+#: inc/classes/doingitright.class.php:1198
 msgid "%1$s following for %2$s have been disabled."
 msgstr ""
 
 #. translators: %s = But or And
 
-#: inc/classes/doingitright.class.php:1285
+#: inc/classes/doingitright.class.php:1210
 msgid "%s the blog isn't set to public. This means WordPress allows the links to be followed regardless."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1337
+#: inc/classes/doingitright.class.php:1262
 msgid "Search Engine aren't allowed to archive this %s."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1342
+#: inc/classes/doingitright.class.php:1267
 msgid "Search Engine are allowed to archive this %s."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1354
+#: inc/classes/doingitright.class.php:1279
 msgid "But you've disabled archiving for the whole site."
 msgstr ""
 
 #. translators: 1: But or And, 2: Current taxonomy term plural label
 
-#: inc/classes/doingitright.class.php:1380
+#: inc/classes/doingitright.class.php:1305
 msgid "%1$s archiving for %2$s have been disabled."
 msgstr ""
 
 #. translators: %s = But or And
 
-#: inc/classes/doingitright.class.php:1393
+#: inc/classes/doingitright.class.php:1318
 msgid "%s the blog isn't set to public. This means WordPress allows the blog to be archived regardless."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1439
+#: inc/classes/doingitright.class.php:1364
 msgid "%s isn't being redirected."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1482
-#: inc/classes/doingitright.class.php:1511
+#: inc/classes/doingitright.class.php:1406
+#: inc/classes/doingitright.class.php:1435
 msgid "%s is being redirected. This means no SEO values have to be set."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1485
-#: inc/classes/doingitright.class.php:1527
+#: inc/classes/doingitright.class.php:1409
+#: inc/classes/doingitright.class.php:1451
 msgid "%s is not being indexed. This means no SEO values have to be set."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1640
+#: inc/classes/doingitright.class.php:1565
 msgid "Title:"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1641
+#: inc/classes/doingitright.class.php:1566
 msgid "Description:"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1642
+#: inc/classes/doingitright.class.php:1567
 msgid "Index:"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1643
+#: inc/classes/doingitright.class.php:1568
 msgid "Follow:"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1644
+#: inc/classes/doingitright.class.php:1569
 msgid "Archive:"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1645
+#: inc/classes/doingitright.class.php:1570
 msgid "Redirect:"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1647
+#: inc/classes/doingitright.class.php:1572
 msgid "Generated: Automatically generated."
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1649
+#: inc/classes/doingitright.class.php:1574
 msgctxt "Generated"
 msgid "G"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1650
+#: inc/classes/doingitright.class.php:1575
 msgctxt "Title"
 msgid "T"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1651
+#: inc/classes/doingitright.class.php:1576
 msgctxt "Description"
 msgid "D"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1652
+#: inc/classes/doingitright.class.php:1577
 msgctxt "no-Index"
 msgid "I"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1653
+#: inc/classes/doingitright.class.php:1578
 msgctxt "no-Follow"
 msgid "F"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1654
+#: inc/classes/doingitright.class.php:1579
 msgctxt "no-Archive"
 msgid "A"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1655
+#: inc/classes/doingitright.class.php:1580
 msgctxt "Redirect"
 msgid "R"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1657
+#: inc/classes/doingitright.class.php:1582
 msgctxt "But there are..."
 msgid "But"
 msgstr ""
 
-#: inc/classes/doingitright.class.php:1658
+#: inc/classes/doingitright.class.php:1583
 msgctxt "And there are..."
 msgid "And"
 msgstr ""
 
-#: inc/classes/feed.class.php:133
+#: inc/classes/doingitright.class.php:1585
+msgid "Length is far too short."
+msgstr ""
+
+#: inc/classes/doingitright.class.php:1586
+msgid "Length is too short."
+msgstr ""
+
+#: inc/classes/doingitright.class.php:1587
+msgid "Length is too long."
+msgstr ""
+
+#: inc/classes/doingitright.class.php:1588
+msgid "Length is far too long."
+msgstr ""
+
+#: inc/classes/doingitright.class.php:1589
+msgid "Length is good."
+msgstr ""
+
+#: inc/classes/feed.class.php:147
 msgctxt "The content source"
 msgid "Source"
 msgstr ""
 
 #. translators: 1: Title, 2: on, 3: Blogname
-#. translators: 1: Title on Blogname, 2: Separator, 3: Excerpt
 
-#: inc/classes/generate-description.class.php:471
-#: inc/classes/generate-description.class.php:475
+#: inc/classes/generate-description.class.php:464
+msgctxt "1: Title, 2: on, 3: Blogname"
 msgid "%1$s %2$s %3$s"
 msgstr ""
 
+#. translators: 1: Title, 2: Separator, 3: Excerpt
+
+#: inc/classes/generate-description.class.php:468
+msgctxt "1: Title, 2: Separator, 3: Excerpt"
+msgid "%1$s %2$s %3$s"
+msgstr ""
+
 #. translators: Front-end output.
 
-#: inc/classes/generate-description.class.php:611
-#: inc/classes/metaboxes.class.php:498
+#: inc/classes/generate-description.class.php:605
+#: inc/views/metaboxes/description-metabox.php:18
 msgctxt "Placement. e.g. Post Title \"on\" Blog Name"
 msgid "on"
 msgstr ""
@@ -403,7 +410,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-description.class.php:675
+#: inc/classes/generate-description.class.php:668
 msgid "Latest posts:"
 msgstr ""
 
@@ -410,20 +417,20 @@
 #. translators: Front-end output. 1: Taxonomy singular name, 2: Current
 #. taxonomy term
 
-#: inc/classes/generate-title.class.php:857
-#: inc/classes/generate-title.class.php:917
+#: inc/classes/generate-title.class.php:833
+#: inc/classes/generate-title.class.php:893
 msgid "%1$s: %2$s"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:861
+#: inc/classes/generate-title.class.php:837
 msgid "Author: %s"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:865
+#: inc/classes/generate-title.class.php:841
 msgctxt "yearly archives date format"
 msgid "Y"
 msgstr ""
@@ -430,13 +437,13 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:867
+#: inc/classes/generate-title.class.php:843
 msgid "Year: %s"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:870
+#: inc/classes/generate-title.class.php:846
 msgctxt "monthly archives date format"
 msgid "F Y"
 msgstr ""
@@ -443,13 +450,13 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:872
+#: inc/classes/generate-title.class.php:848
 msgid "Month: %s"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:875
+#: inc/classes/generate-title.class.php:851
 msgctxt "daily archives date format"
 msgid "F j, Y"
 msgstr ""
@@ -456,13 +463,13 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:877
+#: inc/classes/generate-title.class.php:853
 msgid "Day: %s"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:882
+#: inc/classes/generate-title.class.php:858
 msgctxt "post format archive title"
 msgid "Asides"
 msgstr ""
@@ -469,7 +476,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:885
+#: inc/classes/generate-title.class.php:861
 msgctxt "post format archive title"
 msgid "Galleries"
 msgstr ""
@@ -476,7 +483,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:888
+#: inc/classes/generate-title.class.php:864
 msgctxt "post format archive title"
 msgid "Images"
 msgstr ""
@@ -483,7 +490,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:891
+#: inc/classes/generate-title.class.php:867
 msgctxt "post format archive title"
 msgid "Videos"
 msgstr ""
@@ -490,7 +497,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:894
+#: inc/classes/generate-title.class.php:870
 msgctxt "post format archive title"
 msgid "Quotes"
 msgstr ""
@@ -497,7 +504,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:897
+#: inc/classes/generate-title.class.php:873
 msgctxt "post format archive title"
 msgid "Links"
 msgstr ""
@@ -504,7 +511,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:900
+#: inc/classes/generate-title.class.php:876
 msgctxt "post format archive title"
 msgid "Statuses"
 msgstr ""
@@ -511,7 +518,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:903
+#: inc/classes/generate-title.class.php:879
 msgctxt "post format archive title"
 msgid "Audio"
 msgstr ""
@@ -518,7 +525,7 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:906
+#: inc/classes/generate-title.class.php:882
 msgctxt "post format archive title"
 msgid "Chats"
 msgstr ""
@@ -525,1178 +532,1207 @@
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:911
+#: inc/classes/generate-title.class.php:887
 msgid "Archives: %s"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:921
+#: inc/classes/generate-title.class.php:897
 msgid "Archives"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:1025
+#: inc/classes/generate-title.class.php:998
 msgid "Untitled"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:1062
+#: inc/classes/generate-title.class.php:1033
 msgid "Search results for:"
 msgstr ""
 
 #. translators: Front-end output
 
-#: inc/classes/generate-title.class.php:1238
+#: inc/classes/generate-title.class.php:1206
 msgid "Protected: %s"
 msgstr ""
 
 #. translators: Front-end output
 
-#: inc/classes/generate-title.class.php:1242
+#: inc/classes/generate-title.class.php:1210
 msgid "Private: %s"
 msgstr ""
 
 #. translators: Front-end output.
 
-#: inc/classes/generate-title.class.php:1275
+#: inc/classes/generate-title.class.php:1242
 msgid "Page %s"
 msgstr ""
 
-#: inc/classes/init.class.php:314
+#: inc/classes/init.class.php:326
 msgid "Start The Seo Framework"
 msgstr ""
 
-#: inc/classes/init.class.php:315
+#: inc/classes/init.class.php:327
 msgid "End The Seo Framework"
 msgstr ""
 
-#: inc/classes/init.class.php:316
+#: inc/classes/init.class.php:328
 msgid "by Sybre Waaijer"
 msgstr ""
 
-#: inc/classes/inpost.class.php:155 inc/classes/inpost.class.php:333
+#: inc/classes/inpost.class.php:186 inc/classes/inpost.class.php:364
 msgid "%s SEO Settings"
 msgstr ""
 
-#: inc/classes/inpost.class.php:340 inc/classes/inpost.class.php:407
-#: inc/classes/inpost.class.php:565 inc/classes/inpost.class.php:660
+#: inc/classes/inpost.class.php:371 inc/classes/inpost.class.php:444
+#: inc/classes/inpost.class.php:600 inc/classes/inpost.class.php:696
 msgid "Doing it Right"
 msgstr ""
 
-#: inc/classes/inpost.class.php:350
+#: inc/classes/inpost.class.php:381
 msgid "%s Title"
 msgstr ""
 
-#: inc/classes/inpost.class.php:351 inc/classes/inpost.class.php:572
-#: inc/classes/metaboxes.class.php:1073
+#: inc/classes/inpost.class.php:382 inc/classes/inpost.class.php:607
+#: inc/views/metaboxes/homepage-metabox.php:196
 msgid "Recommended Length: 50 to 55 characters"
 msgstr ""
 
-#: inc/classes/inpost.class.php:359 inc/classes/inpost.class.php:372
-#: inc/classes/inpost.class.php:573 inc/classes/inpost.class.php:587
-#: inc/classes/metaboxes.class.php:1074 inc/classes/metaboxes.class.php:1092
+#: inc/classes/inpost.class.php:391 inc/classes/inpost.class.php:407
+#: inc/classes/inpost.class.php:609 inc/classes/inpost.class.php:626
+#: inc/views/metaboxes/homepage-metabox.php:198
+#: inc/views/metaboxes/homepage-metabox.php:219
 msgid "Characters Used: %s"
 msgstr ""
 
-#: inc/classes/inpost.class.php:366
+#: inc/classes/inpost.class.php:400
 msgid "%s Meta Description"
 msgstr ""
 
-#: inc/classes/inpost.class.php:367 inc/classes/inpost.class.php:586
-#: inc/classes/metaboxes.class.php:1091
+#: inc/classes/inpost.class.php:401 inc/classes/inpost.class.php:624
+#: inc/views/metaboxes/homepage-metabox.php:217
 msgid "Recommended Length: 145 to 155 characters"
 msgstr ""
 
-#: inc/classes/inpost.class.php:380 inc/classes/inpost.class.php:387
-#: inc/classes/inpost.class.php:394
-msgid "Apply %s to this term"
+#: inc/classes/inpost.class.php:417 inc/classes/inpost.class.php:424
+#: inc/classes/inpost.class.php:431
+msgid "Apply %s to this term?"
 msgstr ""
 
-#: inc/classes/inpost.class.php:381 inc/classes/metaboxes.class.php:1222
+#: inc/classes/inpost.class.php:418
+#: inc/views/metaboxes/homepage-metabox.php:316
 msgid "Tell Search Engines not to show this page in their search results"
 msgstr ""
 
-#: inc/classes/inpost.class.php:388 inc/classes/metaboxes.class.php:1232
+#: inc/classes/inpost.class.php:425
+#: inc/views/metaboxes/homepage-metabox.php:326
 msgid "Tell Search Engines not to follow links on this page"
 msgstr ""
 
-#: inc/classes/inpost.class.php:395 inc/classes/metaboxes.class.php:1242
+#: inc/classes/inpost.class.php:432
+#: inc/views/metaboxes/homepage-metabox.php:336
 msgid "Tell Search Engines not to save a cached copy of this page"
 msgstr ""
 
-#: inc/classes/inpost.class.php:571 inc/classes/metaboxes.class.php:1072
+#: inc/classes/inpost.class.php:606
+#: inc/views/metaboxes/homepage-metabox.php:195
 msgid "Custom %s Title"
 msgstr ""
 
-#: inc/classes/inpost.class.php:585 inc/classes/metaboxes.class.php:1090
+#: inc/classes/inpost.class.php:623
+#: inc/views/metaboxes/homepage-metabox.php:216
 msgid "Custom %s Description"
 msgstr ""
 
-#: inc/classes/inpost.class.php:596
+#: inc/classes/inpost.class.php:637
 msgid "Custom Canonical URL"
 msgstr ""
 
-#: inc/classes/inpost.class.php:597
+#: inc/classes/inpost.class.php:638
 msgid "Preferred %s URL location"
 msgstr ""
 
 #. translators: 1: Option, 2: Post or Page
 
-#: inc/classes/inpost.class.php:609 inc/classes/inpost.class.php:619
-#: inc/classes/inpost.class.php:629
+#: inc/classes/inpost.class.php:650 inc/classes/inpost.class.php:660
+#: inc/classes/inpost.class.php:670
 msgid "Apply %1$s to this %2$s"
 msgstr ""
 
-#: inc/classes/inpost.class.php:611
+#: inc/classes/inpost.class.php:652
 msgid "Tell Search Engines not to show this %s in their search results"
 msgstr ""
 
-#: inc/classes/inpost.class.php:621
+#: inc/classes/inpost.class.php:662
 msgid "Tell Search Engines not to follow links on this %s"
 msgstr ""
 
-#: inc/classes/inpost.class.php:631
+#: inc/classes/inpost.class.php:672
 msgid "Tell Search Engines not to save a cached copy of this %s"
 msgstr ""
 
-#: inc/classes/inpost.class.php:640
+#: inc/classes/inpost.class.php:676
 msgid "Local Search Settings"
 msgstr ""
 
-#: inc/classes/inpost.class.php:643
+#: inc/classes/inpost.class.php:679
 msgid "Exclude this %s from local search"
 msgstr ""
 
-#: inc/classes/inpost.class.php:644
+#: inc/classes/inpost.class.php:680
 msgid "This excludes this %s from local on-site search results"
 msgstr ""
 
-#: inc/classes/inpost.class.php:650
+#: inc/classes/inpost.class.php:686
 msgid "Custom 301 Redirect URL"
 msgstr ""
 
-#: inc/classes/inpost.class.php:651
+#: inc/classes/inpost.class.php:687
 msgid "This will force visitors to go to another URL"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:212
-msgid "Example Post Title"
+#: inc/classes/sitemaps.class.php:287
+msgid "Sitemap is generated for this view"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:229
-msgid "Automated Title Settings"
+#: inc/classes/sitemaps.class.php:289
+msgid "Sitemap is served from cache"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:230
-msgid "The page title is prominently shown within the browser tab as well as within the Search Engine results pages."
+#: inc/classes/sitemaps.class.php:407
+msgid "Sitemap is generated on"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:232
-msgid "Example Automated Title Output"
+#: inc/classes/siteoptions.class.php:471
+msgid "here"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:256 inc/classes/metaboxes.class.php:551
-#: inc/classes/metaboxes.class.php:707 inc/classes/metaboxes.class.php:878
-#: inc/classes/metaboxes.class.php:1328 inc/classes/metaboxes.class.php:1761
-#: inc/classes/metaboxes.class.php:2027
-msgid "General"
+#: inc/classes/siteoptions.class.php:472
+msgctxt "%s = here"
+msgid "View the new options %s."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:261 inc/classes/metaboxes.class.php:556
-#: inc/classes/metaboxes.class.php:883
-msgid "Additions"
+#: inc/classes/termdata.class.php:361
+#: inc/views/metaboxes/social-metabox.php:248
+msgid "Pages"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:272
-msgid "Prefixes"
+#: inc/classes/transients.class.php:263
+msgid "Third parameter must be a known type."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:311 inc/classes/metaboxes.class.php:592
-msgid "Recommended"
+#: inc/deprecated/deprecated.class.php:627
+msgid "%s of The SEO Framework"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:315
-msgid "Document Title Separator"
+#: inc/views/metaboxes/description-metabox.php:17
+msgid "Example Title"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:322
-msgid "If the title consists of two parts (original title and optional addition), then the separator will go in-between them."
+#: inc/views/metaboxes/description-metabox.php:19
+msgid "This is an example description..."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:347
-msgid "The Home Page has a specific option."
+#: inc/views/metaboxes/description-metabox.php:41
+msgid "Automated Description Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:351 inc/classes/metaboxes.class.php:1139
-msgid "Document Title Additions Location"
+#: inc/views/metaboxes/description-metabox.php:42
+#: inc/views/metaboxes/homepage-metabox.php:228
+msgid "The meta description can be used to determine the text used under the title on Search Engine results pages."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:354 inc/classes/metaboxes.class.php:1141
-msgid "Determines which side the added title text will go on."
+#: inc/views/metaboxes/description-metabox.php:45
+msgid "Example Automated Description Output"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:360 inc/classes/metaboxes.class.php:1148
-msgid "Left:"
+#: inc/views/metaboxes/description-metabox.php:67
+#: inc/views/metaboxes/homepage-metabox.php:30
+#: inc/views/metaboxes/knowledge-metabox.php:26
+#: inc/views/metaboxes/robots-metabox.php:57
+#: inc/views/metaboxes/sitemaps-metabox.php:38
+#: inc/views/metaboxes/social-metabox.php:25
+#: inc/views/metaboxes/title-metabox.php:61
+msgid "General"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:367 inc/classes/metaboxes.class.php:1155
-msgid "Right:"
+#: inc/views/metaboxes/description-metabox.php:72
+#: inc/views/metaboxes/homepage-metabox.php:35
+#: inc/views/metaboxes/title-metabox.php:66
+msgid "Additions"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:385
-msgid "Remove Blogname from Title"
+#: inc/views/metaboxes/description-metabox.php:98
+#: inc/views/metaboxes/title-metabox.php:105
+msgid "Recommended"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:389
-msgid "Remove Blogname from title?"
+#: inc/views/metaboxes/description-metabox.php:102
+msgid "Description Excerpt Separator"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:391
-msgid "This might decouple your posts and pages from the rest of the website."
+#: inc/views/metaboxes/description-metabox.php:109
+msgid "If the Automated Description consists of two parts (title and excerpt), then the separator will go in-between them."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:393
-msgid "Only use this option if you are aware of its SEO effects."
+#: inc/views/metaboxes/description-metabox.php:120
+msgid "Description Additions Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:419 inc/classes/metaboxes.class.php:663
-msgid "Category"
+#: inc/views/metaboxes/description-metabox.php:122
+msgid "To create a more organic description, a small introduction can be added before the description."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:431
-msgid "Example Category"
+#: inc/views/metaboxes/description-metabox.php:123
+msgid "The introduction consists of the title and optionally the blogname."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:449
-msgid "Title prefix options"
+#: inc/views/metaboxes/description-metabox.php:128
+msgid "Add descriptive Additions to Description"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:450
-msgid "On archives a descriptive prefix may be added to the title."
+#: inc/views/metaboxes/description-metabox.php:132
+msgid "Add Additions to automated description?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:452
-msgid "Example Automated Archive Title Output"
+#: inc/views/metaboxes/description-metabox.php:133
+msgid "This creates good meta descriptions"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:460
-msgid "Remove Archive Title Prefixes"
+#: inc/views/metaboxes/description-metabox.php:137
+msgid "Add Blogname to Additions"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:464
-msgid "Remove Prefixes from title?"
+#: inc/views/metaboxes/description-metabox.php:141
+msgid "Add Blogname to automated description additions?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:468
-msgid "The prefix helps visitors and Search Engines determine what kind of page they're visiting"
+#: inc/views/metaboxes/feed-metabox.php:10
+msgid "Content Feed Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:497
-msgid "Example Title"
+#: inc/views/metaboxes/feed-metabox.php:11
+msgid "Sometimes, your content can get stolen by robots through the WordPress feeds. This can cause duplicate content issues. To prevent this from happening, it's recommended to convert the feed's content into an excerpt."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:499
-msgid "This is an example description..."
+#: inc/views/metaboxes/feed-metabox.php:12
+msgid "Adding a backlink below the feed's content will also let the visitors know where the content came from."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:526
-msgid "Automated Description Settings"
+#: inc/views/metaboxes/feed-metabox.php:17
+msgid "Change Feed Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:527 inc/classes/metaboxes.class.php:1099
-msgid "The meta description can be used to determine the text used under the title on Search Engine results pages."
+#: inc/views/metaboxes/feed-metabox.php:19
+msgid "Convert feed content into excerpts?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:529
-msgid "Example Automated Description Output"
+#: inc/views/metaboxes/feed-metabox.php:20
+msgid "By default the excerpt will be at most 400 characters long"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:596
-msgid "Description Excerpt Separator"
+#: inc/views/metaboxes/feed-metabox.php:22
+msgid "Add backlinks below the feed content?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:603
-msgid "If the Automated Description consists of two parts (title and excerpt), then the separator will go in-between them."
+#: inc/views/metaboxes/feed-metabox.php:23
+msgid "This link will not be followed by Search Engines"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:626
-msgid "Description Additions Settings"
+#: inc/views/metaboxes/feed-metabox.php:35
+msgid "Reading Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:627
-msgid "To create a more organic description, a small introduction can be added before the description."
+#: inc/views/metaboxes/feed-metabox.php:38
+msgctxt "%s = Reading Settings"
+msgid "Note: The feed is already converted into an excerpt (summary) through the %s."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:628
-msgid "The introduction consists of the title and optionally the blogname."
+#: inc/views/metaboxes/feed-metabox.php:42
+msgid "View feed"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:632
-msgid "Add descriptive Additions to Description"
+#: inc/views/metaboxes/feed-metabox.php:42
+msgctxt "The feed can be found %s."
+msgid "here"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:636
-msgid "Add Additions to automated description?"
+#: inc/views/metaboxes/feed-metabox.php:44
+msgctxt "%s = here"
+msgid "The feed can be found %s."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:637
-msgid "This creates good meta descriptions"
+#: inc/views/metaboxes/homepage-metabox.php:11
+msgid "These settings will take precedence over the settings set within the Home Page edit screen, if any."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:641
-msgid "Add Blogname to Additions"
+#: inc/views/metaboxes/homepage-metabox.php:40
+msgid "Robots"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:645
-msgid "Add Blogname to automated description additions?"
+#: inc/views/metaboxes/homepage-metabox.php:68
+msgid "Title"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:664
-msgid "Tag"
+#: inc/views/metaboxes/homepage-metabox.php:69
+msgid "Description"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:665
-msgid "Author"
+#: inc/views/metaboxes/homepage-metabox.php:70
+#: inc/views/metaboxes/homepage-metabox.php:246
+#: inc/views/metaboxes/homepage-metabox.php:285
+#: inc/views/metaboxes/social-metabox.php:250
+#: inc/views/metaboxes/social-metabox.php:281
+msgid "Home Page"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:666
-msgid "Date"
+#. translators: 1: Option, 2: Page SEO Settings, 3: Home Page
+
+#: inc/views/metaboxes/homepage-metabox.php:108
+#: inc/views/metaboxes/homepage-metabox.php:167
+msgid "Note: The %1$s is fetched from the %2$s on the %3$s."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:667
-msgid "Search Pages"
+#: inc/views/metaboxes/homepage-metabox.php:108
+#: inc/views/metaboxes/homepage-metabox.php:165
+msgid "Page SEO Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:668
-msgid "Attachment Pages"
+#: inc/views/metaboxes/homepage-metabox.php:184
+msgid "Custom %s Title Tagline"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:669
-msgctxt "...for the entire site"
-msgid "the entire site"
+#: inc/views/metaboxes/homepage-metabox.php:250
+#: inc/views/metaboxes/title-metabox.php:132
+msgid "Document Title Additions Location"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:676
-msgid "NoIndex"
+#: inc/views/metaboxes/homepage-metabox.php:251
+#: inc/views/metaboxes/title-metabox.php:134
+msgid "Determines which side the added title text will go on."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:677
-msgid "These options prevent indexing of the selected archives and pages. If you enable this, the selected archives or pages will be removed from Search Engine results pages."
+#: inc/views/metaboxes/homepage-metabox.php:257
+#: inc/views/metaboxes/title-metabox.php:140
+msgid "Left:"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:681
-msgid "NoFollow"
+#: inc/views/metaboxes/homepage-metabox.php:264
+#: inc/views/metaboxes/title-metabox.php:147
+msgid "Right:"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:682
-msgid "These options prevent links from being followed on the selected archives and pages. If you enable this, the selected archives or pages in-page links will gain no SEO value, including your own links."
+#: inc/views/metaboxes/homepage-metabox.php:272
+msgid "%s Tagline"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:686
-msgid "NoArchive"
+#: inc/views/metaboxes/homepage-metabox.php:276
+msgid "Add site description (tagline) to the Title on the %s?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:687
-msgid "These options prevent caching of the selected archives and pages. If you enable this, Search Engines will not create a cached copy of the selected archives or pages."
+#: inc/views/metaboxes/homepage-metabox.php:302
+msgid "View Home Page Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:713
-msgid "Indexing"
+#: inc/views/metaboxes/homepage-metabox.php:302
+msgid "Checked in Page"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:719
-msgid "Following"
+#: inc/views/metaboxes/homepage-metabox.php:305
+msgid "Home Page Robots Meta Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:725
-msgid "Archiving"
+#. translators: 1: Option, 2: Location
+
+#: inc/views/metaboxes/homepage-metabox.php:313
+#: inc/views/metaboxes/homepage-metabox.php:323
+#: inc/views/metaboxes/homepage-metabox.php:333
+msgid "Apply %1$s to the %2$s?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:758
-msgid "Open Directory Settings"
+#: inc/views/metaboxes/homepage-metabox.php:368
+msgid "Note: If any of these options are unchecked, but are checked on the Home Page, they will be outputted regardless."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:759
-msgid "Sometimes, Search Engines use resources from certain Directories to find titles and descriptions for your content. You generally don't want them to. Turn these options on to prevent them from doing so."
+#: inc/views/metaboxes/homepage-metabox.php:374
+msgid "Home Page Pagination Robots Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:760
-msgid "The Open Directory Project and the Yahoo! Directory may contain outdated SEO values. Therefore, it's best to leave these options checked."
+#: inc/views/metaboxes/homepage-metabox.php:375
+msgid "If your Home Page is paginated and outputs content that's also found elsewhere on the website, enabling this option might prevent duplicate content."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:767 inc/classes/metaboxes.class.php:772
-msgid "Apply %s to the entire site?"
+#. translators: 1: Option, 2: Location
+
+#: inc/views/metaboxes/homepage-metabox.php:383
+msgid "Apply %1$s to every second or later page on the %2$s?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:782
-msgid "Paginated Archive Settings"
+#: inc/views/metaboxes/knowledge-metabox.php:31
+msgid "Website"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:783
-msgid "Indexing the second or later page of any archive might cause duplication errors. Search Engines look down upon them; therefore, it's recommended to disable indexing of those pages."
+#: inc/views/metaboxes/knowledge-metabox.php:57
+msgid "The Knowledge Graph lets Google and other Search Engines know where to find you or your organization and its relevant content."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:789
-msgid "Apply %s to every second or later archive page?"
+#: inc/views/metaboxes/knowledge-metabox.php:58
+msgid "Google is becoming more of an 'Answer Engine' than a 'Search Engine'. Setting up these options could have a positive impact on the SEO value of your website."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:811
-msgid "%s Robots Settings"
+#: inc/views/metaboxes/knowledge-metabox.php:64
+msgid "Output Knowledge tags?"
 msgstr ""
 
-#. translators: 1: Option, 2: Post Type
+#: inc/views/metaboxes/knowledge-metabox.php:74
+msgid "Website logo"
+msgstr ""
 
-#: inc/classes/metaboxes.class.php:823
-msgid "Apply %1$s to %2$s?"
+#: inc/views/metaboxes/knowledge-metabox.php:80
+msgid "Use the Favicon from Customizer as the Organization Logo?"
 msgstr ""
 
-#. translators: 1: Option, 2: Post Type
-
-#: inc/classes/metaboxes.class.php:827
-msgid "Apply %1$s to %2$s Archives?"
+#: inc/views/metaboxes/knowledge-metabox.php:81
+msgid "This option only has an effect when this site represents an Organization. If left disabled, Search Engines will look elsewhere for a logo, if it exists and is assigned as a logo."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:858
-msgid "These settings will take precedence over the settings set within the Home Page edit screen, if any."
+#: inc/views/metaboxes/knowledge-metabox.php:92
+msgid "About this website"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:888
-msgid "Robots"
+#: inc/views/metaboxes/knowledge-metabox.php:93
+msgid "Who or what is your website about?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:938
-msgid "Title"
+#: inc/views/metaboxes/knowledge-metabox.php:99
+msgctxt "...Organization or Person."
+msgid "This website represents:"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:939
-msgid "Description"
+#: inc/views/metaboxes/knowledge-metabox.php:105
+msgid "An Organization"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:940 inc/classes/metaboxes.class.php:1117
-#: inc/classes/metaboxes.class.php:1188 inc/classes/metaboxes.class.php:1583
-#: inc/classes/metaboxes.class.php:1616
-msgid "Home Page"
+#: inc/views/metaboxes/knowledge-metabox.php:106
+msgid "A Person"
 msgstr ""
 
-#. translators: 1: Option, 2: Page SEO Settings, 3: Home Page
-
-#: inc/classes/metaboxes.class.php:983 inc/classes/metaboxes.class.php:1044
-msgid "Note: The %1$s is fetched from the %2$s on the %3$s."
+#: inc/views/metaboxes/knowledge-metabox.php:119
+msgid "The organization or personal name"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:983 inc/classes/metaboxes.class.php:1044
-msgid "Page SEO Settings"
+#: inc/views/metaboxes/knowledge-metabox.php:130
+msgid "Social Pages connected to this website"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1061
-msgid "Custom %s Title Tagline"
+#: inc/views/metaboxes/knowledge-metabox.php:131
+msgid "Don't have a page at a site or is the profile only privately accessible? Leave that field empty. Unsure? Fill it in anyway."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1169
-msgid "%s Tagline"
+#: inc/views/metaboxes/knowledge-metabox.php:132
+msgid "Add the link that leads directly to the social page of this website."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1173
-msgid "Add site description (tagline) to the Title on the %s?"
+#: inc/views/metaboxes/knowledge-metabox.php:136
+msgctxt "No spaces. E.g. https://facebook.com/RelatedProfile"
+msgid "RelatedProfile"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1205
-msgid "View Home Page Settings"
+#: inc/views/metaboxes/knowledge-metabox.php:137
+msgctxt "Social Profile"
+msgid "Profile"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1205
-msgid "Checked in Page"
+#: inc/views/metaboxes/knowledge-metabox.php:203
+msgid "Blog"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1211
-msgid "Home Page Robots Meta Settings"
+#: inc/views/metaboxes/robots-metabox.php:13
+#: inc/views/metaboxes/title-metabox.php:192
+msgid "Category"
 msgstr ""
 
-#. translators: 1: Option, 2: Location
-
-#: inc/classes/metaboxes.class.php:1219 inc/classes/metaboxes.class.php:1229
-#: inc/classes/metaboxes.class.php:1239
-msgid "Apply %1$s to the %2$s?"
+#: inc/views/metaboxes/robots-metabox.php:14
+msgid "Tag"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1272
-msgid "Note: If any of these options are unchecked, but are checked on the Home Page, they will be outputted regardless."
+#: inc/views/metaboxes/robots-metabox.php:15
+msgid "Author"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1278
-msgid "Home Page Pagination Robots Settings"
+#: inc/views/metaboxes/robots-metabox.php:16
+msgid "Date"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1280
-msgid "If your Home Page is paginated and outputs content that's also found elsewhere on the website, enabling this option might prevent duplicate content."
+#: inc/views/metaboxes/robots-metabox.php:17
+msgid "Search Pages"
 msgstr ""
 
-#. translators: 1: Option, 2: Location
-
-#: inc/classes/metaboxes.class.php:1288
-msgid "Apply %1$s to every second or later page on the %2$s?"
+#: inc/views/metaboxes/robots-metabox.php:18
+msgid "Attachment Pages"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1343
-msgid "Post Dates"
+#: inc/views/metaboxes/robots-metabox.php:19
+msgctxt "...for the entire site"
+msgid "the entire site"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1348
-msgid "Link Relationships"
+#: inc/views/metaboxes/robots-metabox.php:26
+msgid "NoIndex"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1379
-msgid "Site Shortlink Settings"
+#: inc/views/metaboxes/robots-metabox.php:27
+msgid "These options prevent indexing of the selected archives and pages. If you enable this, the selected archives or pages will be removed from Search Engine results pages."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1380
-msgid "The shortlink tag might have some use for 3rd party service discoverability, but it has little to no SEO value whatsoever."
+#: inc/views/metaboxes/robots-metabox.php:31
+msgid "NoFollow"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1387
-msgid "Output shortlink tag?"
+#: inc/views/metaboxes/robots-metabox.php:32
+msgid "These options prevent links from being followed on the selected archives and pages. If you enable this, the selected archives or pages in-page links will gain no SEO value, including your own links."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1396
-msgid "Social Meta Tags Settings"
+#: inc/views/metaboxes/robots-metabox.php:36
+msgid "NoArchive"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1397
-msgid "Output various meta tags for social site integration, among other 3rd party services."
+#: inc/views/metaboxes/robots-metabox.php:37
+msgid "These options prevent caching of the selected archives and pages. If you enable this, Search Engines will not create a cached copy of the selected archives or pages."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1406
-msgid "Output Open Graph meta tags?"
+#: inc/views/metaboxes/robots-metabox.php:63
+msgid "Indexing"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1407
-msgid "Facebook, Twitter, Pinterest and many other social sites make use of these tags."
+#: inc/views/metaboxes/robots-metabox.php:69
+msgid "Following"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1413
-msgid "Note: Another Open Graph plugin has been detected."
+#: inc/views/metaboxes/robots-metabox.php:75
+msgid "Archiving"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1421
-msgid "Output Facebook meta tags?"
+#: inc/views/metaboxes/robots-metabox.php:97
+msgid "Open Directory Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1422 inc/classes/metaboxes.class.php:1434
-msgid "Output various tags targetted at %s."
+#: inc/views/metaboxes/robots-metabox.php:98
+msgid "Sometimes, Search Engines use resources from certain Directories to find titles and descriptions for your content. You generally don't want them to. Turn these options on to prevent them from doing so."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1433
-msgid "Output Twitter meta tags?"
+#: inc/views/metaboxes/robots-metabox.php:99
+msgid "The Open Directory Project and the Yahoo! Directory may contain outdated SEO values. Therefore, it's best to leave these options checked."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1440
-msgid "Note: Another Twitter Card plugin has been detected."
+#: inc/views/metaboxes/robots-metabox.php:105
+#: inc/views/metaboxes/robots-metabox.php:111
+msgid "Apply %s to the entire site?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1454
-msgctxt "Example Facebook Personal URL"
-msgid "http://www.facebook.com/YourPersonalProfile"
+#: inc/views/metaboxes/robots-metabox.php:120
+msgid "Paginated Archive Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1457
-msgctxt "Example Verified Facebook Business URL"
-msgid "http://www.facebook.com/YourVerifiedBusinessProfile"
+#: inc/views/metaboxes/robots-metabox.php:121
+msgid "Indexing the second or later page of any archive might cause duplication errors. Search Engines look down upon them; therefore, it's recommended to disable indexing of those pages."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1463
-msgid "Default Facebook Integration Settings"
+#: inc/views/metaboxes/robots-metabox.php:127
+msgid "Apply %s to every second or later archive page?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1464
-msgid "Facebook post sharing works mostly through Open Graph. However, you can also link your Business and Personal Facebook pages, among various other options."
+#: inc/views/metaboxes/robots-metabox.php:140
+msgid "%s Robots Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1465
-msgid "When these options are filled in, Facebook might link your Facebook profile to be followed and liked when your post or page is shared."
+#. translators: 1: Option, 2: Post Type
+
+#: inc/views/metaboxes/robots-metabox.php:149
+msgid "Apply %1$s to %2$s?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1471
-msgid "Article Author Facebook URL"
+#. translators: 1: Option, 2: Post Type
+
+#: inc/views/metaboxes/robots-metabox.php:153
+msgid "Apply %1$s to %2$s Archives?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1472
-msgid "Your Facebook Profile"
+#: inc/views/metaboxes/schema-metabox.php:11
+msgid "Schema.org Output Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1481
-msgid "Article Publisher Facebook URL"
+#: inc/views/metaboxes/schema-metabox.php:14
+msgid "Another Schema.org plugin has been detected."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1482
-msgid "To use this, you need to be a verified business"
+#: inc/views/metaboxes/schema-metabox.php:16
+msgid "The Schema.org markup is a standard way of annotating structured data for Search Engines. This markup is represented within hidden scripts throughout the website."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1491
-msgid "Facebook App ID"
+#: inc/views/metaboxes/schema-metabox.php:17
+msgid "When your web pages include structured data markup, Search Engines can use that data to index your content better, present it more prominently in Search Results, and use it in several different applications."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1492
-msgid "Get Facebook App ID"
+#. translators:
+#. https:developers.google.com/search/docs/data-types/sitelinks-searchbox
+
+#: inc/views/metaboxes/schema-metabox.php:23
+#: inc/views/metaboxes/schema-metabox.php:27
+msgctxt "Product name"
+msgid "Sitelinks Searchbox"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1512
-msgctxt "Twitter @username"
-msgid "@your-site-username"
+#: inc/views/metaboxes/schema-metabox.php:24
+msgid "When Search users search for your brand name, the following option allows them to search through your website directly from the Search Results."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1515
-msgctxt "Twitter @username"
-msgid "@your-personal-username"
+#: inc/views/metaboxes/schema-metabox.php:34
+msgctxt "Product name"
+msgid "Enable Sitelinks Searchbox?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1520
-msgid "Default Twitter Integration Settings"
+#: inc/views/metaboxes/schema-metabox.php:44
+msgid "Site Name"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1521
-msgid "Twitter post sharing works mostly through Open Graph. However, you can also link your Business and Personal Twitter pages, among various other options."
+#: inc/views/metaboxes/schema-metabox.php:45
+msgid "When using breadcrumbs, the first entry is by default your website's address. Using the following option will convert it to the Site Name."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1526
-msgid "Twitter Card Type"
+#: inc/views/metaboxes/schema-metabox.php:48
+msgid "Include your Site Name in Search Results"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1527
-msgid "What kind of Twitter card would you like to use? It will default to %s if no image is found."
+#: inc/views/metaboxes/schema-metabox.php:55
+msgid "Convert URL to Site Name?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1537
-msgid "Example"
+#: inc/views/metaboxes/schema-metabox.php:56
+msgid "The Site Name is: %s"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1548
-msgid "When the following options are filled in, Twitter might link your Twitter Site or Personal Profile when your post or page is shared."
+#: inc/views/metaboxes/schema-metabox.php:65
+msgid "Breadcrumbs"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1551
-msgid "Your Website's Twitter Profile"
+#: inc/views/metaboxes/schema-metabox.php:66
+msgid "Breadcrumb trails indicate the page's position in the site hierarchy. Using the following option will show the hierarchy within the Search Results when available."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1552 inc/classes/metaboxes.class.php:1562
-msgid "Find your @username"
+#: inc/views/metaboxes/schema-metabox.php:69
+msgid "About Breadcrumbs"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1561
-msgid "Your Personal Twitter Profile"
+#: inc/views/metaboxes/schema-metabox.php:76
+msgid "Enable Breadcrumbs?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1581 inc/classes/termdata.class.php:189
-#: inc/classes/termdata.class.php:225
-msgid "Pages"
+#: inc/views/metaboxes/schema-metabox.php:77
+msgid "Multiple trails can be outputted. The longest trail is prioritized."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1582
-msgid "Posts"
+#: inc/views/metaboxes/sitemaps-metabox.php:14
+msgid "Permalink Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1586
-msgid "Post Date Settings"
+#: inc/views/metaboxes/sitemaps-metabox.php:14
+#: inc/views/metaboxes/sitemaps-metabox.php:134
+#: inc/views/metaboxes/sitemaps-metabox.php:143
+msgctxt "The sitemap can be found %s."
+msgid "here"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1587
-msgid "Some Search Engines output the publishing date and modified date next to the search results. These help Search Engines find new content and could impact the SEO value."
+#: inc/views/metaboxes/sitemaps-metabox.php:16
+msgid "You're using the plain permalink structure."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1588
-msgid "It's recommended on posts, but it's not recommended on pages unless you modify or create new pages frequently."
+#: inc/views/metaboxes/sitemaps-metabox.php:17
+msgid "This means we can't output the sitemap through the WordPress rewrite rules."
 msgstr ""
 
-#. translators: 1: Option, 2: Post Type
-
-#: inc/classes/metaboxes.class.php:1592 inc/classes/metaboxes.class.php:1596
-#: inc/classes/metaboxes.class.php:1603 inc/classes/metaboxes.class.php:1607
-#: inc/classes/metaboxes.class.php:1621 inc/classes/metaboxes.class.php:1625
-msgid "Add %1$s to %2$s?"
+#: inc/views/metaboxes/sitemaps-metabox.php:19
+msgctxt "%s = here"
+msgid "Change your Permalink Settings %s (Recommended: 'postname')."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1617
-msgid "Because you only publish the Home Page once, Search Engines might think your website is outdated. This can be prevented by disabling the following options."
+#: inc/views/metaboxes/sitemaps-metabox.php:48
+msgid "Timestamps"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1643
-msgid "Link Relationship Settings"
+#: inc/views/metaboxes/sitemaps-metabox.php:53
+msgctxt "Ping or notify Search Engine"
+msgid "Ping"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1644
-msgid "Some Search Engines look for relations between the content of your pages. If you have multiple pages for a single Post or Page, or have archives indexed, this option will help Search Engines look for the right page to display in the Search Results."
+#: inc/views/metaboxes/sitemaps-metabox.php:106
+msgid "Sitemap Integration Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1645
-msgid "It's recommended to turn this option on for better SEO consistency and to prevent duplicate content errors."
+#: inc/views/metaboxes/sitemaps-metabox.php:109
+msgid "Another active sitemap plugin has been detected. This means that the sitemap functionality has been replaced."
 msgstr ""
 
-#. translators: %s = <code>rel</code>
-
-#: inc/classes/metaboxes.class.php:1650
-msgid "Add %s link tags to Posts and Pages?"
+#: inc/views/metaboxes/sitemaps-metabox.php:111
+msgid "A sitemap has been detected in the root folder of your website. This means that the sitemap functionality has no effect."
 msgstr ""
 
-#. translators: %s = <code>rel</code>
-
-#: inc/classes/metaboxes.class.php:1654
-msgid "Add %s link tags to Archives?"
+#: inc/views/metaboxes/sitemaps-metabox.php:113
+msgid "The Sitemap is an XML file that lists pages and posts for your website along with optional metadata about each post or page. This helps Search Engines crawl your website more easily."
 msgstr ""
 
-#. translators: %s = <code>rel</code>
-
-#: inc/classes/metaboxes.class.php:1658
-msgid "Add %s link tags to the Home Page?"
+#: inc/views/metaboxes/sitemaps-metabox.php:114
+msgid "The optional metadata include the post and page modified time and a page priority indication, which is automated."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1684
-msgid "Webmaster Integration Settings"
+#: inc/views/metaboxes/sitemaps-metabox.php:119
+msgid "Sitemap Output"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1685
-msgid "When adding your website to Google, Bing and other Webmaster Tools, you'll be asked to add a code or file to your website for verification purposes. These options will help you easily integrate those codes."
+#: inc/views/metaboxes/sitemaps-metabox.php:126
+msgid "Output Sitemap?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1686
-msgid "Verifying your website has no SEO value whatsoever. But you might gain added benefits such as search ranking insights to help you improve your website's content."
+#: inc/views/metaboxes/sitemaps-metabox.php:134
+msgid "View sitemap"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1692
-msgid "Google Webmaster Verification Code"
+#: inc/views/metaboxes/sitemaps-metabox.php:135
+msgctxt "%s = here"
+msgid "The sitemap can be found %s."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1693
-msgid "Get the Google Verification code"
+#: inc/views/metaboxes/sitemaps-metabox.php:143
+msgid "View robots.txt"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1702
-msgid "Bing Webmaster Verification Code"
+#: inc/views/metaboxes/sitemaps-metabox.php:145
+msgid "Robots.txt Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1703
-msgid "Get the Bing Verification Code"
+#: inc/views/metaboxes/sitemaps-metabox.php:148
+msgid "The robots.txt file is the first thing Search Engines look for. If you add the sitemap location in the robots.txt file, then Search Engines will look for and index the sitemap."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1712
-msgid "Yandex Webmaster Verification Code"
+#: inc/views/metaboxes/sitemaps-metabox.php:149
+msgid "If you do not add the sitemap location to the robots.txt file, you will need to notify Search Engines manually through the Webmaster Console provided by the Search Engines."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1713
-msgid "Get the Yandex Verification Code"
+#: inc/views/metaboxes/sitemaps-metabox.php:154
+msgid "Add sitemap location in robots.txt"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1722
-msgid "Pinterest Analytics Verification Code"
+#: inc/views/metaboxes/sitemaps-metabox.php:161
+msgid "Add sitemap location in robots?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1723
-msgid "Get the Pinterest Verification Code"
+#: inc/views/metaboxes/sitemaps-metabox.php:167
+msgid "Another robots.txt sitemap Location addition has been detected."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1766
-msgid "Website"
+#: inc/views/metaboxes/sitemaps-metabox.php:170
+msgctxt "%s = here"
+msgid "The robots.txt file can be found %s."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1803
-msgid "The Knowledge Graph lets Google and other Search Engines know where to find you or your organization and its relevant content."
+#: inc/views/metaboxes/sitemaps-metabox.php:189
+msgid "Timestamps Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1804
-msgid "Google is becoming more of an 'Answer Engine' than a 'Search Engine'. Setting up these options could have a positive impact on the SEO value of your website."
+#: inc/views/metaboxes/sitemaps-metabox.php:190
+msgid "The modified time suggests to Search Engines where to look for content changes. It has no impact on the SEO value unless you drastically change pages or posts. It then depends on how well your content is constructed."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1807
-msgid "Output Knowledge tags?"
+#: inc/views/metaboxes/sitemaps-metabox.php:191
+msgid "By default, the sitemap only outputs the modified date if you've enabled them within the Social Metabox. This setting overrides those settings for the Sitemap."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1817
-msgctxt "WordPress Customizer"
-msgid "Website logo"
+#: inc/views/metaboxes/sitemaps-metabox.php:196
+msgid "Output Modified Date"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1819
-msgid "Use the Favicon from Customizer as the Organization Logo?"
+#: inc/views/metaboxes/sitemaps-metabox.php:203
+msgid "Add %s to the sitemap?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1820
-msgid "This option only has an effect when this site represents an Organization. If left disabled, Search Engines will look elsewhere for a logo, if it exists and is assigned as a logo."
+#: inc/views/metaboxes/sitemaps-metabox.php:213
+msgid "Timestamp Format Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1841
-msgid "About this website"
+#: inc/views/metaboxes/sitemaps-metabox.php:214
+msgid "Determines how specific the modification timestamp is."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1842
-msgid "Who or what is your website about?"
+#: inc/views/metaboxes/sitemaps-metabox.php:220
+msgid "Complete date"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1847
-msgctxt "...Organization or Person."
-msgid "This website represents:"
+#: inc/views/metaboxes/sitemaps-metabox.php:226
+msgid "Complete date plus hours, minutes and timezone"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1853
-msgid "An Organization"
+#: inc/views/metaboxes/sitemaps-metabox.php:236
+msgid "Ping Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1854
-msgid "A Person"
+#: inc/views/metaboxes/sitemaps-metabox.php:237
+msgid "Notifying Search Engines of a sitemap change is helpful to get your content indexed as soon as possible."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1867
-msgid "The organization or personal name"
+#: inc/views/metaboxes/sitemaps-metabox.php:238
+msgid "By default this will happen at most once an hour."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1887
-msgid "Social Pages connected to this website"
+#: inc/views/metaboxes/sitemaps-metabox.php:243
+msgid "Notify Search Engines"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1888
-msgid "Don't have a page at a site or is the profile only privately accessible? Leave that field empty. Unsure? Fill it in anyway."
+#: inc/views/metaboxes/sitemaps-metabox.php:255
+msgid "Notify %s about sitemap changes?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1889
-msgid "Add the link that leads directly to the social page of this website."
+#: inc/views/metaboxes/social-metabox.php:40
+msgid "Post Dates"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1894
-msgctxt "No spaces. E.g. https://facebook.com/RelatedProfile"
-msgid "RelatedProfile"
+#: inc/views/metaboxes/social-metabox.php:45
+msgid "Link Relationships"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1895
-msgctxt "Social Profile"
-msgid "Profile"
+#: inc/views/metaboxes/social-metabox.php:65
+msgid "Site Shortlink Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:1961
-msgid "Blog"
+#: inc/views/metaboxes/social-metabox.php:66
+msgid "The shortlink tag might have some use for 3rd party service discoverability, but it has little to no SEO value whatsoever."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2001
-msgid "Permalink Settings"
+#: inc/views/metaboxes/social-metabox.php:72
+msgid "Output shortlink tag?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2001 inc/classes/metaboxes.class.php:2134
-#: inc/classes/metaboxes.class.php:2153
-msgctxt "The sitemap can be found %s."
-msgid "here"
+#: inc/views/metaboxes/social-metabox.php:82
+msgid "Social Meta Tags Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2004
-msgid "You're using the plain permalink structure."
+#: inc/views/metaboxes/social-metabox.php:84
+msgid "Output various meta tags for social site integration, among other 3rd party services."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2005
-msgid "This means we can't output the sitemap through the WordPress rewrite rules."
+#: inc/views/metaboxes/social-metabox.php:92
+msgid "Output Open Graph meta tags?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2007
-msgctxt "%s = here"
-msgid "Change your Permalink Settings %s (Recommended: 'postname')."
+#: inc/views/metaboxes/social-metabox.php:93
+msgid "Facebook, Twitter, Pinterest and many other social sites make use of these tags."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2037
-msgid "Timestamps"
+#: inc/views/metaboxes/social-metabox.php:100
+msgid "Note: Another Open Graph plugin has been detected."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2042
-msgctxt "Ping or notify Search Engine"
-msgid "Ping"
+#: inc/views/metaboxes/social-metabox.php:108
+msgid "Output Facebook meta tags?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2106
-msgid "Sitemap Integration Settings"
+#: inc/views/metaboxes/social-metabox.php:109
+#: inc/views/metaboxes/social-metabox.php:122
+msgid "Output various tags targetted at %s."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2111
-msgid "Another active sitemap plugin has been detected. This means that the sitemap functionality has been replaced."
+#: inc/views/metaboxes/social-metabox.php:121
+msgid "Output Twitter meta tags?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2115
-msgid "A sitemap has been detected in the root folder of your website. This means that the sitemap functionality has no effect."
+#: inc/views/metaboxes/social-metabox.php:129
+msgid "Note: Another Twitter Card plugin has been detected."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2119
-msgid "The Sitemap is an XML file that lists pages and posts for your website along with optional metadata about each post or page. This helps Search Engines crawl your website more easily."
+#: inc/views/metaboxes/social-metabox.php:136
+msgctxt "Example Facebook Personal URL"
+msgid "http://www.facebook.com/YourPersonalProfile"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2120
-msgid "The optional metadata include the post and page modified time and a page priority indication, which is automated."
+#: inc/views/metaboxes/social-metabox.php:139
+msgctxt "Example Verified Facebook Business URL"
+msgid "http://www.facebook.com/YourVerifiedBusinessProfile"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2124
-msgid "Sitemap Output"
+#: inc/views/metaboxes/social-metabox.php:144
+msgid "Default Facebook Integration Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2126
-msgid "Output Sitemap?"
+#: inc/views/metaboxes/social-metabox.php:145
+msgid "Facebook post sharing works mostly through Open Graph. However, you can also link your Business and Personal Facebook pages, among various other options."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2134
-msgid "View sitemap"
+#: inc/views/metaboxes/social-metabox.php:146
+msgid "When these options are filled in, Facebook might link your Facebook profile to be followed and liked when your post or page is shared."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2136
-msgctxt "%s = here"
-msgid "The sitemap can be found %s."
+#: inc/views/metaboxes/social-metabox.php:153
+msgid "Article Author Facebook URL"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2153
-msgid "View robots.txt"
+#: inc/views/metaboxes/social-metabox.php:154
+msgid "Your Facebook Profile"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2156
-msgid "Robots.txt Settings"
+#: inc/views/metaboxes/social-metabox.php:163
+msgid "Article Publisher Facebook URL"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2160
-msgid "The robots.txt file is the first thing Search Engines look for. If you add the sitemap location in the robots.txt file, then Search Engines will look for and index the sitemap."
+#: inc/views/metaboxes/social-metabox.php:164
+msgid "To use this, you need to be a verified business"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2161
-msgid "If you do not add the sitemap location to the robots.txt file, you will need to notify Search Engines manually through the Webmaster Console provided by the Search Engines."
+#: inc/views/metaboxes/social-metabox.php:173
+msgid "Facebook App ID"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2165
-msgid "Add sitemap location in robots.txt"
+#: inc/views/metaboxes/social-metabox.php:174
+msgid "Get Facebook App ID"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2171
-msgid "Add sitemap location in robots?"
+#: inc/views/metaboxes/social-metabox.php:186
+msgctxt "Twitter @username"
+msgid "@your-site-username"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2177
-msgid "Another robots.txt sitemap Location addition has been detected."
+#: inc/views/metaboxes/social-metabox.php:189
+msgctxt "Twitter @username"
+msgid "@your-personal-username"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2182
-msgctxt "%s = here"
-msgid "The robots.txt file can be found %s."
+#: inc/views/metaboxes/social-metabox.php:193
+msgid "Default Twitter Integration Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2211
-msgid "Timestamps Settings"
+#: inc/views/metaboxes/social-metabox.php:194
+msgid "Twitter post sharing works mostly through Open Graph. However, you can also link your Business and Personal Twitter pages, among various other options."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2212
-msgid "The modified time suggests to Search Engines where to look for content changes. It has no impact on the SEO value unless you drastically change pages or posts. It then depends on how well your content is constructed."
+#: inc/views/metaboxes/social-metabox.php:200
+msgid "Twitter Card Type"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2213
-msgid "By default, the sitemap only outputs the modified date if you've enabled them within the Social Metabox. This setting overrides those settings for the Sitemap."
+#: inc/views/metaboxes/social-metabox.php:201
+msgid "What kind of Twitter card would you like to use? It will default to %s if no image is found."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2217
-msgid "Output Modified Date"
+#: inc/views/metaboxes/social-metabox.php:211
+msgid "Example"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2219
-msgid "Add %s to the sitemap?"
+#: inc/views/metaboxes/social-metabox.php:222
+msgid "When the following options are filled in, Twitter might link your Twitter Site or Personal Profile when your post or page is shared."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2229
-msgid "Timestamp Format Settings"
+#: inc/views/metaboxes/social-metabox.php:226
+msgid "Your Website's Twitter Profile"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2231
-msgid "Determines how specific the modification timestamp is."
+#: inc/views/metaboxes/social-metabox.php:227
+#: inc/views/metaboxes/social-metabox.php:237
+msgid "Find your @username"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2238
-msgid "Complete date"
+#: inc/views/metaboxes/social-metabox.php:236
+msgid "Your Personal Twitter Profile"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2244
-msgid "Complete date plus hours, minutes and timezone"
+#: inc/views/metaboxes/social-metabox.php:249
+msgid "Posts"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2263
-msgid "Ping Settings"
+#: inc/views/metaboxes/social-metabox.php:252
+msgid "Post Date Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2264
-msgid "Notifying Search Engines of a sitemap change is helpful to get your content indexed as soon as possible."
+#: inc/views/metaboxes/social-metabox.php:253
+msgid "Some Search Engines output the publishing date and modified date next to the search results. These help Search Engines find new content and could impact the SEO value."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2265
-msgid "By default this will happen at most once an hour."
+#: inc/views/metaboxes/social-metabox.php:254
+msgid "It's recommended on posts, but it's not recommended on pages unless you modify or create new pages frequently."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2269
-msgid "Notify Search Engines"
+#. translators: 1: Option, 2: Post Type
+
+#: inc/views/metaboxes/social-metabox.php:257
+#: inc/views/metaboxes/social-metabox.php:261
+#: inc/views/metaboxes/social-metabox.php:268
+#: inc/views/metaboxes/social-metabox.php:272
+#: inc/views/metaboxes/social-metabox.php:286
+#: inc/views/metaboxes/social-metabox.php:290
+msgid "Add %1$s to %2$s?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2280
-msgid "Notify %s about sitemap changes?"
+#: inc/views/metaboxes/social-metabox.php:283
+msgid "Because you only publish the Home Page once, Search Engines might think your website is outdated. This can be prevented by disabling the following options."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2299
-msgid "Content Feed Settings"
+#: inc/views/metaboxes/social-metabox.php:299
+msgid "Link Relationship Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2300
-msgid "Sometimes, your content can get stolen by robots through the WordPress feeds. This can cause duplicate content issues. To prevent this from happening, it's recommended to convert the feed's content into an excerpt."
+#: inc/views/metaboxes/social-metabox.php:300
+msgid "Some Search Engines look for relations between the content of your pages. If you have multiple pages for a single Post or Page, or have archives indexed, this option will help Search Engines look for the right page to display in the Search Results."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2301
-msgid "Adding a backlink below the feed's content will also let the visitors know where the content came from."
+#: inc/views/metaboxes/social-metabox.php:301
+msgid "It's recommended to turn this option on for better SEO consistency and to prevent duplicate content errors."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2305
-msgid "Change Feed Settings"
+#. translators: %s = <code>rel</code>
+
+#: inc/views/metaboxes/social-metabox.php:306
+msgid "Add %s link tags to Posts and Pages?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2307
-msgid "Convert feed content into excerpts?"
+#. translators: %s = <code>rel</code>
+
+#: inc/views/metaboxes/social-metabox.php:310
+msgid "Add %s link tags to Archives?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2308
-msgid "By default the excerpt will be at most 400 characters long"
+#. translators: %s = <code>rel</code>
+
+#: inc/views/metaboxes/social-metabox.php:314
+msgid "Add %s link tags to the Home Page?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2310
-msgid "Add backlinks below the feed content?"
+#: inc/views/metaboxes/title-metabox.php:17
+msgid "Example Post Title"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2311
-msgid "This link will not be followed by Search Engines"
+#: inc/views/metaboxes/title-metabox.php:33
+msgid "Automated Title Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2323
-msgid "Reading Settings"
+#: inc/views/metaboxes/title-metabox.php:34
+msgid "The page title is prominently shown within the browser tab as well as within the Search Engine results pages."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2326
-msgctxt "%s = Reading Settings"
-msgid "Note: The feed is already converted into an excerpt through the %s."
+#: inc/views/metaboxes/title-metabox.php:37
+msgid "Example Automated Title Output"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2331
-msgid "View feed"
+#: inc/views/metaboxes/title-metabox.php:77
+msgid "Prefixes"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2331
-msgctxt "The feed can be found %s."
-msgid "here"
+#: inc/views/metaboxes/title-metabox.php:109
+msgid "Document Title Separator"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2333
-msgctxt "%s = here"
-msgid "The feed can be found %s."
+#: inc/views/metaboxes/title-metabox.php:116
+msgid "If the title consists of two parts (original title and optional addition), then the separator will go in-between them."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2349
-msgid "Schema.org Output Settings"
+#: inc/views/metaboxes/title-metabox.php:128
+msgid "The Home Page has a specific option."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2352
-msgid "Another Schema.org plugin has been detected."
+#: inc/views/metaboxes/title-metabox.php:161
+msgid "Remove Blogname from Title"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2354
-msgid "The Schema.org markup is a standard way of annotating structured data for Search Engines. This markup is represented within hidden scripts throughout the website."
+#: inc/views/metaboxes/title-metabox.php:165
+msgid "This might decouple your posts and pages from the rest of the website"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2355
-msgid "When your web pages include structured data markup, Search Engines can use that data to index your content better, present it more prominently in Search Results, and use it in several different applications."
+#: inc/views/metaboxes/title-metabox.php:173
+msgid "Remove Blogname from title?"
 msgstr ""
 
-#. translators:
-#. https:developers.google.com/search/docs/data-types/sitelinks-searchbox
-
-#: inc/classes/metaboxes.class.php:2360 inc/classes/metaboxes.class.php:2364
-msgctxt "Product name"
-msgid "Sitelinks Searchbox"
+#: inc/views/metaboxes/title-metabox.php:182
+msgid "Only use this option if you are aware of its SEO effects."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2361
-msgid "When Search users search for your brand name, the following option allows them to search through your website directly from the Search Results."
+#: inc/views/metaboxes/title-metabox.php:208
+msgid "Example Category"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2371
-msgctxt "Product name"
-msgid "Enable Sitelinks Searchbox?"
+#: inc/views/metaboxes/title-metabox.php:226
+msgid "Title prefix options"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2380
-msgid "Site Name"
+#: inc/views/metaboxes/title-metabox.php:227
+msgid "On archives a descriptive prefix may be added to the title."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2381
-msgid "When using breadcrumbs, the first entry is by default your website's address. Using the following option will convert it to the Site Name."
+#: inc/views/metaboxes/title-metabox.php:230
+msgid "Example Automated Archive Title Output"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2384
-msgid "Include your Site Name in Search Results"
+#: inc/views/metaboxes/title-metabox.php:238
+msgid "Remove Archive Title Prefixes"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2388
-msgid "The Site Name is: %s"
+#: inc/views/metaboxes/title-metabox.php:242
+msgid "Remove prefixes from title?"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2392
-msgid "Convert URL to Site Name?"
+#: inc/views/metaboxes/title-metabox.php:246
+msgid "The prefix helps visitors and Search Engines determine what kind of page they're visiting"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2401
-msgid "Breadcrumbs"
+#: inc/views/metaboxes/webmaster-metabox.php:18
+msgid "Webmaster Integration Settings"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2402
-msgid "Breadcrumb trails indicate the page's position in the site hierarchy. Using the following option will show the hierarchy within the Search Results when available."
+#: inc/views/metaboxes/webmaster-metabox.php:19
+msgid "When adding your website to Google, Bing and other Webmaster Tools, you'll be asked to add a code or file to your website for verification purposes. These options will help you easily integrate those codes."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2405
-msgid "About Breadcrumbs"
+#: inc/views/metaboxes/webmaster-metabox.php:20
+msgid "Verifying your website has no SEO value whatsoever. But you might gain added benefits such as search ranking insights to help you improve your website's content."
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2409
-msgid "Multiple trails can be outputted. The longest trail is prioritized."
+#: inc/views/metaboxes/webmaster-metabox.php:27
+msgid "Google Webmaster Verification Code"
 msgstr ""
 
-#: inc/classes/metaboxes.class.php:2413
-msgid "Enable Breadcrumbs?"
+#: inc/views/metaboxes/webmaster-metabox.php:28
+msgid "Get the Google Verification code"
 msgstr ""
 
-#: inc/classes/sitemaps.class.php:277
-msgid "Sitemap is generated for this view"
+#: inc/views/metaboxes/webmaster-metabox.php:37
+msgid "Bing Webmaster Verification Code"
 msgstr ""
 
-#: inc/classes/sitemaps.class.php:279
-msgid "Sitemap is served from cache"
+#: inc/views/metaboxes/webmaster-metabox.php:38
+msgid "Get the Bing Verification Code"
 msgstr ""
 
-#: inc/classes/sitemaps.class.php:399
-msgid "Sitemap is generated on"
+#: inc/views/metaboxes/webmaster-metabox.php:47
+msgid "Yandex Webmaster Verification Code"
 msgstr ""
 
-#: inc/classes/siteoptions.class.php:461
-msgid "here"
+#: inc/views/metaboxes/webmaster-metabox.php:48
+msgid "Get the Yandex Verification Code"
 msgstr ""
 
-#: inc/classes/siteoptions.class.php:463
-msgctxt "%s = here"
-msgid "View the new options %s."
+#: inc/views/metaboxes/webmaster-metabox.php:57
+msgid "Pinterest Analytics Verification Code"
 msgstr ""
 
-#: inc/classes/transients.class.php:259
-msgid "Third parameter must be a known type."
+#: inc/views/metaboxes/webmaster-metabox.php:58
+msgid "Get the Pinterest Verification Code"
 msgstr ""
 
-#: load.class.php:224 load.class.php:234 load.class.php:246
+#: load.class.php:245 load.class.php:255 load.class.php:267
 msgid "Class or Method not found."
 msgstr ""
 
-#: load.class.php:258
+#: load.class.php:279
 msgid "Function needs to be called as a string."
 msgstr ""
-
-#: load.class.php:271
-msgid "%s of The SEO Framework"
-msgstr ""
 #. Plugin Name of the plugin/theme
 msgid "The SEO Framework"
 msgstr ""
Index: lib/css/autodescription-rtl.css
===================================================================
--- lib/css/autodescription-rtl.css	(revision 1475679)
+++ lib/css/autodescription-rtl.css	(working copy)
@@ -1,11 +1,42 @@
 /**
  * Dismissible Notices.
  */
-.seo-notice {
+.tsf-notice {
 	position: relative;
 }
 
-a.autodescription-dismiss {
+.tsf-notice.tsf-show-icon p:before {
+	content: '';
+	margin-left: 12px;
+	background: 0 0;
+	display: inline-block;
+	font: 400 14px/16px dashicons;
+	speak: none;
+	height: 16px;
+	text-align: center;
+	vertical-align: middle;
+	width: 16px;
+	line-height: 14px;
+	-webkit-font-smoothing: antialiased;
+}
+
+.error.tsf-notice.tsf-show-icon p:before {
+	color: #dd3811;
+	content: "\f534";
+}
+
+.notice-warning.tsf-notice.tsf-show-icon p:before {
+	color: #ffa01b;
+	content: "\f227";
+}
+
+.updated.tsf-notice.tsf-show-icon p:before {
+	color: #0cc34b;
+	font-size: 16px;
+	content: "\f147";
+}
+
+a.tsf-dismiss {
 	position: absolute;
 	top: 0;
 	left: 1px;
@@ -18,7 +49,7 @@
 	text-decoration: none;
 }
 
-a.autodescription-dismiss:before {
+a.tsf-dismiss:before {
 	background: 0 0;
 	content: "\f153";
 	display: block;
@@ -31,7 +62,7 @@
 	-moz-osx-font-smoothing: grayscale;
 }
 
-a.autodescription-dismiss:hover {
+a.tsf-dismiss:hover {
 	color: #c00;
 }
 
@@ -42,18 +73,22 @@
 	width: 15%;
 }
 
+/**
+ * WooCommerce fix
+ */
 table.wp-list-table .column-is_in_stock,
 table.wp-list-table .column-sku,
-table.wp-list-table .column-price {
-	 width: 8%;
+table.wp-list-table .column-price,
+table.wp-list-table .column-icl_translations {
+	width: 8%;
 }
 
-.ad-seo a {
+.tsf-seo-bar a {
 	text-decoration: none;
 	font-size: 13px;
 }
 
-#autodescription-title-wrap {
+#tsf-title-wrap {
 	position: relative;
 	display: block;
 	padding: 0;
@@ -61,7 +96,7 @@
 	width: auto;
 }
 
-#autodescription-title-offset {
+#tsf-title-offset {
 	visibility: hidden;
 	height: 0;
 	display: inline-block;
@@ -71,7 +106,7 @@
 	white-space: pre;
 }
 
-#autodescription-title-placeholder {
+#tsf-title-placeholder {
 	position: absolute;
 	color: #777;
 	-webkit-user-select: none;
@@ -88,7 +123,7 @@
 
 /* START Character Counters */
 
-.theseoframework-counter {
+.tsf-counter {
 	font-weight: 600;
 	cursor: pointer;
 	-webkit-user-select: none;
@@ -97,15 +132,15 @@
 	user-select: none;
 }
 
-span.ad-count-bad {
+span.tsf-count-bad {
 	color: #dd3811;
 }
 
-span.ad-count-okay {
+span.tsf-count-okay {
 	color: #ffa700;
 }
 
-span.ad-count-good {
+span.tsf-count-good {
 	color: #0cc34b;
 }
 
@@ -119,28 +154,28 @@
 	text-align: center;
 	vertical-align: baseline;
 }
-span.tsf-counter-one.ad-count-bad {
+span.tsf-counter-one.tsf-count-bad {
 	background-color: #dd3811;
 }
-span.tsf-counter-one.ad-count-okay {
+span.tsf-counter-one.tsf-count-okay {
 	background-color: #ffa700;
 }
-span.tsf-counter-one.ad-count-good {
+span.tsf-counter-one.tsf-count-good {
 	background-color: #0cc34b;
 }
 
 /* END Character Counters */
 
-#ad_seo {
+#tsf-seo-bar-wrap {
 	width: 18%;
 }
 
 /* WooCommerce fix */
-th:last-of-type#ad_seo {
+th:last-of-type#tsf-seo-bar-wrap {
 	width: 160px;
 }
 
-span.ad-seo {
+span.tsf-seo-bar {
 	display: block;
 	width: 95%;
 	max-width: 220px;
@@ -149,11 +184,11 @@
 	text-shadow: 0 0 3px rgba(0,0,0,0.3);
 }
 
-span.ad-seo.ad-100 {
+span.tsf-seo-bar.tsf-100 {
 	width: 100%;
 }
 
-span.ad-bar-wrap {
+span.tsf-seo-bar-inner-wrap {
 	display: table;
 	width: 100%;
 	border-radius: 0;
@@ -165,12 +200,12 @@
 }
 
 
-span.ad-sec-wrap {
+span.tsf-seo-bar-section-wrap {
 	display: table-cell;
 	border-collapse: collapse;
 }
 
-.ad-bar-wrap a {
+.tsf-seo-bar-inner-wrap a {
 	display: table;
 	width: 100%;
 	color: #fff;
@@ -183,60 +218,60 @@
 	box-shadow: 2px 0px 0px -1px rgba(0,0,0,0.1) inset, -2px 0px 0px -1px rgba(0,0,0,0.1) inset;
 }
 
-span.ad-seo.pill,
-span.ad-seo.pill span.ad-bar-wrap {
+span.tsf-seo-bar.pill,
+span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap {
 	border-radius: 30px;
 }
 
-span.ad-seo.pill span.ad-bar-wrap a {
+span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap a {
 	box-shadow: 2px 6px 3px -2px rgba(255,255,255,.2) inset,-2px -6px 3px -2px rgba(41,41,41,.2) inset,0 0 1px rgba(41,41,41,.6);
 }
 
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type,
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type a {
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type,
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type a {
 	border-top-left-radius: 30px;
 	border-bottom-left-radius: 30px;
 }
 
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type,
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type a {
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type,
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type a {
 	border-top-right-radius: 30px;
 	border-bottom-right-radius: 30px;
 }
 
-.ad-100 {
+.tsf-100 {
 	width: 100%;
 }
 
-.ad-60 {
+.tsf-60 {
 	width: 60%;
 }
 
-.ad-50 {
+.tsf-50 {
 	width: 50%;
 }
 
-.ad-40 {
+.tsf-40 {
 	width: 40%;
 }
 
-.ad-33 {
+.tsf-33 {
 	width: 33.333%;
 }
 
-.ad-25 {
+.tsf-25 {
 	width: 25%;
 }
 
-.ad-20 {
+.tsf-20 {
 	width: 20%;
 }
 
-.ad-16 {
+.tsf-16 {
 	width: 16.666%;
 }
 
-.ad-12-5 {
+.tsf-12-5 {
 	width: 12.5%;
 }
 
@@ -244,27 +279,27 @@
 	width: 11.333%;
 }
 
-.ad-10 {
+.tsf-10 {
 	width: 10%;
 }
 
-.ad-seo-bad {
+.tsf-seo-bar-bad {
 	background-color: #dd3811;
 }
 
-.ad-seo-okay {
+.tsf-seo-bar-okay {
 	background-color: #ffa700;
 }
 
-.ad-seo-good {
+.tsf-seo-bar-good {
 	background-color: #0cc34b;
 }
 
-.ad-seo-unknown {
+.tsf-seo-bar-unknown {
 	background-color: #007bd2;
 }
 
-span.ad-seo .explanation-desc {
+span.tsf-seo-bar .tsf-explanation-desc {
 	position: absolute;
 	width: auto;
 	min-width: 90%;
@@ -281,11 +316,11 @@
 	text-align: left;
 }
 
-span.ad-seo .explanation-desc span {
+span.tsf-seo-bar .tsf-explanation-desc span {
 	text-decoration: underline;
 }
 
-span.ad-seo .explanation-desc div {
+span.tsf-seo-bar .tsf-explanation-desc div {
 	width: 0;
 	height: 0;
 	border-left: 12px solid transparent;
@@ -299,7 +334,7 @@
 
 /* Mobile support */
 /* Needs more refining.... e.g. iPhone 6 = good, iPhone 6+ = offscreen */
-.ad_seo.column-ad_seo {
+.tsf-seo-bar-wrap.column-tsf-seo-bar-temp {
 	overflow: initial !important;
 	min-width: 160px;
 }
@@ -312,46 +347,46 @@
 
 /* Site Settings */
 
-.autodescription-metaboxes {
+.tsf-metaboxes {
 	box-sizing: border-box;
 	max-width: 690px;
 	padding-bottom: 20px;
 }
 
-.autodescription-metaboxes .top-wrap {
+.tsf-metaboxes .tsf-top-wrap {
 	width: 100%;
 	display: inline-block;
 	vertical-align: top;
 }
 
-.autodescription-metaboxes .top-wrap > h1,
-.autodescription-metaboxes .top-wrap > h2 {
+.tsf-metaboxes .tsf-top-wrap > h1,
+.tsf-metaboxes .tsf-top-wrap > h2 {
 	float: left;
 }
 
-.autodescription-metaboxes .metabox-holder {
+.tsf-metaboxes .metabox-holder {
 	clear: both;
 }
 
-.autodescription-metaboxes .top-buttons {
+.tsf-metaboxes .tsf-top-buttons {
 	float: left;
 }
 
-.autodescription-metaboxes .bottom-buttons {
+.tsf-metaboxes .tsf-bottom-buttons {
 	text-align: left;
 }
 
-.autodescription-metaboxes .top-buttons input,
-.autodescription-metaboxes .bottom-buttons input {
+.tsf-metaboxes .tsf-top-buttons input,
+.tsf-metaboxes .tsf-bottom-buttons input {
 	margin-left: 10px;
 }
 
-.seo-notice {
+.tsf-notice {
 	clear: both;
 }
 
-.autodescription-metaboxes #title-separator,
-.autodescription-metaboxes #description-separator {
+.tsf-metaboxes #tsf-title-separator,
+.tsf-metaboxes #tsf-description-separator {
 	display: table;
 	width: 100%;
 	border-collapse: collapse;
@@ -358,8 +393,8 @@
 	border-spacing: 0;
 }
 
-.autodescription-metaboxes #title-separator input,
-.autodescription-metaboxes #description-separator input {
+.tsf-metaboxes #tsf-title-separator input,
+.tsf-metaboxes #tsf-description-separator input {
 	display: none;
 	float: left;
 	width: 0;
@@ -367,8 +402,8 @@
 	opacity: 0;
 }
 
-.autodescription-metaboxes #title-separator label,
-.autodescription-metaboxes #description-separator label {
+.tsf-metaboxes #tsf-title-separator label,
+.tsf-metaboxes #tsf-description-separator label {
 	display: inline-block;
 	width: auto;
 	min-width: 28px;
@@ -385,48 +420,48 @@
 	font-size: 16px;
 }
 
-.autodescription-metaboxes #title-separator label.recommended,
-.autodescription-metaboxes #description-separator label.recommended {
+.tsf-metaboxes #tsf-title-separator label.tsf-recommended,
+.tsf-metaboxes #tsf-description-separator label.tsf-recommended {
 	border: 1px solid #0cc34b;
 	box-shadow: -1px -1px 1px #0cc34b inset;
 }
 
-.autodescription-metaboxes #title-separator input:hover + label,
-.autodescription-metaboxes #title-separator label:hover,
-.autodescription-metaboxes #description-separator input:hover + label,
-.autodescription-metaboxes #description-separator label:hover {
+.tsf-metaboxes #tsf-title-separator input:hover + label,
+.tsf-metaboxes #tsf-title-separator label:hover,
+.tsf-metaboxes #tsf-description-separator input:hover + label,
+.tsf-metaboxes #tsf-description-separator label:hover {
 	box-shadow: 1px 1px 1px #aaa inset;
 	background-color: #fff;
 }
 
-.autodescription-metaboxes #title-separator input:checked + label,
-.autodescription-metaboxes #description-separator input:checked + label {
+.tsf-metaboxes #tsf-title-separator input:checked + label,
+.tsf-metaboxes #tsf-description-separator input:checked + label {
 	box-shadow: 1px 1px 1px #333 inset;
 	background-color: #fff;
 }
 
-.autodescription-metaboxes #title-location,
-.autodescription-metaboxes #home-title-location {
+.tsf-metaboxes #tsf-title-location,
+.tsf-metaboxes #tsf-home-title-location {
 	display: block;
 }
 
-.autodescription-metaboxes #title-location label span,
-.autodescription-metaboxes #home-title-location label span,
-.autodescription-metaboxes #twitter-cards label span {
+.tsf-metaboxes #tsf-title-location label span,
+.tsf-metaboxes #tsf-home-title-location label span,
+.tsf-metaboxes #tsf-twitter-cards label span {
 	display: inline-block;
 	min-width: 60px;
 	vertical-align: baseline;
 }
 
-.autodescription-metaboxes #twitter-cards label span {
+.tsf-metaboxes #tsf-twitter-cards label span {
 	min-width: 150px;
 }
 
-.autodescription-metaboxes #home-title-location label span.custom-title-js,
-.autodescription-metaboxes #home-title-location label span.custom-blogname-js,
-.autodescription-metaboxes #home-title-location label span.custom-tagline-js,
-.autodescription-metaboxes #title-location label .autodescription-sep-js,
-.autodescription-metaboxes #home-title-location label .autodescription-sep-js {
+.tsf-metaboxes #tsf-home-title-location label span.custom-title-js,
+.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-blogname-js,
+.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-tagline-js,
+.tsf-metaboxes #tsf-title-location label .autodescription-sep-js,
+.tsf-metaboxes #tsf-home-title-location label .autodescription-sep-js {
 	display: inline;
 	min-width: 0;
 	white-space: pre;
@@ -435,8 +470,8 @@
 /**
  * Start Tabs.
  */
-.autodescription-metaboxes .seoframework-tab-no-js,
-.autodescription-metaboxes .seoframework-nav-tab-wrapper {
+.tsf-metaboxes .tsf-tab-no-js,
+.tsf-metaboxes .tsf-nav-tab-wrapper {
 	position: relative;
 	clear: both;
 	width: 100%;
@@ -447,7 +482,7 @@
 	margin: -4px -12px;
 }
 
-.autodescription-metaboxes .seoframework-nav-tab {
+.tsf-metaboxes .tsf-nav-tab {
 	float: right;
 	border: 1px solid #ccc;
 	margin-right: .5em;
@@ -460,13 +495,13 @@
 	font-weight: 600;
 }
 
-.autodescription-metaboxes .seoframework-dashicons-tabs {
+.tsf-metaboxes .tsf-dashicons-tabs {
 	font-size: initial;
 	display: inline;
 	vertical-align: text-bottom;
 }
 
-.autodescription-metaboxes .seoframework-tabs-radio {
+.tsf-metaboxes .tsf-tabs-radio {
 	display: none;
 	width: 0;
 	height: 0;
@@ -474,26 +509,26 @@
 	left: -9001px;
 }
 
-.autodescription-metaboxes .seoframework-tabs-radio:checked + label,
-.autodescription-metaboxes .seoframework-active-tab {
+.tsf-metaboxes .tsf-tabs-radio:checked + label,
+.tsf-metaboxes .tsf-active-tab {
 	background-color: inherit;
 	border-bottom-color: #fff;
 	color: #000;
 }
 
-.autodescription-metaboxes .seoframework-tabs-content {
+.tsf-metaboxes .tsf-tabs-content {
 	margin: 1.33em auto 0;
 }
 
-.autodescription-metaboxes .seoframework-content-no-js {
+.tsf-metaboxes .seoframework-content-no-js {
 	margin: 1.33em auto;
 }
 
-body.js .autodescription-metaboxes .seoframework-tabs-content {
+body.js .tsf-metaboxes .tsf-tabs-content {
 	display: none;
 }
 
-body.js .autodescription-metaboxes .seoframework-tabs-content.seoframework-active-tab-content {
+body.js .tsf-metaboxes .tsf-tabs-content.tsf-active-tab-content {
 	display: block;
 }
 
@@ -501,74 +536,115 @@
  * End tabs.
  */
 
-.autodescription-metaboxes .seoframework-default-selected {
+.tsf-metaboxes .tsf-default-selected {
 	border-color: #1c9d38;
 }
 
-.autodescription-metaboxes .seoframework-default-selected:checked:before {
+.tsf-metaboxes .tsf-default-selected:checked:before {
 	color: #1c9d38;
 }
 
-.autodescription-metaboxes .seoframework-warning-selected {
+.tsf-metaboxes .tsf-warning-selected {
 	border-color: #dd3811;
 }
 
-.autodescription-metaboxes .seoframework-warning-selected:checked:before {
+.tsf-metaboxes .tsf-warning-selected:checked:before {
 	color: #dd3811;
 }
 
-.theseoframework-fields {
+.tsf-fields {
 	font-size: 13px;
 	line-height: 1.5;
 	margin: 1em 0;
 }
 
-.theseoframework-fields .toblock {
+.tsf-fields .tsf-toblock {
 	display: block;
 	width: 100%;
 	margin-bottom: 4px;
 }
 
-.theseoframework-fields p.description {
+.tsf-fields p.description {
 	margin: 7px 0 5px;
 	color: #666;
 }
 
-.theseoframework-option-spacer {
+.tsf-option-spacer {
 	margin: 1em 0;
 }
 
+.tsf-counter .tsf-ajax {
+	margin-right: 3px;
+}
+
+.tsf-ajax:before {
+	display: inline-block;
+	line-height: 1;
+	font-family: dashicons;
+	font-style: normal;
+	font-weight: 400;
+	font-size: 1.225em;
+	vertical-align: middle;
+	content: "";
+}
+
+.tsf-ajax.tsf-loading:before {
+	content: "\f463";
+	color: #007bd2;
+	-webkit-animation: tsf-spin 1.5s linear infinite;
+	-moz-animation: tsf-spin 1.5s linear infinite;
+	-o-animation: tsf-spin 1.5s linear infinite;
+	animation: tsf-spin 1.5s linear infinite;
+}
+
+.tsf-ajax.tsf-error:before {
+	content: "\f158";
+	color: #dd3811;
+}
+
+.tsf-ajax.tsf-success:before {
+	content: "\f147";
+	color: #0cc34b;
+}
+
+@-webkit-keyframes tsf-spin {
+	0% {
+		-webkit-transform: rotate( 0deg );
+	}
+	100% {
+		-webkit-transform: rotate( 360deg );
+	}
+}
+
+@keyframes tsf-spin {
+	0% {
+		transform: rotate( 0deg );
+	}
+	100% {
+		transform: rotate( 360deg );
+	}
+}
+
 @media screen and (max-width: 782px) {
-	.autodescription-metaboxes p.theseoframework-fields,
-	.theseoframework-inpost-box p.theseoframework-fields {
+	.tsf-metaboxes p.tsf-fields,
+	.tsf-inpost-box p.tsf-fields {
 		line-height: 2.8
 	}
 
-	.autodescription-metaboxes #title-location label span,
-	.autodescription-metaboxes #home-title-location label span {
+	.tsf-metaboxes #tsf-title-location label span,
+	.tsf-metaboxes #tsf-home-title-location label span {
 		min-width: 40px;
 	}
 }
 
 @media screen and (max-width: 642px) {
-	.autodescription-metaboxes span.seoframework-nav-desktop {
+	.tsf-metaboxes span.tsf-nav-desktop {
 		display: none;
 	}
 }
 
-@media screen and (max-width: 600px) {
-	.autodescription-metaboxes h3.nav-tab-wrapper {
-		border-bottom: 1px solid #ccc;
-	}
-
-	.autodescription-metaboxes h3 .nav-tab {
-		margin-right: 7px;
-		margin-bottom: -1px;
-	}
-}
-
 @media screen and (max-width: 510px) {
-	span.ad-seo.ad-100 {
+	span.tsf-seo-bar.tsf-100 {
 		width: inherit;
 	}
 }
@@ -575,15 +651,36 @@
 
 /* Firefix */
 @-moz-document url-prefix() {
-	.autodescription-metaboxes .seoframework-default-selected {
+	.tsf-metaboxes #tsf-title-separator label,
+	.tsf-metaboxes #tsf-description-separator label {
+		margin: 3px 1px;
+	}
+
+	@media only screen and ( min-width: 768px ) {
+		/**
+		 * https://bugzilla.mozilla.org/show_bug.cgi?id=587438
+		 * Only fix when title is second element and there are more than 6 elemnents in the table.
+		 */
+		.widefat tr th.column-title:nth-child(2):nth-last-child(n+6),
+		.widefat tr td.column-title:nth-child(2):nth-last-child(n+6),
+		.widefat tr th.title:nth-child(2):nth-last-child(n+6),
+		.widefat tr td.title:nth-child(2):nth-last-child(n+6) {
+			min-width: 1em;
+			width: 25%;
+			max-width: 100%;
+			white-space: unset;
+		}
+	}
+
+	.tsf-metaboxes .tsf-default-selected {
 		box-shadow: 0 0 2px 0 #1c9d38;
 	}
 
-	.autodescription-metaboxes .seoframework-warning-selected {
+	.tsf-metaboxes .tsf-warning-selected {
 		box-shadow: 0 0 2px 0 #dd3811;
 	}
 
-	.autodescription-metaboxes legend h4 {
+	.tsf-metaboxes legend h4 {
 		margin: 2px 0;
 	}
 }
Index: lib/css/autodescription-rtl.min.css
===================================================================
--- lib/css/autodescription-rtl.min.css	(revision 1475679)
+++ lib/css/autodescription-rtl.min.css	(working copy)
@@ -1 +1 @@
-.autodescription-metaboxes .top-buttons,.autodescription-metaboxes .top-wrap>h1,.autodescription-metaboxes .top-wrap>h2{float:left}.seo-notice{position:relative;clear:both}a.autodescription-dismiss{position:absolute;top:0;left:1px;border:none;margin:0;padding:9px;background:0 0;color:#b4b9be;cursor:pointer;text-decoration:none}a.autodescription-dismiss:before{background:0 0;content:"\f153";display:block;font:400 16px/20px dashicons;speak:none;height:20px;text-align:center;width:20px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a.autodescription-dismiss:hover{color:#c00}table.wp-list-table .column-name{width:15%}table.wp-list-table .column-is_in_stock,table.wp-list-table .column-price,table.wp-list-table .column-sku{width:8%}.ad-seo a{text-decoration:none;font-size:13px}#autodescription-title-wrap{position:relative;display:block;padding:0;height:auto;width:auto}#autodescription-title-offset{visibility:hidden;height:0;display:inline-block;position:absolute;right:0;color:transparent;white-space:pre}#autodescription-title-placeholder{position:absolute;color:#777;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;box-sizing:content-box;top:0;left:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.theseoframework-counter{font-weight:600;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}span.ad-count-bad{color:#dd3811}span.ad-count-okay{color:#ffa700}span.ad-count-good{color:#0cc34b}span.tsf-counter-one{color:#fff;border-radius:58px;padding:0 1px;min-width:29px;display:inline-block;text-align:center;vertical-align:baseline}span.tsf-counter-one.ad-count-bad{background-color:#dd3811}span.tsf-counter-one.ad-count-okay{background-color:#ffa700}span.tsf-counter-one.ad-count-good{background-color:#0cc34b}#ad_seo{width:18%}th:last-of-type#ad_seo{width:160px}span.ad-seo{display:block;width:95%;max-width:220px;border-radius:0;padding:3px;text-shadow:0 0 3px rgba(0,0,0,.3)}.ad-100,.ad-bar-wrap a,span.ad-seo.ad-100{width:100%}span.ad-bar-wrap{display:table;width:100%;border-radius:0;margin:0 auto;border-collapse:separate;border-spacing:0;vertical-align:middle;position:relative}span.ad-sec-wrap{display:table-cell;border-collapse:collapse}.ad-bar-wrap a{display:table;color:#fff;text-align:center;cursor:help;height:100%;min-width:12px;vertical-align:top;line-height:1.625em;box-shadow:2px 0 0 -1px rgba(0,0,0,.1) inset,-2px 0 0 -1px rgba(0,0,0,.1) inset}span.ad-seo.pill,span.ad-seo.pill span.ad-bar-wrap{border-radius:30px}span.ad-seo.pill span.ad-bar-wrap a{box-shadow:2px 6px 3px -2px rgba(255,255,255,.2) inset,-2px -6px 3px -2px rgba(41,41,41,.2) inset,0 0 1px rgba(41,41,41,.6)}.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type,.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type a{border-top-left-radius:30px;border-bottom-left-radius:30px}.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type,.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type a{border-top-right-radius:30px;border-bottom-right-radius:30px}.ad-60{width:60%}.ad-50{width:50%}.ad-40{width:40%}.ad-33{width:33.333%}.ad-25{width:25%}.ad-20{width:20%}.ad-16{width:16.666%}.ad-12-5{width:12.5%}.ad-11{width:11.333%}.ad-10{width:10%}.ad-seo-bad{background-color:#dd3811}.ad-seo-okay{background-color:#ffa700}.ad-seo-good{background-color:#0cc34b}.ad-seo-unknown{background-color:#007bd2}span.ad-seo .explanation-desc{position:absolute;width:auto;min-width:90%;max-width:220px;font-weight:600;background:#007bd2;padding:8px 12px;color:#fdfdfd;border-radius:0;z-index:900142;box-shadow:0 0 2px rgba(0,0,0,.6);left:0;right:0;text-align:left}span.ad-seo .explanation-desc span{text-decoration:underline}span.ad-seo .explanation-desc div{width:0;height:0;border-left:12px solid transparent;border-right:12px solid transparent;border-top:12px solid #007bd2;position:absolute;bottom:-8px;z-index:9999999;left:0}.ad_seo.column-ad_seo{overflow:initial!important;min-width:160px}#col-container,#col-right{overflow:initial}.autodescription-metaboxes{box-sizing:border-box;max-width:690px;padding-bottom:20px}.autodescription-metaboxes .top-wrap{width:100%;display:inline-block;vertical-align:top}.autodescription-metaboxes .metabox-holder{clear:both}.autodescription-metaboxes .bottom-buttons{text-align:left}.autodescription-metaboxes .bottom-buttons input,.autodescription-metaboxes .top-buttons input{margin-left:10px}.autodescription-metaboxes #description-separator,.autodescription-metaboxes #title-separator{display:table;width:100%;border-collapse:collapse;border-spacing:0}.autodescription-metaboxes #description-separator input,.autodescription-metaboxes #title-separator input{display:none;float:left;width:0;min-width:0;opacity:0}.autodescription-metaboxes #description-separator label,.autodescription-metaboxes #title-separator label{display:inline-block;width:auto;min-width:28px;min-height:28px;margin:3px;-moz-margin-end:1.5px;-moz-margin-start:1.5px;padding:0 4px;border:1px solid #ccc;line-height:28px;text-align:center;cursor:pointer;box-shadow:-1px -1px 1px #aaa inset;font-size:16px}.autodescription-metaboxes #description-separator label.recommended,.autodescription-metaboxes #title-separator label.recommended{border:1px solid #0cc34b;box-shadow:-1px -1px 1px #0cc34b inset}.autodescription-metaboxes #description-separator input:hover+label,.autodescription-metaboxes #description-separator label:hover,.autodescription-metaboxes #title-separator input:hover+label,.autodescription-metaboxes #title-separator label:hover{box-shadow:1px 1px 1px #aaa inset;background-color:#fff}.autodescription-metaboxes #description-separator input:checked+label,.autodescription-metaboxes #title-separator input:checked+label{box-shadow:1px 1px 1px #333 inset;background-color:#fff}.autodescription-metaboxes #home-title-location,.autodescription-metaboxes #title-location{display:block}.autodescription-metaboxes #home-title-location label span,.autodescription-metaboxes #title-location label span,.autodescription-metaboxes #twitter-cards label span{display:inline-block;min-width:60px;vertical-align:baseline}.autodescription-metaboxes #twitter-cards label span{min-width:150px}.autodescription-metaboxes #home-title-location label .autodescription-sep-js,.autodescription-metaboxes #home-title-location label span.custom-blogname-js,.autodescription-metaboxes #home-title-location label span.custom-tagline-js,.autodescription-metaboxes #home-title-location label span.custom-title-js,.autodescription-metaboxes #title-location label .autodescription-sep-js{display:inline;min-width:0;white-space:pre}.autodescription-metaboxes .seoframework-nav-tab-wrapper,.autodescription-metaboxes .seoframework-tab-no-js{position:relative;clear:both;width:100%;display:inline-block;border-bottom:1px solid #ccc;line-height:inherit;padding:8px 12px 0;margin:-4px -12px}.autodescription-metaboxes .seoframework-nav-tab{float:right;border:1px solid #ccc;margin-right:.5em;margin-bottom:-1px;padding:5px 14px;font-size:12px;line-height:16px;background:#f1f1f1;color:#555;font-weight:600}.autodescription-metaboxes .seoframework-dashicons-tabs{font-size:initial;display:inline;vertical-align:text-bottom}.autodescription-metaboxes .seoframework-tabs-radio{display:none;width:0;height:0;position:absolute;left:-9001px}.autodescription-metaboxes .seoframework-active-tab,.autodescription-metaboxes .seoframework-tabs-radio:checked+label{background-color:inherit;border-bottom-color:#fff;color:#000}.autodescription-metaboxes .seoframework-tabs-content{margin:1.33em auto 0}.autodescription-metaboxes .seoframework-content-no-js{margin:1.33em auto}body.js .autodescription-metaboxes .seoframework-tabs-content{display:none}body.js .autodescription-metaboxes .seoframework-tabs-content.seoframework-active-tab-content{display:block}.autodescription-metaboxes .seoframework-default-selected{border-color:#1c9d38}.autodescription-metaboxes .seoframework-default-selected:checked:before{color:#1c9d38}.autodescription-metaboxes .seoframework-warning-selected{border-color:#dd3811}.autodescription-metaboxes .seoframework-warning-selected:checked:before{color:#dd3811}.theseoframework-fields{font-size:13px;line-height:1.5;margin:1em 0}.theseoframework-fields .toblock{display:block;width:100%;margin-bottom:4px}.theseoframework-fields p.description{margin:7px 0 5px;color:#666}.theseoframework-option-spacer{margin:1em 0}@media screen and (max-width:782px){.autodescription-metaboxes p.theseoframework-fields,.theseoframework-inpost-box p.theseoframework-fields{line-height:2.8}.autodescription-metaboxes #home-title-location label span,.autodescription-metaboxes #title-location label span{min-width:40px}}@media screen and (max-width:642px){.autodescription-metaboxes span.seoframework-nav-desktop{display:none}}@media screen and (max-width:600px){.autodescription-metaboxes h3.nav-tab-wrapper{border-bottom:1px solid #ccc}.autodescription-metaboxes h3 .nav-tab{margin-right:7px;margin-bottom:-1px}}@media screen and (max-width:510px){span.ad-seo.ad-100{width:inherit}}@-moz-document url-prefix(){.autodescription-metaboxes .seoframework-default-selected{box-shadow:0 0 2px 0 #1c9d38}.autodescription-metaboxes .seoframework-warning-selected{box-shadow:0 0 2px 0 #dd3811}.autodescription-metaboxes legend h4{margin:2px 0}}
+.tsf-metaboxes .tsf-top-buttons,.tsf-metaboxes .tsf-top-wrap>h1,.tsf-metaboxes .tsf-top-wrap>h2{float:left}.tsf-notice{position:relative;clear:both}.tsf-notice.tsf-show-icon p:before{content:'';margin-left:12px;background:0 0;display:inline-block;font:400 14px/16px dashicons;speak:none;height:16px;text-align:center;vertical-align:middle;width:16px;line-height:14px;-webkit-font-smoothing:antialiased}.error.tsf-notice.tsf-show-icon p:before{color:#dd3811;content:"\f534"}.notice-warning.tsf-notice.tsf-show-icon p:before{color:#ffa01b;content:"\f227"}.updated.tsf-notice.tsf-show-icon p:before{color:#0cc34b;font-size:16px;content:"\f147"}a.tsf-dismiss{position:absolute;top:0;left:1px;border:none;margin:0;padding:9px;background:0 0;color:#b4b9be;cursor:pointer;text-decoration:none}a.tsf-dismiss:before{background:0 0;content:"\f153";display:block;font:400 16px/20px dashicons;speak:none;height:20px;text-align:center;width:20px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a.tsf-dismiss:hover{color:#c00}table.wp-list-table .column-name{width:15%}table.wp-list-table .column-icl_translations,table.wp-list-table .column-is_in_stock,table.wp-list-table .column-price,table.wp-list-table .column-sku{width:8%}.tsf-seo-bar a{text-decoration:none;font-size:13px}#tsf-title-wrap{position:relative;display:block;padding:0;height:auto;width:auto}#tsf-title-offset{visibility:hidden;height:0;display:inline-block;position:absolute;right:0;color:transparent;white-space:pre}#tsf-title-placeholder{position:absolute;color:#777;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;box-sizing:content-box;top:0;left:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tsf-counter{font-weight:600;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}span.tsf-count-bad{color:#dd3811}span.tsf-count-okay{color:#ffa700}span.tsf-count-good{color:#0cc34b}span.tsf-counter-one{color:#fff;border-radius:58px;padding:0 1px;min-width:29px;display:inline-block;text-align:center;vertical-align:baseline}span.tsf-counter-one.tsf-count-bad{background-color:#dd3811}span.tsf-counter-one.tsf-count-okay{background-color:#ffa700}span.tsf-counter-one.tsf-count-good{background-color:#0cc34b}#tsf-seo-bar-wrap{width:18%}th:last-of-type#tsf-seo-bar-wrap{width:160px}span.tsf-seo-bar{display:block;width:95%;max-width:220px;border-radius:0;padding:3px;text-shadow:0 0 3px rgba(0,0,0,.3)}span.tsf-seo-bar.tsf-100{width:100%}span.tsf-seo-bar-inner-wrap{display:table;width:100%;border-radius:0;margin:0 auto;border-collapse:separate;border-spacing:0;vertical-align:middle;position:relative}span.tsf-seo-bar-section-wrap{display:table-cell;border-collapse:collapse}.tsf-seo-bar-inner-wrap a{display:table;width:100%;color:#fff;text-align:center;cursor:help;height:100%;min-width:12px;vertical-align:top;line-height:1.625em;box-shadow:2px 0 0 -1px rgba(0,0,0,.1) inset,-2px 0 0 -1px rgba(0,0,0,.1) inset}span.tsf-seo-bar.pill,span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap{border-radius:30px}span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap a{box-shadow:2px 6px 3px -2px rgba(255,255,255,.2) inset,-2px -6px 3px -2px rgba(41,41,41,.2) inset,0 0 1px rgba(41,41,41,.6)}.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type,.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type a{border-top-left-radius:30px;border-bottom-left-radius:30px}.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type,.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type a{border-top-right-radius:30px;border-bottom-right-radius:30px}.tsf-100{width:100%}.tsf-60{width:60%}.tsf-50{width:50%}.tsf-40{width:40%}.tsf-33{width:33.333%}.tsf-25{width:25%}.tsf-20{width:20%}.tsf-16{width:16.666%}.tsf-12-5{width:12.5%}.ad-11{width:11.333%}.tsf-10{width:10%}.tsf-seo-bar-bad{background-color:#dd3811}.tsf-seo-bar-okay{background-color:#ffa700}.tsf-seo-bar-good{background-color:#0cc34b}.tsf-seo-bar-unknown{background-color:#007bd2}span.tsf-seo-bar .tsf-explanation-desc{position:absolute;width:auto;min-width:90%;max-width:220px;font-weight:600;background:#007bd2;padding:8px 12px;color:#fdfdfd;border-radius:0;z-index:900142;box-shadow:0 0 2px rgba(0,0,0,.6);left:0;right:0;text-align:left}span.tsf-seo-bar .tsf-explanation-desc span{text-decoration:underline}span.tsf-seo-bar .tsf-explanation-desc div{width:0;height:0;border-left:12px solid transparent;border-right:12px solid transparent;border-top:12px solid #007bd2;position:absolute;bottom:-8px;z-index:9999999;left:0}.tsf-seo-bar-wrap.column-tsf-seo-bar-temp{overflow:initial!important;min-width:160px}#col-container,#col-right{overflow:initial}.tsf-metaboxes{box-sizing:border-box;max-width:690px;padding-bottom:20px}.tsf-metaboxes .tsf-top-wrap{width:100%;display:inline-block;vertical-align:top}.tsf-metaboxes .metabox-holder{clear:both}.tsf-metaboxes .tsf-bottom-buttons{text-align:left}.tsf-metaboxes .tsf-bottom-buttons input,.tsf-metaboxes .tsf-top-buttons input{margin-left:10px}.tsf-metaboxes #tsf-description-separator,.tsf-metaboxes #tsf-title-separator{display:table;width:100%;border-collapse:collapse;border-spacing:0}.tsf-metaboxes #tsf-description-separator input,.tsf-metaboxes #tsf-title-separator input{display:none;float:left;width:0;min-width:0;opacity:0}.tsf-metaboxes #tsf-description-separator label,.tsf-metaboxes #tsf-title-separator label{display:inline-block;width:auto;min-width:28px;min-height:28px;margin:3px;-moz-margin-end:1.5px;-moz-margin-start:1.5px;padding:0 4px;border:1px solid #ccc;line-height:28px;text-align:center;cursor:pointer;box-shadow:-1px -1px 1px #aaa inset;font-size:16px}.tsf-metaboxes #tsf-description-separator label.tsf-recommended,.tsf-metaboxes #tsf-title-separator label.tsf-recommended{border:1px solid #0cc34b;box-shadow:-1px -1px 1px #0cc34b inset}.tsf-metaboxes #tsf-description-separator input:hover+label,.tsf-metaboxes #tsf-description-separator label:hover,.tsf-metaboxes #tsf-title-separator input:hover+label,.tsf-metaboxes #tsf-title-separator label:hover{box-shadow:1px 1px 1px #aaa inset;background-color:#fff}.tsf-metaboxes #tsf-description-separator input:checked+label,.tsf-metaboxes #tsf-title-separator input:checked+label{box-shadow:1px 1px 1px #333 inset;background-color:#fff}.tsf-metaboxes #tsf-home-title-location,.tsf-metaboxes #tsf-title-location{display:block}.tsf-metaboxes #tsf-home-title-location label span,.tsf-metaboxes #tsf-title-location label span,.tsf-metaboxes #tsf-twitter-cards label span{display:inline-block;min-width:60px;vertical-align:baseline}.tsf-metaboxes #tsf-twitter-cards label span{min-width:150px}.tsf-metaboxes #tsf-home-title-location label .autodescription-sep-js,.tsf-metaboxes #tsf-home-title-location label span.custom-title-js,.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-blogname-js,.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-tagline-js,.tsf-metaboxes #tsf-title-location label .autodescription-sep-js{display:inline;min-width:0;white-space:pre}.tsf-metaboxes .tsf-nav-tab-wrapper,.tsf-metaboxes .tsf-tab-no-js{position:relative;clear:both;width:100%;display:inline-block;border-bottom:1px solid #ccc;line-height:inherit;padding:8px 12px 0;margin:-4px -12px}.tsf-metaboxes .tsf-nav-tab{float:right;border:1px solid #ccc;margin-right:.5em;margin-bottom:-1px;padding:5px 14px;font-size:12px;line-height:16px;background:#f1f1f1;color:#555;font-weight:600}.tsf-metaboxes .tsf-dashicons-tabs{font-size:initial;display:inline;vertical-align:text-bottom}.tsf-metaboxes .tsf-tabs-radio{display:none;width:0;height:0;position:absolute;left:-9001px}.tsf-metaboxes .tsf-active-tab,.tsf-metaboxes .tsf-tabs-radio:checked+label{background-color:inherit;border-bottom-color:#fff;color:#000}.tsf-metaboxes .tsf-tabs-content{margin:1.33em auto 0}.tsf-metaboxes .seoframework-content-no-js{margin:1.33em auto}body.js .tsf-metaboxes .tsf-tabs-content{display:none}body.js .tsf-metaboxes .tsf-tabs-content.tsf-active-tab-content{display:block}.tsf-metaboxes .tsf-default-selected{border-color:#1c9d38}.tsf-metaboxes .tsf-default-selected:checked:before{color:#1c9d38}.tsf-metaboxes .tsf-warning-selected{border-color:#dd3811}.tsf-metaboxes .tsf-warning-selected:checked:before{color:#dd3811}.tsf-fields{font-size:13px;line-height:1.5;margin:1em 0}.tsf-fields .tsf-toblock{display:block;width:100%;margin-bottom:4px}.tsf-fields p.description{margin:7px 0 5px;color:#666}.tsf-option-spacer{margin:1em 0}.tsf-counter .tsf-ajax{margin-right:3px}.tsf-ajax:before{display:inline-block;line-height:1;font-family:dashicons;font-style:normal;font-weight:400;font-size:1.225em;vertical-align:middle;content:""}.tsf-ajax.tsf-loading:before{content:"\f463";color:#007bd2;-webkit-animation:tsf-spin 1.5s linear infinite;-moz-animation:tsf-spin 1.5s linear infinite;-o-animation:tsf-spin 1.5s linear infinite;animation:tsf-spin 1.5s linear infinite}.tsf-ajax.tsf-error:before{content:"\f158";color:#dd3811}.tsf-ajax.tsf-success:before{content:"\f147";color:#0cc34b}@-webkit-keyframes tsf-spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes tsf-spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@media screen and (max-width:782px){.tsf-inpost-box p.tsf-fields,.tsf-metaboxes p.tsf-fields{line-height:2.8}.tsf-metaboxes #tsf-home-title-location label span,.tsf-metaboxes #tsf-title-location label span{min-width:40px}}@media screen and (max-width:642px){.tsf-metaboxes span.tsf-nav-desktop{display:none}}@media screen and (max-width:510px){span.tsf-seo-bar.tsf-100{width:inherit}}@-moz-document url-prefix(){.tsf-metaboxes #tsf-description-separator label,.tsf-metaboxes #tsf-title-separator label{margin:3px 1px}@media only screen and (min-width:768px){.widefat tr td.column-title:nth-child(2):nth-last-child(n+6),.widefat tr td.title:nth-child(2):nth-last-child(n+6),.widefat tr th.column-title:nth-child(2):nth-last-child(n+6),.widefat tr th.title:nth-child(2):nth-last-child(n+6){min-width:1em;width:25%;max-width:100%;white-space:unset}}.tsf-metaboxes .tsf-default-selected{box-shadow:0 0 2px 0 #1c9d38}.tsf-metaboxes .tsf-warning-selected{box-shadow:0 0 2px 0 #dd3811}.tsf-metaboxes legend h4{margin:2px 0}}
Index: lib/css/autodescription.css
===================================================================
--- lib/css/autodescription.css	(revision 1475679)
+++ lib/css/autodescription.css	(working copy)
@@ -6,11 +6,42 @@
 /**
  * Dismissible Notices.
  */
-.seo-notice {
+.tsf-notice {
 	position: relative;
 }
 
-a.autodescription-dismiss {
+.tsf-notice.tsf-show-icon p:before {
+	content: '';
+	margin-right: 12px;
+	background: 0 0;
+	display: inline-block;
+	font: 400 14px/16px dashicons;
+	speak: none;
+	height: 16px;
+	text-align: center;
+	vertical-align: middle;
+	width: 16px;
+	line-height: 14px;
+	-webkit-font-smoothing: antialiased;
+}
+
+.error.tsf-notice.tsf-show-icon p:before {
+	color: #dd3811;
+	content: "\f534";
+}
+
+.notice-warning.tsf-notice.tsf-show-icon p:before {
+	color: #ffa01b;
+	content: "\f227";
+}
+
+.updated.tsf-notice.tsf-show-icon p:before {
+	color: #0cc34b;
+	font-size: 16px;
+	content: "\f147";
+}
+
+a.tsf-dismiss {
 	position: absolute;
 	top: 0;
 	right: 1px;
@@ -23,7 +54,7 @@
 	text-decoration: none;
 }
 
-a.autodescription-dismiss:before {
+a.tsf-dismiss:before {
 	background: 0 0;
 	content: "\f153";
 	display: block;
@@ -36,29 +67,33 @@
 	-moz-osx-font-smoothing: grayscale;
 }
 
-a.autodescription-dismiss:hover {
+a.tsf-dismiss:hover {
 	color: #c00;
 }
 
 /**
-* WooCommerce fix
+* WooCommerce fix @TODO make this load only when admin bar is showing.
 */
 table.wp-list-table .column-name {
 	width: 15%;
 }
 
+/**
+ * WooCommerce fix
+ */
 table.wp-list-table .column-is_in_stock,
 table.wp-list-table .column-sku,
-table.wp-list-table .column-price {
+table.wp-list-table .column-price,
+table.wp-list-table .column-icl_translations {
 	width: 8%;
 }
 
-.ad-seo a {
+.tsf-seo-bar a {
 	text-decoration: none;
 	font-size: 13px;
 }
 
-#autodescription-title-wrap {
+#tsf-title-wrap {
 	position: relative;
 	display: block;
 	padding: 0;
@@ -66,7 +101,7 @@
 	width: auto;
 }
 
-#autodescription-title-offset {
+#tsf-title-offset {
 	visibility: hidden;
 	height: 0;
 	display: inline-block;
@@ -76,7 +111,7 @@
 	white-space: pre;
 }
 
-#autodescription-title-placeholder {
+#tsf-title-placeholder {
 	position: absolute;
 	color: #777;
 	-webkit-user-select: none;
@@ -93,7 +128,7 @@
 
 /* START Character Counters */
 
-.theseoframework-counter {
+.tsf-counter {
 	font-weight: 600;
 	cursor: pointer;
 	-webkit-user-select: none;
@@ -102,15 +137,15 @@
 	user-select: none;
 }
 
-span.ad-count-bad {
+span.tsf-count-bad {
 	color: #dd3811;
 }
 
-span.ad-count-okay {
+span.tsf-count-okay {
 	color: #ffa700;
 }
 
-span.ad-count-good {
+span.tsf-count-good {
 	color: #0cc34b;
 }
 
@@ -124,28 +159,28 @@
 	text-align: center;
 	vertical-align: baseline;
 }
-span.tsf-counter-one.ad-count-bad {
+span.tsf-counter-one.tsf-count-bad {
 	background-color: #dd3811;
 }
-span.tsf-counter-one.ad-count-okay {
+span.tsf-counter-one.tsf-count-okay {
 	background-color: #ffa700;
 }
-span.tsf-counter-one.ad-count-good {
+span.tsf-counter-one.tsf-count-good {
 	background-color: #0cc34b;
 }
 
 /* END Character Counters */
 
-#ad_seo {
+#tsf-seo-bar-wrap {
 	width: 18%;
 }
 
 /* WooCommerce fix */
-th:last-of-type#ad_seo {
+th:last-of-type#tsf-seo-bar-wrap {
 	width: 160px;
 }
 
-span.ad-seo {
+span.tsf-seo-bar {
 	display: block;
 	width: 95%;
 	max-width: 220px;
@@ -154,11 +189,11 @@
 	text-shadow: 0 0 3px rgba(0,0,0,0.3);
 }
 
-span.ad-seo.ad-100 {
+span.tsf-seo-bar.tsf-100 {
 	width: 100%;
 }
 
-span.ad-bar-wrap {
+span.tsf-seo-bar-inner-wrap {
 	display: table;
 	width: 100%;
 	border-radius: 0;
@@ -169,12 +204,12 @@
 	position: relative;
 }
 
-span.ad-sec-wrap {
+span.tsf-seo-bar-section-wrap {
 	display: table-cell;
 	border-collapse: collapse;
 }
 
-.ad-bar-wrap a {
+.tsf-seo-bar-inner-wrap a {
 	display: table;
 	width: 100%;
 	color: #fff;
@@ -187,60 +222,60 @@
 	box-shadow: 2px 0px 0px -1px rgba(0,0,0,0.1) inset, -2px 0px 0px -1px rgba(0,0,0,0.1) inset;
 }
 
-span.ad-seo.pill,
-span.ad-seo.pill span.ad-bar-wrap {
+span.tsf-seo-bar.pill,
+span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap {
 	border-radius: 30px;
 }
 
-span.ad-seo.pill span.ad-bar-wrap a {
+span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap a {
 	box-shadow: 2px 6px 3px -2px rgba(255,255,255,.2) inset,-2px -6px 3px -2px rgba(41,41,41,.2) inset,0 0 1px rgba(41,41,41,.6);
 }
 
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type,
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type a {
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type,
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type a {
 	border-top-left-radius: 30px;
 	border-bottom-left-radius: 30px;
 }
 
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type,
-.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type a {
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type,
+.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type a {
 	border-top-right-radius: 30px;
 	border-bottom-right-radius: 30px;
 }
 
-.ad-100 {
+.tsf-100 {
 	width: 100%;
 }
 
-.ad-60 {
+.tsf-60 {
 	width: 60%;
 }
 
-.ad-50 {
+.tsf-50 {
 	width: 50%;
 }
 
-.ad-40 {
+.tsf-40 {
 	width: 40%;
 }
 
-.ad-33 {
+.tsf-33 {
 	width: 33.333%;
 }
 
-.ad-25 {
+.tsf-25 {
 	width: 25%;
 }
 
-.ad-20 {
+.tsf-20 {
 	width: 20%;
 }
 
-.ad-16 {
+.tsf-16 {
 	width: 16.666%;
 }
 
-.ad-12-5 {
+.tsf-12-5 {
 	width: 12.5%;
 }
 
@@ -248,27 +283,27 @@
 	width: 11.333%;
 }
 
-.ad-10 {
+.tsf-10 {
 	width: 10%;
 }
 
-.ad-seo-bad {
+.tsf-seo-bar-bad {
 	background-color: #dd3811;
 }
 
-.ad-seo-okay {
+.tsf-seo-bar-okay {
 	background-color: #ffa700;
 }
 
-.ad-seo-good {
+.tsf-seo-bar-good {
 	background-color: #0cc34b;
 }
 
-.ad-seo-unknown {
+.tsf-seo-bar-unknown {
 	background-color: #007bd2;
 }
 
-span.ad-seo .explanation-desc {
+span.tsf-seo-bar .tsf-explanation-desc {
 	position: absolute;
 	width: auto;
 	min-width: 90%;
@@ -285,11 +320,11 @@
 	text-align: left;
 }
 
-span.ad-seo .explanation-desc span {
+span.tsf-seo-bar .tsf-explanation-desc span {
 	text-decoration: underline;
 }
 
-span.ad-seo .explanation-desc div {
+span.tsf-seo-bar .tsf-explanation-desc div {
 	width: 0;
 	height: 0;
 	border-left: 12px solid transparent;
@@ -303,7 +338,7 @@
 
 /* Mobile support */
 /* Needs more refining.... e.g. iPhone 6 = good, iPhone 6+ = offscreen */
-.ad_seo.column-ad_seo {
+.tsf-seo-bar-wrap.column-tsf-seo-bar-temp {
 	overflow: initial !important;
 	min-width: 160px;
 }
@@ -316,46 +351,46 @@
 
 /* Site Settings */
 
-.autodescription-metaboxes {
+.tsf-metaboxes {
 	box-sizing: border-box;
 	max-width: 690px;
 	padding-bottom: 20px;
 }
 
-.autodescription-metaboxes .top-wrap {
+.tsf-metaboxes .tsf-top-wrap {
 	width: 100%;
 	display: inline-block;
 	vertical-align: top;
 }
 
-.autodescription-metaboxes .top-wrap > h1,
-.autodescription-metaboxes .top-wrap > h2 {
+.tsf-metaboxes .tsf-top-wrap > h1,
+.tsf-metaboxes .tsf-top-wrap > h2 {
 	float: left;
 }
 
-.autodescription-metaboxes .metabox-holder {
+.tsf-metaboxes .metabox-holder {
 	clear: both;
 }
 
-.autodescription-metaboxes .top-buttons {
+.tsf-metaboxes .tsf-top-buttons {
 	float: right;
 }
 
-.autodescription-metaboxes .bottom-buttons {
+.tsf-metaboxes .tsf-bottom-buttons {
 	text-align: right;
 }
 
-.autodescription-metaboxes .top-buttons input,
-.autodescription-metaboxes .bottom-buttons input {
+.tsf-metaboxes .tsf-top-buttons input,
+.tsf-metaboxes .tsf-bottom-buttons input {
 	margin-left: 10px;
 }
 
-.seo-notice {
+.tsf-notice {
 	clear: both;
 }
 
-.autodescription-metaboxes #title-separator,
-.autodescription-metaboxes #description-separator {
+.tsf-metaboxes #tsf-title-separator,
+.tsf-metaboxes #tsf-description-separator {
 	display: table;
 	width: 100%;
 	border-collapse: collapse;
@@ -362,8 +397,8 @@
 	border-spacing: 0;
 }
 
-.autodescription-metaboxes #title-separator input,
-.autodescription-metaboxes #description-separator input {
+.tsf-metaboxes #tsf-title-separator input,
+.tsf-metaboxes #tsf-description-separator input {
 	display: none;
 	float: left;
 	width: 0;
@@ -371,8 +406,8 @@
 	opacity: 0;
 }
 
-.autodescription-metaboxes #title-separator label,
-.autodescription-metaboxes #description-separator label {
+.tsf-metaboxes #tsf-title-separator label,
+.tsf-metaboxes #tsf-description-separator label {
 	display: inline-block;
 	width: auto;
 	min-width: 28px;
@@ -389,48 +424,48 @@
 	font-size: 16px;
 }
 
-.autodescription-metaboxes #title-separator label.recommended,
-.autodescription-metaboxes #description-separator label.recommended {
+.tsf-metaboxes #tsf-title-separator label.tsf-recommended,
+.tsf-metaboxes #tsf-description-separator label.tsf-recommended {
 	border: 1px solid #0cc34b;
 	box-shadow: -1px -1px 1px #0cc34b inset;
 }
 
-.autodescription-metaboxes #title-separator input:hover + label,
-.autodescription-metaboxes #title-separator label:hover,
-.autodescription-metaboxes #description-separator input:hover + label,
-.autodescription-metaboxes #description-separator label:hover {
+.tsf-metaboxes #tsf-title-separator input:hover + label,
+.tsf-metaboxes #tsf-title-separator label:hover,
+.tsf-metaboxes #tsf-description-separator input:hover + label,
+.tsf-metaboxes #tsf-description-separator label:hover {
 	box-shadow: 1px 1px 1px #aaa inset;
 	background-color: #fff;
 }
 
-.autodescription-metaboxes #title-separator input:checked + label,
-.autodescription-metaboxes #description-separator input:checked + label {
+.tsf-metaboxes #tsf-title-separator input:checked + label,
+.tsf-metaboxes #tsf-description-separator input:checked + label {
 	box-shadow: 1px 1px 1px #333 inset;
 	background-color: #fff;
 }
 
-.autodescription-metaboxes #title-location,
-.autodescription-metaboxes #home-title-location {
+.tsf-metaboxes #tsf-title-location,
+.tsf-metaboxes #tsf-home-title-location {
 	display: block;
 }
 
-.autodescription-metaboxes #title-location label span,
-.autodescription-metaboxes #home-title-location label span,
-.autodescription-metaboxes #twitter-cards label span {
+.tsf-metaboxes #tsf-title-location label span,
+.tsf-metaboxes #tsf-home-title-location label span,
+.tsf-metaboxes #tsf-twitter-cards label span {
 	display: inline-block;
 	min-width: 60px;
 	vertical-align: baseline;
 }
 
-.autodescription-metaboxes #twitter-cards label span {
+.tsf-metaboxes #tsf-twitter-cards label span {
 	min-width: 150px;
 }
 
-.autodescription-metaboxes #home-title-location label span.custom-title-js,
-.autodescription-metaboxes #home-title-location label span.custom-blogname-js,
-.autodescription-metaboxes #home-title-location label span.custom-tagline-js,
-.autodescription-metaboxes #title-location label .autodescription-sep-js,
-.autodescription-metaboxes #home-title-location label .autodescription-sep-js {
+.tsf-metaboxes #tsf-home-title-location label span.custom-title-js,
+.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-blogname-js,
+.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-tagline-js,
+.tsf-metaboxes #tsf-title-location label .autodescription-sep-js,
+.tsf-metaboxes #tsf-home-title-location label .autodescription-sep-js {
 	display: inline;
 	min-width: 0;
 	white-space: pre;
@@ -439,8 +474,8 @@
 /**
  * Start Tabs.
  */
-.autodescription-metaboxes .seoframework-tab-no-js,
-.autodescription-metaboxes .seoframework-nav-tab-wrapper {
+.tsf-metaboxes .tsf-tab-no-js,
+.tsf-metaboxes .tsf-nav-tab-wrapper {
 	position: relative;
 	clear: both;
 	width: 100%;
@@ -451,7 +486,7 @@
 	margin: -4px -12px;
 }
 
-.autodescription-metaboxes .seoframework-nav-tab {
+.tsf-metaboxes .tsf-nav-tab {
 	float: left;
 	border: 1px solid #ccc;
 	margin-left: .5em;
@@ -464,13 +499,13 @@
 	font-weight: 600;
 }
 
-.autodescription-metaboxes .seoframework-dashicons-tabs {
+.tsf-metaboxes .tsf-dashicons-tabs {
 	font-size: initial;
 	display: inline;
 	vertical-align: text-bottom;
 }
 
-.autodescription-metaboxes .seoframework-tabs-radio {
+.tsf-metaboxes .tsf-tabs-radio {
 	display: none;
 	width: 0;
 	height: 0;
@@ -478,26 +513,26 @@
 	left: -9001px;
 }
 
-.autodescription-metaboxes .seoframework-tabs-radio:checked + label,
-.autodescription-metaboxes .seoframework-active-tab {
+.tsf-metaboxes .tsf-tabs-radio:checked + label,
+.tsf-metaboxes .tsf-active-tab {
 	background-color: inherit;
 	border-bottom-color: #fff;
 	color: #000;
 }
 
-.autodescription-metaboxes .seoframework-tabs-content {
+.tsf-metaboxes .tsf-tabs-content {
 	margin: 1.33em auto 0;
 }
 
-.autodescription-metaboxes .seoframework-content-no-js {
+.tsf-metaboxes .seoframework-content-no-js {
 	margin: 1.33em auto;
 }
 
-body.js .autodescription-metaboxes .seoframework-tabs-content {
+body.js .tsf-metaboxes .tsf-tabs-content {
 	display: none;
 }
 
-body.js .autodescription-metaboxes .seoframework-tabs-content.seoframework-active-tab-content {
+body.js .tsf-metaboxes .tsf-tabs-content.tsf-active-tab-content {
 	display: block;
 }
 
@@ -505,74 +540,115 @@
  * End tabs.
  */
 
-.autodescription-metaboxes .seoframework-default-selected {
+.tsf-metaboxes .tsf-default-selected {
 	border-color: #1c9d38;
 }
 
-.autodescription-metaboxes .seoframework-default-selected:checked:before {
+.tsf-metaboxes .tsf-default-selected:checked:before {
 	color: #1c9d38;
 }
 
-.autodescription-metaboxes .seoframework-warning-selected {
+.tsf-metaboxes .tsf-warning-selected {
 	border-color: #dd3811;
 }
 
-.autodescription-metaboxes .seoframework-warning-selected:checked:before {
+.tsf-metaboxes .tsf-warning-selected:checked:before {
 	color: #dd3811;
 }
 
-.theseoframework-fields {
+.tsf-fields {
 	font-size: 13px;
 	line-height: 1.5;
 	margin: 1em 0;
 }
 
-.theseoframework-fields .toblock {
+.tsf-fields .tsf-toblock {
 	display: block;
 	width: 100%;
 	margin-bottom: 4px;
 }
 
-.theseoframework-fields p.description {
+.tsf-fields p.description {
 	margin: 7px 0 5px;
 	color: #666;
 }
 
-.theseoframework-option-spacer {
+.tsf-option-spacer {
 	margin: 1em 0;
 }
 
+.tsf-counter .tsf-ajax {
+	margin-left: 3px;
+}
+
+.tsf-ajax:before {
+	display: inline-block;
+	line-height: 1;
+	font-family: dashicons;
+	font-style: normal;
+	font-weight: 400;
+	font-size: 1.225em;
+	vertical-align: middle;
+	content: "";
+}
+
+.tsf-ajax.tsf-loading:before {
+	content: "\f463";
+	color: #007bd2;
+	-webkit-animation: tsf-spin 1.5s linear infinite;
+	-moz-animation: tsf-spin 1.5s linear infinite;
+	-o-animation: tsf-spin 1.5s linear infinite;
+	animation: tsf-spin 1.5s linear infinite;
+}
+
+.tsf-ajax.tsf-error:before {
+	content: "\f158";
+	color: #dd3811;
+}
+
+.tsf-ajax.tsf-success:before {
+	content: "\f147";
+	color: #0cc34b;
+}
+
+@-webkit-keyframes tsf-spin {
+	0% {
+		-webkit-transform: rotate( 0deg );
+	}
+	100% {
+		-webkit-transform: rotate( 360deg );
+	}
+}
+
+@keyframes tsf-spin {
+	0% {
+		transform: rotate( 0deg );
+	}
+	100% {
+		transform: rotate( 360deg );
+	}
+}
+
 @media screen and (max-width: 782px) {
-	.autodescription-metaboxes p.theseoframework-fields,
-	.theseoframework-inpost-box p.theseoframework-fields {
+	.tsf-metaboxes p.tsf-fields,
+	.tsf-inpost-box p.tsf-fields {
 		line-height: 2.8;
 	}
 
-	.autodescription-metaboxes #title-location label span,
-	.autodescription-metaboxes #home-title-location label span {
+	.tsf-metaboxes #tsf-title-location label span,
+	.tsf-metaboxes #tsf-home-title-location label span {
 		min-width: 40px;
 	}
 }
 
 @media screen and (max-width: 642px) {
-	.autodescription-metaboxes span.seoframework-nav-desktop {
+	.tsf-metaboxes span.tsf-nav-desktop {
 		display: none;
 	}
 }
 
-@media screen and (max-width: 600px) {
-	.autodescription-metaboxes h3.nav-tab-wrapper {
-		border-bottom: 1px solid #ccc;
-	}
-
-	.autodescription-metaboxes h3 .nav-tab {
-		margin-right: 7px;
-		margin-bottom: -1px;
-	}
-}
-
 @media screen and (max-width: 510px) {
-	span.ad-seo.ad-100 {
+	span.tsf-seo-bar.tsf-100 {
 		width: inherit;
 	}
 }
@@ -579,15 +655,36 @@
 
 /* Firefix */
 @-moz-document url-prefix() {
-	.autodescription-metaboxes .seoframework-default-selected {
+	.tsf-metaboxes #tsf-title-separator label,
+	.tsf-metaboxes #tsf-description-separator label {
+		margin: 3px 1px;
+	}
+
+	@media only screen and ( min-width: 768px ) {
+		/**
+		 * https://bugzilla.mozilla.org/show_bug.cgi?id=587438
+		 * Only fix when title is second element and there are more than 6 elements in the table.
+		 */
+		.widefat tr th.column-title:nth-child(2):nth-last-child(n+6),
+		.widefat tr td.column-title:nth-child(2):nth-last-child(n+6),
+		.widefat tr th.title:nth-child(2):nth-last-child(n+6),
+		.widefat tr td.title:nth-child(2):nth-last-child(n+6) {
+			min-width: 1em;
+			width: 25%;
+			max-width: 100%;
+			white-space: unset;
+		}
+	}
+
+	.tsf-metaboxes .tsf-default-selected {
 		box-shadow: 0 0 2px 0 #1c9d38;
 	}
 
-	.autodescription-metaboxes .seoframework-warning-selected {
+	.tsf-metaboxes .tsf-warning-selected {
 		box-shadow: 0 0 2px 0 #dd3811;
 	}
 
-	.autodescription-metaboxes legend h4 {
+	.tsf-metaboxes legend h4 {
 		margin: 2px 0;
 	}
 }
Index: lib/css/autodescription.min.css
===================================================================
--- lib/css/autodescription.min.css	(revision 1475679)
+++ lib/css/autodescription.min.css	(working copy)
@@ -1 +1 @@
-.seo-notice{position:relative;clear:both}a.autodescription-dismiss{position:absolute;top:0;right:1px;border:none;margin:0;padding:9px;background:0 0;color:#b4b9be;cursor:pointer;text-decoration:none}a.autodescription-dismiss:before{background:0 0;content:"\f153";display:block;font:400 16px/20px dashicons;speak:none;height:20px;text-align:center;width:20px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a.autodescription-dismiss:hover{color:#c00}table.wp-list-table .column-name{width:15%}table.wp-list-table .column-is_in_stock,table.wp-list-table .column-price,table.wp-list-table .column-sku{width:8%}.ad-seo a{text-decoration:none;font-size:13px}#autodescription-title-wrap{position:relative;display:block;padding:0;height:auto;width:auto}#autodescription-title-offset{visibility:hidden;height:0;display:inline-block;position:absolute;left:0;color:transparent;white-space:pre}#autodescription-title-placeholder{position:absolute;color:#777;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;box-sizing:content-box;top:0;left:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.theseoframework-counter{font-weight:600;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}span.ad-count-bad{color:#dd3811}span.ad-count-okay{color:#ffa700}span.ad-count-good{color:#0cc34b}span.tsf-counter-one{color:#fff;border-radius:58px;padding:0 1px;min-width:29px;display:inline-block;text-align:center;vertical-align:baseline}span.tsf-counter-one.ad-count-bad{background-color:#dd3811}span.tsf-counter-one.ad-count-okay{background-color:#ffa700}span.tsf-counter-one.ad-count-good{background-color:#0cc34b}#ad_seo{width:18%}th:last-of-type#ad_seo{width:160px}span.ad-seo{display:block;width:95%;max-width:220px;border-radius:0;padding:3px;text-shadow:0 0 3px rgba(0,0,0,.3)}.ad-100,.ad-bar-wrap a,span.ad-seo.ad-100{width:100%}span.ad-bar-wrap{display:table;width:100%;border-radius:0;margin:0 auto;border-collapse:separate;border-spacing:0;vertical-align:middle;position:relative}span.ad-sec-wrap{display:table-cell;border-collapse:collapse}.ad-bar-wrap a{display:table;color:#fff;text-align:center;cursor:help;height:100%;min-width:12px;vertical-align:top;line-height:1.625em;box-shadow:2px 0 0 -1px rgba(0,0,0,.1) inset,-2px 0 0 -1px rgba(0,0,0,.1) inset}span.ad-seo.pill,span.ad-seo.pill span.ad-bar-wrap{border-radius:30px}span.ad-seo.pill span.ad-bar-wrap a{box-shadow:2px 6px 3px -2px rgba(255,255,255,.2) inset,-2px -6px 3px -2px rgba(41,41,41,.2) inset,0 0 1px rgba(41,41,41,.6)}.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type,.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:first-of-type a{border-top-left-radius:30px;border-bottom-left-radius:30px}.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type,.ad-seo.pill .ad-bar-wrap span.ad-sec-wrap:last-of-type a{border-top-right-radius:30px;border-bottom-right-radius:30px}.ad-60{width:60%}.ad-50{width:50%}.ad-40{width:40%}.ad-33{width:33.333%}.ad-25{width:25%}.ad-20{width:20%}.ad-16{width:16.666%}.ad-12-5{width:12.5%}.ad-11{width:11.333%}.ad-10{width:10%}.ad-seo-bad{background-color:#dd3811}.ad-seo-okay{background-color:#ffa700}.ad-seo-good{background-color:#0cc34b}.ad-seo-unknown{background-color:#007bd2}span.ad-seo .explanation-desc{position:absolute;width:auto;min-width:90%;max-width:220px;font-weight:600;background:#007bd2;padding:8px 12px;color:#fdfdfd;border-radius:0;z-index:900142;box-shadow:0 0 2px rgba(0,0,0,.6);left:0;right:0;text-align:left}span.ad-seo .explanation-desc span{text-decoration:underline}span.ad-seo .explanation-desc div{width:0;height:0;border-left:12px solid transparent;border-right:12px solid transparent;border-top:12px solid #007bd2;position:absolute;bottom:-8px;z-index:9999999;left:0}.ad_seo.column-ad_seo{overflow:initial!important;min-width:160px}#col-container,#col-right{overflow:initial}.autodescription-metaboxes{box-sizing:border-box;max-width:690px;padding-bottom:20px}.autodescription-metaboxes .top-wrap{width:100%;display:inline-block;vertical-align:top}.autodescription-metaboxes .top-wrap>h1,.autodescription-metaboxes .top-wrap>h2{float:left}.autodescription-metaboxes .metabox-holder{clear:both}.autodescription-metaboxes .top-buttons{float:right}.autodescription-metaboxes .bottom-buttons{text-align:right}.autodescription-metaboxes .bottom-buttons input,.autodescription-metaboxes .top-buttons input{margin-left:10px}.autodescription-metaboxes #description-separator,.autodescription-metaboxes #title-separator{display:table;width:100%;border-collapse:collapse;border-spacing:0}.autodescription-metaboxes #description-separator input,.autodescription-metaboxes #title-separator input{display:none;float:left;width:0;min-width:0;opacity:0}.autodescription-metaboxes #description-separator label,.autodescription-metaboxes #title-separator label{display:inline-block;width:auto;min-width:28px;min-height:28px;margin:3px;-moz-margin-end:1.5px;-moz-margin-start:1.5px;padding:0 4px;border:1px solid #ccc;line-height:28px;text-align:center;cursor:pointer;box-shadow:-1px -1px 1px #aaa inset;font-size:16px}.autodescription-metaboxes #description-separator label.recommended,.autodescription-metaboxes #title-separator label.recommended{border:1px solid #0cc34b;box-shadow:-1px -1px 1px #0cc34b inset}.autodescription-metaboxes #description-separator input:hover+label,.autodescription-metaboxes #description-separator label:hover,.autodescription-metaboxes #title-separator input:hover+label,.autodescription-metaboxes #title-separator label:hover{box-shadow:1px 1px 1px #aaa inset;background-color:#fff}.autodescription-metaboxes #description-separator input:checked+label,.autodescription-metaboxes #title-separator input:checked+label{box-shadow:1px 1px 1px #333 inset;background-color:#fff}.autodescription-metaboxes #home-title-location,.autodescription-metaboxes #title-location{display:block}.autodescription-metaboxes #home-title-location label span,.autodescription-metaboxes #title-location label span,.autodescription-metaboxes #twitter-cards label span{display:inline-block;min-width:60px;vertical-align:baseline}.autodescription-metaboxes #twitter-cards label span{min-width:150px}.autodescription-metaboxes #home-title-location label .autodescription-sep-js,.autodescription-metaboxes #home-title-location label span.custom-blogname-js,.autodescription-metaboxes #home-title-location label span.custom-tagline-js,.autodescription-metaboxes #home-title-location label span.custom-title-js,.autodescription-metaboxes #title-location label .autodescription-sep-js{display:inline;min-width:0;white-space:pre}.autodescription-metaboxes .seoframework-nav-tab-wrapper,.autodescription-metaboxes .seoframework-tab-no-js{position:relative;clear:both;width:100%;display:inline-block;border-bottom:1px solid #ccc;line-height:inherit;padding:8px 12px 0;margin:-4px -12px}.autodescription-metaboxes .seoframework-nav-tab{float:left;border:1px solid #ccc;margin-left:.5em;margin-bottom:-1px;padding:5px 14px;font-size:12px;line-height:16px;background:#f1f1f1;color:#555;font-weight:600}.autodescription-metaboxes .seoframework-dashicons-tabs{font-size:initial;display:inline;vertical-align:text-bottom}.autodescription-metaboxes .seoframework-tabs-radio{display:none;width:0;height:0;position:absolute;left:-9001px}.autodescription-metaboxes .seoframework-active-tab,.autodescription-metaboxes .seoframework-tabs-radio:checked+label{background-color:inherit;border-bottom-color:#fff;color:#000}.autodescription-metaboxes .seoframework-tabs-content{margin:1.33em auto 0}.autodescription-metaboxes .seoframework-content-no-js{margin:1.33em auto}body.js .autodescription-metaboxes .seoframework-tabs-content{display:none}body.js .autodescription-metaboxes .seoframework-tabs-content.seoframework-active-tab-content{display:block}.autodescription-metaboxes .seoframework-default-selected{border-color:#1c9d38}.autodescription-metaboxes .seoframework-default-selected:checked:before{color:#1c9d38}.autodescription-metaboxes .seoframework-warning-selected{border-color:#dd3811}.autodescription-metaboxes .seoframework-warning-selected:checked:before{color:#dd3811}.theseoframework-fields{font-size:13px;line-height:1.5;margin:1em 0}.theseoframework-fields .toblock{display:block;width:100%;margin-bottom:4px}.theseoframework-fields p.description{margin:7px 0 5px;color:#666}.theseoframework-option-spacer{margin:1em 0}@media screen and (max-width:782px){.autodescription-metaboxes p.theseoframework-fields,.theseoframework-inpost-box p.theseoframework-fields{line-height:2.8}.autodescription-metaboxes #home-title-location label span,.autodescription-metaboxes #title-location label span{min-width:40px}}@media screen and (max-width:642px){.autodescription-metaboxes span.seoframework-nav-desktop{display:none}}@media screen and (max-width:600px){.autodescription-metaboxes h3.nav-tab-wrapper{border-bottom:1px solid #ccc}.autodescription-metaboxes h3 .nav-tab{margin-right:7px;margin-bottom:-1px}}@media screen and (max-width:510px){span.ad-seo.ad-100{width:inherit}}@-moz-document url-prefix(){.autodescription-metaboxes .seoframework-default-selected{box-shadow:0 0 2px 0 #1c9d38}.autodescription-metaboxes .seoframework-warning-selected{box-shadow:0 0 2px 0 #dd3811}.autodescription-metaboxes legend h4{margin:2px 0}}
+.tsf-notice{position:relative;clear:both}.tsf-notice.tsf-show-icon p:before{content:'';margin-right:12px;background:0 0;display:inline-block;font:400 14px/16px dashicons;speak:none;height:16px;text-align:center;vertical-align:middle;width:16px;line-height:14px;-webkit-font-smoothing:antialiased}.error.tsf-notice.tsf-show-icon p:before{color:#dd3811;content:"\f534"}.notice-warning.tsf-notice.tsf-show-icon p:before{color:#ffa01b;content:"\f227"}.updated.tsf-notice.tsf-show-icon p:before{color:#0cc34b;font-size:16px;content:"\f147"}a.tsf-dismiss{position:absolute;top:0;right:1px;border:none;margin:0;padding:9px;background:0 0;color:#b4b9be;cursor:pointer;text-decoration:none}a.tsf-dismiss:before{background:0 0;content:"\f153";display:block;font:400 16px/20px dashicons;speak:none;height:20px;text-align:center;width:20px;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}a.tsf-dismiss:hover{color:#c00}table.wp-list-table .column-name{width:15%}table.wp-list-table .column-icl_translations,table.wp-list-table .column-is_in_stock,table.wp-list-table .column-price,table.wp-list-table .column-sku{width:8%}.tsf-seo-bar a{text-decoration:none;font-size:13px}#tsf-title-wrap{position:relative;display:block;padding:0;height:auto;width:auto}#tsf-title-offset{visibility:hidden;height:0;display:inline-block;position:absolute;left:0;color:transparent;white-space:pre}#tsf-title-placeholder{position:absolute;color:#777;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;box-sizing:content-box;top:0;left:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.tsf-counter{font-weight:600;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}span.tsf-count-bad{color:#dd3811}span.tsf-count-okay{color:#ffa700}span.tsf-count-good{color:#0cc34b}span.tsf-counter-one{color:#fff;border-radius:58px;padding:0 1px;min-width:29px;display:inline-block;text-align:center;vertical-align:baseline}span.tsf-counter-one.tsf-count-bad{background-color:#dd3811}span.tsf-counter-one.tsf-count-okay{background-color:#ffa700}span.tsf-counter-one.tsf-count-good{background-color:#0cc34b}#tsf-seo-bar-wrap{width:18%}th:last-of-type#tsf-seo-bar-wrap{width:160px}span.tsf-seo-bar{display:block;width:95%;max-width:220px;border-radius:0;padding:3px;text-shadow:0 0 3px rgba(0,0,0,.3)}span.tsf-seo-bar.tsf-100{width:100%}span.tsf-seo-bar-inner-wrap{display:table;width:100%;border-radius:0;margin:0 auto;border-collapse:separate;border-spacing:0;vertical-align:middle;position:relative}span.tsf-seo-bar-section-wrap{display:table-cell;border-collapse:collapse}.tsf-seo-bar-inner-wrap a{display:table;width:100%;color:#fff;text-align:center;cursor:help;height:100%;min-width:12px;vertical-align:top;line-height:1.625em;box-shadow:2px 0 0 -1px rgba(0,0,0,.1) inset,-2px 0 0 -1px rgba(0,0,0,.1) inset}span.tsf-seo-bar.pill,span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap{border-radius:30px}span.tsf-seo-bar.pill span.tsf-seo-bar-inner-wrap a{box-shadow:2px 6px 3px -2px rgba(255,255,255,.2) inset,-2px -6px 3px -2px rgba(41,41,41,.2) inset,0 0 1px rgba(41,41,41,.6)}.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type,.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:first-of-type a{border-top-left-radius:30px;border-bottom-left-radius:30px}.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type,.tsf-seo-bar.pill .tsf-seo-bar-inner-wrap span.tsf-seo-bar-section-wrap:last-of-type a{border-top-right-radius:30px;border-bottom-right-radius:30px}.tsf-100{width:100%}.tsf-60{width:60%}.tsf-50{width:50%}.tsf-40{width:40%}.tsf-33{width:33.333%}.tsf-25{width:25%}.tsf-20{width:20%}.tsf-16{width:16.666%}.tsf-12-5{width:12.5%}.ad-11{width:11.333%}.tsf-10{width:10%}.tsf-seo-bar-bad{background-color:#dd3811}.tsf-seo-bar-okay{background-color:#ffa700}.tsf-seo-bar-good{background-color:#0cc34b}.tsf-seo-bar-unknown{background-color:#007bd2}span.tsf-seo-bar .tsf-explanation-desc{position:absolute;width:auto;min-width:90%;max-width:220px;font-weight:600;background:#007bd2;padding:8px 12px;color:#fdfdfd;border-radius:0;z-index:900142;box-shadow:0 0 2px rgba(0,0,0,.6);left:0;right:0;text-align:left}span.tsf-seo-bar .tsf-explanation-desc span{text-decoration:underline}span.tsf-seo-bar .tsf-explanation-desc div{width:0;height:0;border-left:12px solid transparent;border-right:12px solid transparent;border-top:12px solid #007bd2;position:absolute;bottom:-8px;z-index:9999999;left:0}.tsf-seo-bar-wrap.column-tsf-seo-bar-temp{overflow:initial!important;min-width:160px}#col-container,#col-right{overflow:initial}.tsf-metaboxes{box-sizing:border-box;max-width:690px;padding-bottom:20px}.tsf-metaboxes .tsf-top-wrap{width:100%;display:inline-block;vertical-align:top}.tsf-metaboxes .tsf-top-wrap>h1,.tsf-metaboxes .tsf-top-wrap>h2{float:left}.tsf-metaboxes .metabox-holder{clear:both}.tsf-metaboxes .tsf-top-buttons{float:right}.tsf-metaboxes .tsf-bottom-buttons{text-align:right}.tsf-metaboxes .tsf-bottom-buttons input,.tsf-metaboxes .tsf-top-buttons input{margin-left:10px}.tsf-metaboxes #tsf-description-separator,.tsf-metaboxes #tsf-title-separator{display:table;width:100%;border-collapse:collapse;border-spacing:0}.tsf-metaboxes #tsf-description-separator input,.tsf-metaboxes #tsf-title-separator input{display:none;float:left;width:0;min-width:0;opacity:0}.tsf-metaboxes #tsf-description-separator label,.tsf-metaboxes #tsf-title-separator label{display:inline-block;width:auto;min-width:28px;min-height:28px;margin:3px;-moz-margin-end:1.5px;-moz-margin-start:1.5px;padding:0 4px;border:1px solid #ccc;line-height:28px;text-align:center;cursor:pointer;box-shadow:-1px -1px 1px #aaa inset;font-size:16px}.tsf-metaboxes #tsf-description-separator label.tsf-recommended,.tsf-metaboxes #tsf-title-separator label.tsf-recommended{border:1px solid #0cc34b;box-shadow:-1px -1px 1px #0cc34b inset}.tsf-metaboxes #tsf-description-separator input:hover+label,.tsf-metaboxes #tsf-description-separator label:hover,.tsf-metaboxes #tsf-title-separator input:hover+label,.tsf-metaboxes #tsf-title-separator label:hover{box-shadow:1px 1px 1px #aaa inset;background-color:#fff}.tsf-metaboxes #tsf-description-separator input:checked+label,.tsf-metaboxes #tsf-title-separator input:checked+label{box-shadow:1px 1px 1px #333 inset;background-color:#fff}.tsf-metaboxes #tsf-home-title-location,.tsf-metaboxes #tsf-title-location{display:block}.tsf-metaboxes #tsf-home-title-location label span,.tsf-metaboxes #tsf-title-location label span,.tsf-metaboxes #tsf-twitter-cards label span{display:inline-block;min-width:60px;vertical-align:baseline}.tsf-metaboxes #tsf-twitter-cards label span{min-width:150px}.tsf-metaboxes #tsf-home-title-location label .autodescription-sep-js,.tsf-metaboxes #tsf-home-title-location label span.custom-title-js,.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-blogname-js,.tsf-metaboxes #tsf-home-title-location label span.tsf-custom-tagline-js,.tsf-metaboxes #tsf-title-location label .autodescription-sep-js{display:inline;min-width:0;white-space:pre}.tsf-metaboxes .tsf-nav-tab-wrapper,.tsf-metaboxes .tsf-tab-no-js{position:relative;clear:both;width:100%;display:inline-block;border-bottom:1px solid #ccc;line-height:inherit;padding:8px 12px 0;margin:-4px -12px}.tsf-metaboxes .tsf-nav-tab{float:left;border:1px solid #ccc;margin-left:.5em;margin-bottom:-1px;padding:5px 14px;font-size:12px;line-height:16px;background:#f1f1f1;color:#555;font-weight:600}.tsf-metaboxes .tsf-dashicons-tabs{font-size:initial;display:inline;vertical-align:text-bottom}.tsf-metaboxes .tsf-tabs-radio{display:none;width:0;height:0;position:absolute;left:-9001px}.tsf-metaboxes .tsf-active-tab,.tsf-metaboxes .tsf-tabs-radio:checked+label{background-color:inherit;border-bottom-color:#fff;color:#000}.tsf-metaboxes .tsf-tabs-content{margin:1.33em auto 0}.tsf-metaboxes .seoframework-content-no-js{margin:1.33em auto}body.js .tsf-metaboxes .tsf-tabs-content{display:none}body.js .tsf-metaboxes .tsf-tabs-content.tsf-active-tab-content{display:block}.tsf-metaboxes .tsf-default-selected{border-color:#1c9d38}.tsf-metaboxes .tsf-default-selected:checked:before{color:#1c9d38}.tsf-metaboxes .tsf-warning-selected{border-color:#dd3811}.tsf-metaboxes .tsf-warning-selected:checked:before{color:#dd3811}.tsf-fields{font-size:13px;line-height:1.5;margin:1em 0}.tsf-fields .tsf-toblock{display:block;width:100%;margin-bottom:4px}.tsf-fields p.description{margin:7px 0 5px;color:#666}.tsf-option-spacer{margin:1em 0}.tsf-counter .tsf-ajax{margin-left:3px}.tsf-ajax:before{display:inline-block;line-height:1;font-family:dashicons;font-style:normal;font-weight:400;font-size:1.225em;vertical-align:middle;content:""}.tsf-ajax.tsf-loading:before{content:"\f463";color:#007bd2;-webkit-animation:tsf-spin 1.5s linear infinite;-moz-animation:tsf-spin 1.5s linear infinite;-o-animation:tsf-spin 1.5s linear infinite;animation:tsf-spin 1.5s linear infinite}.tsf-ajax.tsf-error:before{content:"\f158";color:#dd3811}.tsf-ajax.tsf-success:before{content:"\f147";color:#0cc34b}@-webkit-keyframes tsf-spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes tsf-spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@media screen and (max-width:782px){.tsf-inpost-box p.tsf-fields,.tsf-metaboxes p.tsf-fields{line-height:2.8}.tsf-metaboxes #tsf-home-title-location label span,.tsf-metaboxes #tsf-title-location label span{min-width:40px}}@media screen and (max-width:642px){.tsf-metaboxes span.tsf-nav-desktop{display:none}}@media screen and (max-width:510px){span.tsf-seo-bar.tsf-100{width:inherit}}@-moz-document url-prefix(){.tsf-metaboxes #tsf-description-separator label,.tsf-metaboxes #tsf-title-separator label{margin:3px 1px}@media only screen and (min-width:768px){.widefat tr td.column-title:nth-child(2):nth-last-child(n+6),.widefat tr td.title:nth-child(2):nth-last-child(n+6),.widefat tr th.column-title:nth-child(2):nth-last-child(n+6),.widefat tr th.title:nth-child(2):nth-last-child(n+6){min-width:1em;width:25%;max-width:100%;white-space:unset}}.tsf-metaboxes .tsf-default-selected{box-shadow:0 0 2px 0 #1c9d38}.tsf-metaboxes .tsf-warning-selected{box-shadow:0 0 2px 0 #dd3811}.tsf-metaboxes legend h4{margin:2px 0}}
Index: lib/js/autodescription.js
===================================================================
--- lib/js/autodescription.js	(revision 1475679)
+++ lib/js/autodescription.js	(working copy)
@@ -1,5 +1,5 @@
 /**
- * This file holds The SEO Framework plugin's JS code.\
+ * This file holds The SEO Framework plugin's JS code.
  * Serve JavaScript as an addition, not as a means.
  *
  * @author Sybre Waaijer https://cyberwire.nl/
@@ -49,19 +49,45 @@
  */
 window[ 'autodescription' ] = {
 
+	/**
+	 * Determines if the settings have been changed since visit.
+	 * @param {Boolean} settingsChanged
+	 */
 	settingsChanged: false,
 
+	/**
+	 * The current title tagline.
+	 * @param {String} titleTagline
+	 */
 	titleTagline : autodescriptionL10n['titleTagline'],
 
 	/**
+	 * @since 2.7.0
+	 * @param {String} nonce The AJAX nonce
+	 */
+	nonce : autodescriptionL10n['nonce'],
+
+	/**
 	 * Mixed string and int (i10n is string, JS is int).
-	 * @param {String|int} autodescription.counterType
+	 * @param {String|int} countertype The autodescription.counterType
 	 */
 	counterType : autodescriptionL10n['counterType'],
 
+	/**
+	 * The current character counter additions class.
+	 * @param {String} additionsClass
+	 */
 	additionsClass : '',
 
 	/**
+	 * The current title/description separator.
+	 * @param {String} titleSeparator
+	 * @param {String} descriptionSeparator
+	 */
+	titleSeparator : autodescriptionL10n['titleSeparator'],
+	descriptionSeparator : autodescriptionL10n['descriptionSeparator'],
+
+	/**
 	 * Cached doctitle function.
 	 *
 	 * @since 2.3.3
@@ -139,13 +165,13 @@
 		}
 
 		if ( $length < 100 || $length >= 175 ) {
-			$counterClass = 'ad-count-bad';
+			$counterClass = 'tsf-count-bad';
 			$name = autodescription.getCounterName( 'bad' );
 		} else if ( $length < 137 || ( $length > 155 && $length < 175 ) ) {
-			$counterClass = 'ad-count-okay';
+			$counterClass = 'tsf-count-okay';
 			$name = autodescription.getCounterName( 'okay' );
 		} else {
-			$counterClass = 'ad-count-good';
+			$counterClass = 'tsf-count-good';
 			$name = autodescription.getCounterName( 'good' );
 		}
 
@@ -229,13 +255,13 @@
 		}
 
 		if ( $length < 25 || $length >= 75 ) {
-			$counterClass = 'ad-count-bad';
+			$counterClass = 'tsf-count-bad';
 			$name = autodescription.getCounterName( 'bad' );
 		} else if ( $length < 42 || ( $length > 55 && $length < 75 ) ) {
-			$counterClass = 'ad-count-okay';
+			$counterClass = 'tsf-count-okay';
 			$name = autodescription.getCounterName( 'okay' );
 		} else {
-			$counterClass = 'ad-count-good';
+			$counterClass = 'tsf-count-good';
 			$name = autodescription.getCounterName( 'good' );
 		}
 
@@ -273,24 +299,6 @@
 	},
 
 	/**
-	 * Escapes HTML entities.
-	 *
-	 * @since 2.5.2.4
-	 * @function
-	 *
-	 * @param {String|null} str
-	 * @return {String} HTML to jQuery converted string
-	 */
-	escapeTags: function( str ) {
-		'use strict';
-
-		if ( str )
-			str.replace( /&/g, '&amp;' ).replace( /</g, '&lt;' ).replace( />/g, '&gt;' );
-
-		return str;
-	},
-
-	/**
 	 * Dynamic Title separator replacement in metabox
 	 *
 	 * @since 2.2.2
@@ -304,6 +312,9 @@
 		var $sep = jQuery( ".autodescription-sep-js" ),
 			$val = jQuery( event.target ).val();
 
+		//* Update cache.
+		autodescription.titleSeparator = $val;
+
 		if ( 'pipe' === $val ) {
 			$sep.text( " | " );
 		} else if ( 'dash' === $val ) {
@@ -346,11 +357,11 @@
 	statusBarHover: function() {
 		'use strict';
 
-		var $wrap = jQuery( '.ad-bar-wrap' ).find( 'a' );
+		var $wrap = jQuery( '.tsf-seo-bar-inner-wrap' ).find( 'a' );
 
-		$wrap.on( "mouseenter", autodescription.statusBarHoverEnter );
-		$wrap.on( "mousemove", autodescription.statusBarHoverMove );
-		$wrap.on( "mouseleave", autodescription.statusBarHoverLeave );
+		$wrap.on( 'mouseenter', autodescription.statusBarHoverEnter );
+		$wrap.on( 'mousemove', autodescription.statusBarHoverMove );
+		$wrap.on( 'mouseleave', autodescription.statusBarHoverLeave );
 
 	},
 
@@ -368,11 +379,11 @@
 			$thisDesc = $this.attr( 'data-desc' );
 
 		if ( $thisDesc !== undefined && 0 === $this.find( 'div' ).length ) {
-			$this.append( '<div class="explanation-desc">' + $thisDesc + '<div></div></div>' );
+			$this.append( '<div class="tsf-explanation-desc">' + $thisDesc + '<div></div></div>' );
 
-			var $thisHeight = $this.find( 'div.explanation-desc' ).height() + 28;
+			var $thisHeight = $this.find( 'div.tsf-explanation-desc' ).height() + 28;
 
-			$this.find( 'div.explanation-desc' ).css( 'top', ( $this.position().top - $thisHeight ) + 'px' );
+			$this.find( 'div.tsf-explanation-desc' ).css( 'top', ( $this.position().top - $thisHeight ) + 'px' );
 		}
 	},
 
@@ -389,8 +400,8 @@
 
 		var $this = jQuery( event.target ),
 			$pagex = event.pageX,
-			$mousex = $pagex - jQuery( '.ad-bar-wrap' ).offset().left - 11, // 22px width of arrow / 2 = 11 middle
-			$balloon = $this.find( '.explanation-desc' ),
+			$mousex = $pagex - jQuery( '.tsf-seo-bar-inner-wrap' ).offset().left - 11, // 22px width of arrow / 2 = 11 middle
+			$balloon = $this.find( '.tsf-explanation-desc' ),
 			$arrow = $balloon.find( 'div' );
 
 		if ( $mousex < 1 ) {
@@ -418,7 +429,7 @@
 	statusBarHoverLeave: function() {
 		'use strict';
 
-		jQuery( this ).find( 'div.explanation-desc' ).remove();
+		jQuery( this ).find( 'div.tsf-explanation-desc' ).remove();
 	},
 
 	/**
@@ -433,10 +444,10 @@
 		'use strict';
 
 		var $this = jQuery( event.target ),
-			$desc = jQuery('.ad-bar-wrap a');
+			$desc = jQuery('.tsf-seo-bar-inner-wrap a');
 
 		if ( ! $this.closest( $desc ).length )
-			$desc.find( 'div.explanation-desc' ).remove();
+			$desc.find( 'div.tsf-explanation-desc' ).remove();
 	},
 
 	/**
@@ -461,11 +472,10 @@
 				$other = jQuery( '.' + $name + '-content' );
 
 			if ( typeof $content !== 'undefined' ) {
-				$other.removeClass( 'seoframework-active-tab-content' );
-				$content.addClass( 'seoframework-active-tab-content' );
+				$other.removeClass( 'tsf-active-tab-content' );
+				$content.addClass( 'tsf-active-tab-content' );
 			}
 		}
-
 	},
 
 	/**
@@ -480,7 +490,7 @@
 		'use strict';
 
 		var $this = jQuery( event.target ),
-			$tag = jQuery( '.custom-blogname-js' );
+			$tag = jQuery( '.tsf-custom-blogname-js' );
 
 		if ( $this.is( ':checked' ) ) {
 			$tag.css( 'display', 'inline' );
@@ -505,7 +515,7 @@
 		'use strict';
 
 		var $this = jQuery( event.target ),
-			$tagDesc = jQuery( '#on-blogname-js' );
+			$tagDesc = jQuery( '#tsf-on-blogname-js' );
 
 		if ( $this.is(':checked') ) {
 			$tagDesc.css( 'display', 'inline' );
@@ -526,8 +536,8 @@
 		'use strict';
 
 		var $this = jQuery( event.target ).val(),
-			$titleExampleLeft = jQuery( '.title-additions-example-left' ),
-			$titleExampleRight = jQuery( '.title-additions-example-right' );
+			$titleExampleLeft = jQuery( '.tsf-title-additions-example-left' ),
+			$titleExampleRight = jQuery( '.tsf-title-additions-example-right' );
 
 		if ( 'right' === $this ) {
 			$titleExampleLeft.css( 'display', 'none' );
@@ -536,7 +546,6 @@
 			$titleExampleLeft.css( 'display', 'inline' );
 			$titleExampleRight.css( 'display', 'none' );
 		}
-
 	},
 
 	/**
@@ -551,7 +560,7 @@
 		'use strict';
 
 		var $this = jQuery( event.target ),
-			$prefix = jQuery( '.title-prefix-example' );
+			$prefix = jQuery( '.tsf-title-prefix-example' );
 
 		if ( $this.is(':checked') ) {
 			$prefix.css( 'display', 'none' );
@@ -558,7 +567,6 @@
 		} else {
 			$prefix.css( 'display', 'inline' );
 		}
-
 	},
 
 	/**
@@ -573,7 +581,7 @@
 		'use strict';
 
 		var $this = jQuery( event.target ),
-			$tagDesc = jQuery( '#description-additions-js' );
+			$tagDesc = jQuery( '#tsf-description-additions-js' );
 
 		if ( $this.is(':checked') ) {
 			$tagDesc.css( 'display', 'inline' );
@@ -594,14 +602,14 @@
 	taglineToggleOnload: function( event ) {
 		'use strict';
 
-		var $tagTitle = jQuery( '#title-tagline-toggle :input' ),
-			$title = jQuery( '.custom-blogname-js' ),
-			$tagDescAdditions = jQuery( '#description-additions-toggle :input' ),
-			$descAdditions = jQuery( '#description-additions-js' ),
-			$tagDescBlogname = jQuery( '#description-onblogname-toggle :input' ),
-			$descBlogname = jQuery( '#on-blogname-js' ),
-			$tagTitleAdditions = jQuery( '#title-additions-toggle :input' ),
-			$titleAdditions = jQuery( '.title-additions-js' );
+		var $tagTitle = jQuery( '#tsf-title-tagline-toggle :input' ),
+			$title = jQuery( '.tsf-custom-blogname-js' ),
+			$tagDescAdditions = jQuery( '#tsf-description-additions-toggle :input' ),
+			$descAdditions = jQuery( '#tsf-description-additions-js' ),
+			$tagDescBlogname = jQuery( '#tsf-description-onblogname-toggle :input' ),
+			$descBlogname = jQuery( '#tsf-on-blogname-js' ),
+			$tagTitleAdditions = jQuery( '#tsf-title-additions-toggle :input' ),
+			$titleAdditions = jQuery( '.tsf-title-additions-js' );
 
 		if ( $tagTitle.is( ':checked' ) ) {
 			$title.css( 'display', 'inline' );
@@ -664,49 +672,34 @@
 		'use strict';
 
 		var $val = jQuery( event.target ).val(),
-			$floatTag = jQuery( '.custom-tagline-js' ),
+			$floatTag = jQuery( '.tsf-custom-tagline-js' ),
 			$target = jQuery( '#autodescription-site-settings\\[homepage_title\\]' ),
-			$leftRight = jQuery( '#home-title-location input:checked' ).val(),
+			$leftRight = jQuery( '#tsf-home-title-location input:checked' ).val(),
 			$toggle = jQuery( '#autodescription-site-settings\\[homepage_tagline\\]' ),
 			$title = autodescriptionL10n['siteTitle'],
 			$placeholder = $title,
 			$description = autodescriptionL10n['blogDescription'],
-			$sep = jQuery( '#title-separator input:checked' ).val(),
-			$sepOutput = autodescriptionL10n['titleSeparator'];
+			$sep = autodescription.getSep( 'title' );
 
 		if ( $toggle.is( ':checked' ) ) {
 
 			if ( $val.length !== 0 ) {
-				$val = autodescription.escapeTags( $val );
-
-				// Create a memory div to store the html in, convert to text to append in $placeholder and $floatTag
-				$description = jQuery( '<div/>' ).text( $val ).html();
+				$description = $val;
 			}
 
-			if ( $sep.length !== 0 ) {
-				if ( 'pipe' === $sep ) {
-					$sepOutput = ( "|" );
-				} else if ( 'dash' === $sep ) {
-					$sepOutput = ( "-" );
-				} else {
-					// Create a memory div to store the html in, convert to text to append in $placeholder
-					$sepOutput = jQuery( '<div/>' ).html( "&" + $sep + ";" ).text();
-				}
-			}
-
 			if ( $leftRight.length !== 0 && 'left' === $leftRight ) {
-				$placeholder = $title + ' ' + $sepOutput + ' ' + $description;
+				$placeholder = $title + ' ' + $sep + ' ' + $description;
 			} else {
-				$placeholder = $description + ' ' + $sepOutput + ' ' + $title;
+				$placeholder = $description + ' ' + $sep + ' ' + $title;
 			}
 
 		}
 
-		$floatTag.html( $description );
+		$floatTag.text( $description );
 		$target.attr( "placeholder", $placeholder );
 
 		// Notify tagline has changed.
-		autodescription.docTitles().trigger( 'keyup', autodescription.updateCharacterCountTitle );
+		autodescription.docTitles().trigger( 'input', autodescription.updateCharacterCountTitle );
 	},
 
 	/**
@@ -719,7 +712,7 @@
 	taglinePropTrigger: function() {
 		'use strict';
 
-		jQuery( "#autodescription-site-settings\\[homepage_title_tagline\\]" ).trigger( 'keyup', autodescription.taglineProp );
+		jQuery( "#autodescription-site-settings\\[homepage_title_tagline\\]" ).trigger( 'input', autodescription.taglineProp );
 	},
 
 	/**
@@ -733,7 +726,7 @@
 		'use strict';
 
 		var $this = jQuery( event.target ),
-			$tagDesc = jQuery( '.title-additions-js' );
+			$tagDesc = jQuery( '.tsf-title-additions-js' );
 
 		if ( $this.is( ':checked' ) ) {
 			$tagDesc.css( 'display', 'none' );
@@ -752,21 +745,21 @@
 	attachUnsavedChangesListener: function() {
 		'use strict';
 
-		jQuery( 'div.autodescription-metaboxes :input, div#theseoframework-inpost-box .inside :input' ).not( '.seoframework-tab :input' ).change( function() {
+		jQuery( '.tsf-metaboxes :input, #tsf-inpost-box .inside :input' ).not( '.tsf-tab :input' ).change( function() {
 			autodescription.registerChange();
 		});
 
-		jQuery( 'div.autodescription-metaboxes input[type=text], div.autodescription-metaboxes textarea, div#theseoframework-inpost-box .inside input[type=text], div#theseoframework-inpost-box .inside textarea' ).not('.nav-tab-wrapper :input').on( 'keyup', function() {
+		jQuery( '.tsf-metaboxes input[type=text], .tsf-metaboxes textarea, #tsf-inpost-box .inside input[type=text], #tsf-inpost-box .inside textarea' ).not( '.tsf-nav-tab-wrapper :input' ).on( 'input', function() {
 			autodescription.registerChange();
 		});
 
-		window.onbeforeunload = function(){
+		window.onbeforeunload = function() {
 			if ( autodescription.settingsChanged ) {
 				return autodescriptionL10n['saveAlert'];
 			}
 		};
 
-		jQuery( 'div.autodescription-metaboxes input[type="submit"], div#publishing-action input[type="submit"], div#save-action input[type="submit"], a.submitdelete' ).click( function() {
+		jQuery( '.tsf-metaboxes input[type="submit"], #publishing-action input[type="submit"], #save-action input[type="submit"], a.submitdelete' ).click( function() {
 			window.onbeforeunload = null;
 		});
 	},
@@ -813,7 +806,7 @@
 		'use strict';
 
 		var $hasAdditions = autodescriptionL10n['titleAdditions'].length,
-			$placeholder = jQuery( '#autodescription-title-placeholder' );
+			$placeholder = jQuery( '#tsf-title-placeholder' );
 
 		// If check is defined, we're on SEO settings page.
 		if ( 0 === $hasAdditions ) {
@@ -825,7 +818,7 @@
 		}
 
 		var $after = false,
-			$check = jQuery( '#home-title-location input:checked' ).val(),
+			$check = jQuery( '#tsf-home-title-location input:checked' ).val(),
 			$rtl = autodescriptionL10n['isRTL'],
 			$additions = '';
 
@@ -871,7 +864,7 @@
 			}
 		}
 
-		var $tagbox = jQuery( '#title-tagline-toggle :input' );
+		var $tagbox = jQuery( '#tsf-title-tagline-toggle :input' );
 
 		if ( typeof $tagbox !== "undefined" && $tagbox.length > 0 && ! $tagbox.is( ':checked' ) ) {
 			//* We're on SEO Settings Page now, and tagline has been disabled.
@@ -883,7 +876,7 @@
 
 			var $this = jQuery( event.target ),
 				$inputVal = $this.val(),
-				$offsetTest = jQuery( "#autodescription-title-offset" ),
+				$offsetTest = jQuery( "#tsf-title-offset" ),
 				$offsetWidth = 0,
 				$heightPad = ( $this.outerHeight( true ) - $this.height() ) / 2,
 				$horPad = ( $this.outerWidth() - $this.width() ) / 2,
@@ -890,7 +883,7 @@
 				$leftOffset = ( $this.outerWidth( true ) - $this.width() ) / 2,
 				$taglineVal = jQuery( "#autodescription-site-settings\\[homepage_title_tagline\\]" ).val(),
 				$pos = 'left',
-				$separator = autodescriptionL10n['titleSeparator'];
+				$separator = autodescription.getSep( 'title' );
 
 			if ( '1' === $rtl ) {
 				$pos = 'right';
@@ -1012,12 +1005,11 @@
 
 		if ( typeof $input.val() !== "undefined" ) {
 			if ( $input.val().length > 0 ) {
-				$input.trigger( 'keyup', autodescription.dynamicPlaceholder );
+				$input.trigger( 'input', autodescription.dynamicPlaceholder );
 			} else {
-				$input.trigger( 'keyup', autodescription.updateCharacterCountTitle );
+				$input.trigger( 'input', autodescription.updateCharacterCountTitle );
 			}
 		}
-
 	},
 
 	/**
@@ -1032,7 +1024,7 @@
 
 		var $input = autodescription.docDescriptions();
 
-		$input.trigger( 'keyup', autodescription.updateCharacterCountDescription );
+		$input.trigger( 'input', autodescription.updateCharacterCountDescription );
 	},
 
 
@@ -1048,7 +1040,7 @@
 
 		var $input = autodescription.docTitles();
 
-		$input.trigger( 'keyup', autodescription.updateCharacterCountTitle );
+		$input.trigger( 'input', autodescription.updateCharacterCountTitle );
 	},
 
 	/**
@@ -1066,7 +1058,7 @@
 	},
 
 	/**
-	 * Dismissible notices. Uses class .seo-notice.
+	 * Dismissible notices. Uses class .tsf-notice.
 	 *
 	 * @since 2.6.0
 	 *
@@ -1078,7 +1070,7 @@
 
 		var $this = jQuery( event.target );
 
-		$this.parents( '.seo-notice' ).slideUp( 200, function() {
+		$this.parents( '.tsf-notice' ).slideUp( 200, function() {
 			$this.remove();
 		});
 
@@ -1085,13 +1077,66 @@
 	},
 
 	/**
+	 * Visualizes AJAX loading time through target class change.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @function
+	 * @param {String} target
+	 */
+	setAjaxLoader: function( target ) {
+		'use strict';
+
+		jQuery( target ).toggleClass( 'tsf-loading' );
+	},
+
+	/**
+	 * Adjusts class loaders on Ajax response.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @function
+	 * @param {String} target
+	 * @param {Boolean} success
+	 */
+	unsetAjaxLoader: function( target, success ) {
+		'use strict';
+
+		var $newclass = 'tsf-success',
+			$fade = 2500;
+
+		if ( ! success ) {
+			$newclass = 'tsf-error';
+			$fade = 5000;
+		}
+
+		jQuery( target ).removeClass( 'tsf-loading' ).addClass( $newclass ).fadeOut( $fade );
+	},
+
+	/**
+	 * Cleans and resets Ajax wrapper class and contents to default.
+	 * Also stops any animation and resets fadeout to beginning.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @function
+	 * @param {String} target
+	 */
+	resetAjaxLoader: function( target ) {
+		'use strict';
+
+		jQuery( target ).stop().empty().attr( 'class', 'tsf-ajax' ).css( 'opacity', '1' ).removeAttr( 'style' );
+	},
+
+	/**
 	 * Updates the counter type.
 	 *
 	 * @since 2.6.0
 	 *
 	 * @function
+	 * @param {jQuery.event} event
 	 */
-	counterUpdate: function() {
+	counterUpdate: function( event ) {
 		'use strict';
 
 		// Count up, reset to 0 if needed. We have 4 options: 0, 1, 2, 3
@@ -1099,17 +1144,71 @@
 		if ( autodescription.counterType > 3 )
 			autodescription.counterType = 0;
 
-		var data = {
-			'action': 'the_seo_framework_update_counter'
-		};
+		//* Update counters locally.
+		autodescription.additionsClassInit();
 
-		//* Call PHP function and update all visible counters.
-		jQuery.post( ajaxurl, data );
+		var $target = '.tsf-counter .tsf-ajax',
+			$status = 0;
 
-		autodescription.additionsClassInit();
+		//* Reset ajax loader
+		autodescription.resetAjaxLoader( $target );
+
+		//* Set ajax loader.
+		autodescription.setAjaxLoader( $target );
+
+		//* Setup external update.
+		var settings = {
+			method: 'POST',
+			url: ajaxurl,
+			datatype: 'json',
+			data: {
+				'action' : 'the_seo_framework_update_counter',
+				'nonce' : autodescription.nonce,
+				'val' : autodescription.counterType,
+			},
+			async: true,
+			success: function( response ) {
+
+				response = jQuery.parseJSON( response );
+
+				//* I could do value check, but that will simply lag behind. Unless an annoying execution delay is added.
+				if ( 'success' === response.type )
+					$status = 1;
+
+				autodescription.counterUpdatedResponse( $target, $status );
+			},
+		}
+
+		jQuery.ajax( settings );
 	},
 
 	/**
+	 * Visualizes the AJAX response to the user.
+	 *
+	 * @since 2.7.0
+	 *
+	 * @function
+	 * @param {String} target
+	 * @param {Integer} success
+	 */
+	counterUpdatedResponse: function( target, success ) {
+		'use strict';
+
+		switch ( success ) {
+			case 0:
+				autodescription.unsetAjaxLoader( target, false );
+				break;
+			case 1:
+				autodescription.unsetAjaxLoader( target, true );
+				break;
+			default:
+				autodescription.resetAjaxLoader( target );
+				break;
+		}
+
+	},
+
+	/**
 	 * Sets up additionsClass variable.
 	 * Also sets up browser caches correctly.
 	 *
@@ -1123,8 +1222,10 @@
 		/**
 		 * Mixed string and int (i10n is string, JS is int).
 		 * @param {String|int} $counterType
+		 * @param {Boolean} $settingsChanged
 		 */
-		var $counterType = autodescription.counterType;
+		var $counterType = autodescription.counterType,
+			$settingsChanged = autodescription.settingsChanged;
 
 		if ( 1 == $counterType ) {
 			autodescription.additionsClass = 'tsf-counter-one';
@@ -1141,6 +1242,9 @@
 		}
 
 		autodescription.updateCounters();
+
+		// Reset settingschanges to previous value.
+		autodescription.settingsChanged = $settingsChanged;
 	},
 
 	/**
@@ -1164,17 +1268,47 @@
 	 * @function
 	 *
 	 * @param {String|null} type
-	 * @return {String} Human Readable Counter name.
+	 * @return {String} name Human readable counter name.
 	 */
 	getCounterName: function( type ) {
 		'use strict';
 
-		var name = autodescriptionL10n[type];
+		var name = autodescriptionL10n[ type ];
 
 		return name;
 	},
 
 	/**
+	 * Returns converted HTML title/description separator.
+	 *
+	 * @since 2.7.0
+	 * @function
+	 *
+	 * @param {String} type
+	 * @return {String} sep The converted separator.
+	 */
+	getSep: function( type ) {
+
+		if ( 'title' === type ) {
+			var sep = autodescription.titleSeparator;
+		} else {
+			var sep = autodescription.descriptionSeparator;
+		}
+
+		if ( 'pipe' === sep || '|' === sep ) {
+			sep = ( "|" );
+		} else if ( 'dash' === sep || '-' === sep ) {
+			sep = ( "-" );
+		} else if ( sep.charCodeAt(0) < 123 ) {
+			//* Checked for UTF-8 conversion.
+			// Create a memory div to store the html in, convert to text to append in $placeholder
+			sep = jQuery( '<div/>' ).html( "&" + sep + ";" ).text();
+		}
+
+		return sep;
+	},
+
+	/**
 	 * Initialises all aspects of the scripts.
 	 *
 	 * Generally ordered with stuff that inserts new elements into the DOM first,
@@ -1183,33 +1317,31 @@
 	 * keeps any screen jumping from occuring later on.
 	 *
 	 * @since 2.2.4
+	 * @since 2.7.0 jQuery object is now passed.
 	 *
+	 * @param {Object} jQ jQuery
 	 * @function
 	 */
-	ready: function() {
+	ready: function( jQ ) {
 		'use strict';
 
-		// Move the page updates notices below the top-wrap.
-		jQuery( 'div.updated, div.error, div.notice-warning' ).insertAfter( 'div.top-wrap' );
+		// Move the page updates notices below the tsf-top-wrap.
+		jQ( 'div.updated, div.error, div.notice-warning' ).insertAfter( 'div.tsf-top-wrap' );
 
 		// Set up additions classes.
-		jQuery( document.body ).ready( autodescription.additionsClassInit );
+		jQ( document.body ).ready( autodescription.additionsClassInit );
 
 		// Toggle Dynamic Title Placeholder onLoad, also toggles doing it right colors.
-		jQuery( document.body ).ready( autodescription.dynamicPlaceholderOnLoad );
-		// Toggle Title doing it right colors.
-		jQuery( document.body ).ready( autodescription.triggerTitleOnLoad );
-		// Toggle Description doing it right colors.
-		jQuery( document.body ).ready( autodescription.triggerDescriptionOnLoad );
+		jQ( document.body ).ready( autodescription.dynamicPlaceholderOnLoad );
 
 		// Check if the Title Tagline or Description Additions should be removed when page is loaded.
-		jQuery( document.body ).ready( autodescription.taglineToggleOnload );
+		jQ( document.body ).ready( autodescription.taglineToggleOnload );
 
 		// Initialize the status bar hover balloon.
-		jQuery( document.body ).ready( autodescription.statusBarHover );
+		jQ( document.body ).ready( autodescription.statusBarHover );
 
 		// Initialize status bar removal hover for touch screens.
-		jQuery( document.body ).on( 'click touchstart MSPointerDown', autodescription.removeDesc );
+		jQ( document.body ).on( 'click touchstart MSPointerDown', autodescription.removeDesc );
 
 		// #== Before Change listener
 
@@ -1217,58 +1349,58 @@
 		autodescription.attachUnsavedChangesListener();
 
 		// Deregister changes.
-		jQuery( document.body ).ready( autodescription.onLoadUnregisterChange );
+		jQ( document.body ).ready( autodescription.onLoadUnregisterChange );
 
 		// #== After Change listener
 
 		// Bind character counters.
-		autodescription.docDescriptions().on( 'keydown keyup paste', autodescription.updateCharacterCountDescription );
-		autodescription.docTitles().on( 'keydown keyup paste', autodescription.updateCharacterCountTitle );
+		autodescription.docDescriptions().on( 'input', autodescription.updateCharacterCountDescription );
+		autodescription.docTitles().on( 'input', autodescription.updateCharacterCountTitle );
 
 		// Allow the title separator to be changed dynamically.
-		jQuery( '#title-separator input' ).on( 'click', autodescription.separatorSwitch );
+		jQ( '#tsf-title-separator input' ).on( 'click', autodescription.separatorSwitch );
 		// Allow description separator to be changed dynamically.
-		jQuery( '#description-separator input' ).on( 'click', autodescription.separatorSwitchDesc );
+		jQ( '#tsf-description-separator input' ).on( 'click', autodescription.separatorSwitchDesc );
 
 		// Bind reset confirmation.
-		jQuery( '.autodescription-js-confirm-reset' ).on( 'click.autodescription.autodescription_confirm_reset', autodescription.confirmedReset );
+		jQ( '.autodescription-js-confirm-reset' ).on( 'click.autodescription.autodescription_confirm_reset', autodescription.confirmedReset );
 
 		// Toggle Tabs in the SEO settings page.
-		jQuery( '.seoframework-tab' ).on( 'click', autodescription.tabToggle );
+		jQ( '.tsf-tab' ).on( 'click', autodescription.tabToggle );
 
 		// Toggle Title tagline aditions removal.
-		jQuery( '#title-tagline-toggle :input' ).on( 'click', autodescription.taglineToggle );
+		jQ( '#tsf-title-tagline-toggle :input' ).on( 'click', autodescription.taglineToggle );
 		// Toggle Title additions location.
-		jQuery( '#title-location input' ).on( 'click', autodescription.titleLocationToggle );
+		jQ( '#tsf-title-location input' ).on( 'click', autodescription.titleLocationToggle );
 		// Toggle Title prefixes display.
-		jQuery( '#title-prefixes-toggle :input' ).on( 'click', autodescription.titlePrefixToggle );
+		jQ( '#title-prefixes-toggle :input' ).on( 'click', autodescription.titlePrefixToggle );
 
 		// Toggle Description additions removal.
-		jQuery( '#description-onblogname-toggle :input' ).on( 'click', autodescription.taglineToggleDesc );
-		jQuery( '#description-additions-toggle :input' ).on( 'click', autodescription.additionsToggleDesc );
+		jQ( '#tsf-description-onblogname-toggle :input' ).on( 'click', autodescription.taglineToggleDesc );
+		jQ( '#tsf-description-additions-toggle :input' ).on( 'click', autodescription.additionsToggleDesc );
 
 		// Change Home Page Title Example prop on input changes.
-		jQuery( '#autodescription-site-settings\\[homepage_title\\]' ).on( 'keydown keyup paste', autodescription.titleProp );
-		jQuery( '#home-title-location :input, #title-tagline-toggle :input, #title-separator input' ).on( 'click', autodescription.taglinePropTrigger );
-		jQuery( '#autodescription-site-settings\\[homepage_title_tagline\\]' ).on( 'keydown keyup paste', autodescription.taglineProp );
+		jQ( '#autodescription-site-settings\\[homepage_title\\]' ).on( 'input', autodescription.titleProp );
+		jQ( '#tsf-home-title-location :input, #tsf-title-tagline-toggle :input, #tsf-title-separator input' ).on( 'click', autodescription.taglinePropTrigger );
+		jQ( '#autodescription-site-settings\\[homepage_title_tagline\\]' ).on( 'input', autodescription.taglineProp );
 
 		// Make sure the titleProp is correctly rendered when revealed after being hidden.
-		jQuery( '#homepage-tab-general' ).on( 'change', autodescription.taglinePropTrigger );
+		jQ( '#homepage-tab-general' ).on( 'change', autodescription.taglinePropTrigger );
 
 		// Change Global Title Example prop on input changes.
-		jQuery( '#autodescription-site-settings\\[title_rem_additions\\]' ).on( 'click', autodescription.titleToggle );
+		jQ( '#autodescription-site-settings\\[title_rem_additions\\]' ).on( 'click', autodescription.titleToggle );
 
 		// Dynamic Placeholder, acts on keydown for a11y, although more cpu intensive. Acts on keyup for perfect output.
-		autodescription.docTitles().on( 'keydown keyup paste', autodescription.dynamicPlaceholder );
+		autodescription.docTitles().on( 'input', autodescription.dynamicPlaceholder );
 
 		// Move click on dynamic additions to focus input behind.
-		jQuery( '#autodescription-title-placeholder' ).on( 'click', autodescription.selectTitleInput );
+		jQ( '#tsf-title-placeholder' ).on( 'click', autodescription.selectTitleInput );
 
 		// Dismiss notices.
-		jQuery( '.autodescription-dismiss' ).on( 'click', autodescription.dismissNotice );
+		jQ( '.tsf-dismiss' ).on( 'click', autodescription.dismissNotice );
 
 		// AJAX counter
-		jQuery( '.theseoframework-counter' ).on( 'click', autodescription.counterUpdate );
+		jQ( '.tsf-counter' ).on( 'click', autodescription.counterUpdate );
 
 	}
 
Index: lib/js/autodescription.min.js
===================================================================
--- lib/js/autodescription.min.js	(revision 1475679)
+++ lib/js/autodescription.min.js	(working copy)
@@ -1,24 +1,25 @@
-window.autodescription={i:!1,h:autodescriptionL10n.titleTagline,a:autodescriptionL10n.counterType,c:"",b:function(){return jQuery("#autodescription_title, #autodescription-meta\\[doctitle\\], #autodescription-site-settings\\[homepage_title\\]")},l:function(){return jQuery("#autodescription_description, #autodescription-meta\\[description\\], #autodescription-site-settings\\[homepage_description\\]")},confirm:function(a){return confirm(a)},B:function(a){var b=jQuery(a.target),c=b.val().length,b=b.attr("placeholder").length;
-a=jQuery("#"+autodescription.o(a.target.id)+"_chars");var e=autodescription.c,g=autodescription.a,d="",k="",h="";0===c&&(c=b);100>c||175<=c?(d="ad-count-bad",k=autodescription.f("bad")):137>c||155<c&&175>c?(d="ad-count-okay",k=autodescription.f("okay")):(d="ad-count-good",k=autodescription.f("good"));e&&(d+=" "+e);g&&1!=g?2==g?h=k:3==g&&(h=c.toString()+" - "+k):h=c.toString();a.html(h).removeClass().addClass(d)},g:function(a){var b=jQuery(a.target),c=autodescriptionL10n.titleAdditions.length,e=autodescriptionL10n.blogDescription.length,
-g=autodescriptionL10n.siteTitle.length,d=b.val().length,k=b.attr("placeholder").length,h=jQuery("#autodescription-site-settings\\[homepage_title_tagline\\]").val(),b=3;a=jQuery("#"+autodescription.o(a.target.id)+"_chars");var f=0,n=autodescription.c,p=autodescription.a,l="",m="",q="";autodescription.h||(b=c=0);0===d&&(0!==g?d=g:f=k);0!==d&&(0!==c&&"undefined"!==typeof h&&(c=h.length,c=0!==c?c:e),f=0===c?d:d+b+c);25>f||75<=f?(l="ad-count-bad",m=autodescription.f("bad")):42>f||55<f&&75>f?(l="ad-count-okay",
-m=autodescription.f("okay")):(l="ad-count-good",m=autodescription.f("good"));n&&(l+=" "+n);p&&1!=p?2==p?q=m:3==p&&(q=f.toString()+" - "+m):q=f.toString();a.html(q).removeClass().addClass(l)},o:function(a){return a?a.replace(/([\[\]\/])/g,"\\$1"):a},J:function(a){a&&a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");return a},N:function(a){var b=jQuery(".autodescription-sep-js");a=jQuery(a.target).val();"pipe"===a?b.text(" | "):"dash"===a?b.text(" - "):b.html(" &"+a+"; ")},O:function(a){var b=
-jQuery("#autodescription-descsep-js");a=jQuery(a.target).val();"pipe"===a?b.text(" | "):"dash"===a?b.text(" - "):b.html(" &"+a+"; ")},statusBarHover:function(){var a=jQuery(".ad-bar-wrap").find("a");a.on("mouseenter",autodescription.P);a.on("mousemove",autodescription.S);a.on("mouseleave",autodescription.R)},P:function(){var a=jQuery(this),b=a.attr("data-desc");void 0!==b&&0===a.find("div").length&&(a.append('<div class="explanation-desc">'+b+"<div></div></div>"),b=a.find("div.explanation-desc").height()+
-28,a.find("div.explanation-desc").css("top",a.position().top-b+"px"))},S:function(a){var b=jQuery(a.target);a=a.pageX;var c=a-jQuery(".ad-bar-wrap").offset().left-11,e=b.find(".explanation-desc"),b=e.find("div");if(1>c)b.css("left","0px");else if(void 0!==e.offset()){var g=e.width(),e=e.offset().left+g+11;a>e?b.css("left",g+"px"):b.css("left",c+"px")}},R:function(){jQuery(this).find("div.explanation-desc").remove()},L:function(a){a=jQuery(a.target);var b=jQuery(".ad-bar-wrap a");a.closest(b).length||
-b.find("div.explanation-desc").remove()},T:function(a){var b=jQuery(a.target).attr("id");a=jQuery(a.target).attr("name");"undefined"!==typeof b&&(b=jQuery("#"+b+"-content"),a=jQuery("."+a+"-content"),"undefined"!==typeof b&&(a.removeClass("seoframework-active-tab-content"),b.addClass("seoframework-active-tab-content")))},U:function(a){a=jQuery(a.target);var b=jQuery(".custom-blogname-js");a.is(":checked")?(b.css("display","inline"),autodescription.h=!0):(b.css("display","none"),autodescription.h=
-!1);autodescription.b().trigger("keyup",autodescription.g)},V:function(a){a=jQuery(a.target);var b=jQuery("#on-blogname-js");a.is(":checked")?b.css("display","inline"):b.css("display","none")},X:function(a){a=jQuery(a.target).val();var b=jQuery(".title-additions-example-left"),c=jQuery(".title-additions-example-right");"right"===a?(b.css("display","none"),c.css("display","inline")):(b.css("display","inline"),c.css("display","none"))},Y:function(a){a=jQuery(a.target);var b=jQuery(".title-prefix-example");
-a.is(":checked")?b.css("display","none"):b.css("display","inline")},C:function(a){a=jQuery(a.target);var b=jQuery("#description-additions-js");a.is(":checked")?b.css("display","inline"):b.css("display","none")},W:function(){var a=jQuery("#title-tagline-toggle :input"),b=jQuery(".custom-blogname-js"),c=jQuery("#description-additions-toggle :input"),e=jQuery("#description-additions-js"),g=jQuery("#description-onblogname-toggle :input"),d=jQuery("#on-blogname-js"),k=jQuery("#title-additions-toggle :input"),
-h=jQuery(".title-additions-js");a.is(":checked")?b.css("display","inline"):b.css("display","none");c.is(":checked")?e.css("display","inline"):e.css("display","none");g.is(":checked")?d.css("display","inline"):d.css("display","none");k.is(":checked")?h.css("display","none"):h.css("display","inline")},Z:function(a){a=jQuery(a.target).val();var b=jQuery(".custom-title-js");0===a.length?b.text(autodescriptionL10n.siteTitle):b.text(a)},u:function(a){a=jQuery(a.target).val();var b=jQuery(".custom-tagline-js"),
-c=jQuery("#autodescription-site-settings\\[homepage_title\\]"),e=jQuery("#home-title-location input:checked").val(),g=jQuery("#autodescription-site-settings\\[homepage_tagline\\]"),d=autodescriptionL10n.siteTitle,k=d,h=autodescriptionL10n.blogDescription,f=jQuery("#title-separator input:checked").val(),n=autodescriptionL10n.titleSeparator;g.is(":checked")&&(0!==a.length&&(a=autodescription.J(a),h=jQuery("<div/>").text(a).html()),0!==f.length&&(n="pipe"===f?"|":"dash"===f?"-":jQuery("<div/>").html("&"+
-f+";").text()),k=0!==e.length&&"left"===e?d+" "+n+" "+h:h+" "+n+" "+d);b.html(h);c.attr("placeholder",k);autodescription.b().trigger("keyup",autodescription.g)},v:function(){jQuery("#autodescription-site-settings\\[homepage_title_tagline\\]").trigger("keyup",autodescription.u)},aa:function(){var a=jQuery(event.target),b=jQuery(".title-additions-js");a.is(":checked")?b.css("display","none"):b.css("display","inline")},D:function(){jQuery("div.autodescription-metaboxes :input, div#theseoframework-inpost-box .inside :input").not(".seoframework-tab :input").change(function(){autodescription.s()});
-jQuery("div.autodescription-metaboxes input[type=text], div.autodescription-metaboxes textarea, div#theseoframework-inpost-box .inside input[type=text], div#theseoframework-inpost-box .inside textarea").not(".nav-tab-wrapper :input").on("keyup",function(){autodescription.s()});window.onbeforeunload=function(){if(autodescription.i)return autodescriptionL10n.saveAlert};jQuery('div.autodescription-metaboxes input[type="submit"], div#publishing-action input[type="submit"], div#save-action input[type="submit"], a.submitdelete').click(function(){window.onbeforeunload=
-null})},s:function(){autodescription.i=!0},F:function(){return confirm(autodescriptionL10n.confirmReset)},m:function(a){var b=autodescriptionL10n.titleAdditions.length,c=jQuery("#autodescription-title-placeholder");if(0===b)return a=jQuery(a.target),a.css("text-indent","initial"),c.empty();var b=!1,e=jQuery("#home-title-location input:checked").val(),g=autodescriptionL10n.isRTL,d="";"undefined"!==typeof e&&0!==e.length?"1"===g?"right"===e&&(b=!0):"left"===e&&(b=!0):(d=autodescriptionL10n.titleLocation,
-e=autodescription.h,"1"===autodescriptionL10n.isHome?"1"===e&&("1"===g?"right"===d&&(b=!0):"left"===d&&(b=!0)):"1"===g?"left"===d&&(b=!0):"right"===d&&(b=!0));d=jQuery("#title-tagline-toggle :input");if("undefined"!==typeof d&&0<d.length&&!d.is(":checked"))a=jQuery(a.target),a.css("text-indent","initial"),c.css("display","none");else{a=jQuery(a.target);var k=a.val(),h=jQuery("#autodescription-title-offset"),f=0,n=(a.outerHeight(!0)-a.height())/2,p=(a.outerWidth()-a.width())/2,e=(a.outerWidth(!0)-
-a.width())/2,f=jQuery("#autodescription-site-settings\\[homepage_title_tagline\\]").val(),l="left",m=autodescriptionL10n.titleSeparator;"1"===g&&(l="right");"undefined"!==typeof f&&0===f.length&&(f=autodescriptionL10n.blogDescription);b?(d=m+" "+autodescriptionL10n.titleAdditions,"undefined"!==typeof f&&0<f.length&&(d=m+" "+f),a.css("text-indent","initial")):(d=autodescriptionL10n.titleAdditions+" "+m,"undefined"!==typeof f&&0<f.length&&(d=f+" "+m));h.text(k);h.css({fontFamily:a.css("fontFamily"),
-fontWeight:a.css("fontWeight"),letterSpacing:a.css("letterSpacing"),fontSize:a.css("fontSize")});f=h.width();g=a.width()-p-f;0>g&&(g=0);c.css({display:a.css("display"),lineHeight:a.css("lineHeight"),paddingTop:n+"px",paddingBottom:n+"px",fontFamily:a.css("fontFamily"),fontWeight:a.css("fontWeight"),fontSize:a.css("fontSize"),letterSpacing:a.css("letterSpacing"),maxWidth:g+"px"});"undefined"===typeof k||1>k.length?(b||a.css("text-indent","initial"),c.empty()):(c.text(d),a.outerWidth()>e&&(b?c.css(l,
-p+e+h.width()+"px"):(b=p+c.width(),0>b&&(b=0),c.css(l,e+"px"),a.css("text-indent",b+"px"))))}},M:function(){var a=autodescription.b();a.focus();if(a.setSelectionRange){var b=2*a.val().length;a.setSelectionRange(b,b)}else a.val(a.val()).focus()},I:function(){var a=autodescription.b();"undefined"!==typeof a.val()&&(0<a.val().length?a.trigger("keyup",autodescription.m):a.trigger("keyup",autodescription.g))},w:function(){autodescription.l().trigger("keyup",autodescription.B)},A:function(){autodescription.b().trigger("keyup",
-autodescription.g)},K:function(){autodescription.i=!1},H:function(a){var b=jQuery(a.target);b.parents(".seo-notice").slideUp(200,function(){b.remove()})},G:function(){autodescription.a+=1;3<autodescription.a&&(autodescription.a=0);jQuery.post(ajaxurl,{action:"the_seo_framework_update_counter"});autodescription.j()},j:function(){var a=autodescription.a;1==a?(autodescription.c="tsf-counter-one",autodescription.a=1):2==a?(autodescription.c="tsf-counter-two",autodescription.a=2):3==a?(autodescription.c=
-"tsf-counter-three",autodescription.a=3):(autodescription.c="tsf-counter-zero",autodescription.a=0);autodescription.ba()},ba:function(){autodescription.A();autodescription.w()},f:function(a){return autodescriptionL10n[a]},ready:function(){jQuery("div.updated, div.error, div.notice-warning").insertAfter("div.top-wrap");jQuery(document.body).ready(autodescription.j);jQuery(document.body).ready(autodescription.I);jQuery(document.body).ready(autodescription.A);jQuery(document.body).ready(autodescription.w);
-jQuery(document.body).ready(autodescription.W);jQuery(document.body).ready(autodescription.statusBarHover);jQuery(document.body).on("click touchstart MSPointerDown",autodescription.L);autodescription.D();jQuery(document.body).ready(autodescription.K);autodescription.l().on("keydown keyup paste",autodescription.B);autodescription.b().on("keydown keyup paste",autodescription.g);jQuery("#title-separator input").on("click",autodescription.N);jQuery("#description-separator input").on("click",autodescription.O);
-jQuery(".autodescription-js-confirm-reset").on("click.autodescription.autodescription_confirm_reset",autodescription.F);jQuery(".seoframework-tab").on("click",autodescription.T);jQuery("#title-tagline-toggle :input").on("click",autodescription.U);jQuery("#title-location input").on("click",autodescription.X);jQuery("#title-prefixes-toggle :input").on("click",autodescription.Y);jQuery("#description-onblogname-toggle :input").on("click",autodescription.V);jQuery("#description-additions-toggle :input").on("click",
-autodescription.C);jQuery("#autodescription-site-settings\\[homepage_title\\]").on("keydown keyup paste",autodescription.Z);jQuery("#home-title-location :input, #title-tagline-toggle :input, #title-separator input").on("click",autodescription.v);jQuery("#autodescription-site-settings\\[homepage_title_tagline\\]").on("keydown keyup paste",autodescription.u);jQuery("#homepage-tab-general").on("change",autodescription.v);jQuery("#autodescription-site-settings\\[title_rem_additions\\]").on("click",autodescription.aa);
-autodescription.b().on("keydown keyup paste",autodescription.m);jQuery("#autodescription-title-placeholder").on("click",autodescription.M);jQuery(".autodescription-dismiss").on("click",autodescription.H);jQuery(".theseoframework-counter").on("click",autodescription.G)}};jQuery(autodescription.ready);
+window.autodescription={g:!1,i:autodescriptionL10n.titleTagline,N:autodescriptionL10n.nonce,a:autodescriptionL10n.counterType,c:"",B:autodescriptionL10n.titleSeparator,K:autodescriptionL10n.descriptionSeparator,b:function(){return jQuery("#autodescription_title, #autodescription-meta\\[doctitle\\], #autodescription-site-settings\\[homepage_title\\]")},l:function(){return jQuery("#autodescription_description, #autodescription-meta\\[description\\], #autodescription-site-settings\\[homepage_description\\]")},
+confirm:function(a){return confirm(a)},D:function(a){var b=jQuery(a.target),d=b.val().length,c=b.attr("placeholder").length;a=jQuery("#"+autodescription.o(a.target.id)+"_chars");var b=autodescription.c,f=autodescription.a,e,h="";0===d&&(d=c);100>d||175<=d?(c="tsf-count-bad",e=autodescription.f("bad")):137>d||155<d&&175>d?(c="tsf-count-okay",e=autodescription.f("okay")):(c="tsf-count-good",e=autodescription.f("good"));b&&(c+=" "+b);f&&1!=f?2==f?h=e:3==f&&(h=d.toString()+" - "+e):h=d.toString();a.html(h).removeClass().addClass(c)},
+h:function(a){var b=jQuery(a.target),d=autodescriptionL10n.titleAdditions.length,c=autodescriptionL10n.blogDescription.length,f=autodescriptionL10n.siteTitle.length,e=b.val().length,h=b.attr("placeholder").length,k=jQuery("#autodescription-site-settings\\[homepage_title_tagline\\]").val(),g=3;a=jQuery("#"+autodescription.o(a.target.id)+"_chars");var l=0,b=autodescription.c,n=autodescription.a,m="";autodescription.i||(g=d=0);0===e&&(0!==f?e=f:l=h);0!==e&&(0!==d&&"undefined"!==typeof k&&(d=k.length,
+d=0!==d?d:c),l=0===d?e:e+g+d);25>l||75<=l?(c="tsf-count-bad",e=autodescription.f("bad")):42>l||55<l&&75>l?(c="tsf-count-okay",e=autodescription.f("okay")):(c="tsf-count-good",e=autodescription.f("good"));b&&(c+=" "+b);n&&1!=n?2==n?m=e:3==n&&(m=l.toString()+" - "+e):m=l.toString();a.html(m).removeClass().addClass(c)},o:function(a){return a?a.replace(/([\[\]\/])/g,"\\$1"):a},S:function(a){var b=jQuery(".autodescription-sep-js");a=jQuery(a.target).val();autodescription.B=a;"pipe"===a?b.text(" | "):"dash"===
+a?b.text(" - "):b.html(" &"+a+"; ")},T:function(a){var b=jQuery("#autodescription-descsep-js");a=jQuery(a.target).val();"pipe"===a?b.text(" | "):"dash"===a?b.text(" - "):b.html(" &"+a+"; ")},statusBarHover:function(){var a=jQuery(".tsf-seo-bar-inner-wrap").find("a");a.on("mouseenter",autodescription.V);a.on("mousemove",autodescription.X);a.on("mouseleave",autodescription.W)},V:function(){var a=jQuery(this),b=a.attr("data-desc");void 0!==b&&0===a.find("div").length&&(a.append('<div class="tsf-explanation-desc">'+
+b+"<div></div></div>"),b=a.find("div.tsf-explanation-desc").height()+28,a.find("div.tsf-explanation-desc").css("top",a.position().top-b+"px"))},X:function(a){var b=jQuery(a.target);a=a.pageX;var d=a-jQuery(".tsf-seo-bar-inner-wrap").offset().left-11,c=b.find(".tsf-explanation-desc"),b=c.find("div");if(1>d)b.css("left","0px");else if(void 0!==c.offset()){var f=c.width(),c=c.offset().left+f+11;a>c?b.css("left",f+"px"):b.css("left",d+"px")}},W:function(){jQuery(this).find("div.tsf-explanation-desc").remove()},
+P:function(a){a=jQuery(a.target);var b=jQuery(".tsf-seo-bar-inner-wrap a");a.closest(b).length||b.find("div.tsf-explanation-desc").remove()},Y:function(a){var b=jQuery(a.target).attr("id");a=jQuery(a.target).attr("name");"undefined"!==typeof b&&(b=jQuery("#"+b+"-content"),a=jQuery("."+a+"-content"),"undefined"!==typeof b&&(a.removeClass("tsf-active-tab-content"),b.addClass("tsf-active-tab-content")))},Z:function(a){a=jQuery(a.target);var b=jQuery(".tsf-custom-blogname-js");a.is(":checked")?(b.css("display",
+"inline"),autodescription.i=!0):(b.css("display","none"),autodescription.i=!1);autodescription.b().trigger("keyup",autodescription.h)},aa:function(a){a=jQuery(a.target);var b=jQuery("#tsf-on-blogname-js");a.is(":checked")?b.css("display","inline"):b.css("display","none")},ca:function(a){a=jQuery(a.target).val();var b=jQuery(".tsf-title-additions-example-left"),d=jQuery(".tsf-title-additions-example-right");"right"===a?(b.css("display","none"),d.css("display","inline")):(b.css("display","inline"),
+d.css("display","none"))},da:function(a){a=jQuery(a.target);var b=jQuery(".tsf-title-prefix-example");a.is(":checked")?b.css("display","none"):b.css("display","inline")},F:function(a){a=jQuery(a.target);var b=jQuery("#tsf-description-additions-js");a.is(":checked")?b.css("display","inline"):b.css("display","none")},ba:function(){var a=jQuery("#tsf-title-tagline-toggle :input"),b=jQuery(".tsf-custom-blogname-js"),d=jQuery("#tsf-description-additions-toggle :input"),c=jQuery("#tsf-description-additions-js"),
+f=jQuery("#tsf-description-onblogname-toggle :input"),e=jQuery("#tsf-on-blogname-js"),h=jQuery("#tsf-title-additions-toggle :input"),k=jQuery(".tsf-title-additions-js");a.is(":checked")?b.css("display","inline"):b.css("display","none");d.is(":checked")?c.css("display","inline"):c.css("display","none");f.is(":checked")?e.css("display","inline"):e.css("display","none");h.is(":checked")?k.css("display","none"):k.css("display","inline")},ea:function(a){a=jQuery(a.target).val();var b=jQuery(".custom-title-js");
+0===a.length?b.text(autodescriptionL10n.siteTitle):b.text(a)},w:function(a){a=jQuery(a.target).val();var b=jQuery(".tsf-custom-tagline-js"),d=jQuery("#autodescription-site-settings\\[homepage_title\\]"),c=jQuery("#tsf-home-title-location input:checked").val(),f=jQuery("#autodescription-site-settings\\[homepage_tagline\\]"),e=autodescriptionL10n.siteTitle,h=e,k=autodescriptionL10n.blogDescription,g=autodescription.s("title");f.is(":checked")&&(0!==a.length&&(k=a),h=0!==c.length&&"left"===c?e+" "+g+
+" "+k:k+" "+g+" "+e);b.text(k);d.attr("placeholder",h);autodescription.b().trigger("input",autodescription.h)},A:function(){jQuery("#autodescription-site-settings\\[homepage_title_tagline\\]").trigger("input",autodescription.w)},fa:function(){var a=jQuery(event.target),b=jQuery(".tsf-title-additions-js");a.is(":checked")?b.css("display","none"):b.css("display","inline")},G:function(){jQuery(".tsf-metaboxes :input, #tsf-inpost-box .inside :input").not(".tsf-tab :input").change(function(){autodescription.u()});
+jQuery(".tsf-metaboxes input[type=text], .tsf-metaboxes textarea, #tsf-inpost-box .inside input[type=text], #tsf-inpost-box .inside textarea").not(".tsf-nav-tab-wrapper :input").on("input",function(){autodescription.u()});window.onbeforeunload=function(){if(autodescription.g)return autodescriptionL10n.saveAlert};jQuery('.tsf-metaboxes input[type="submit"], #publishing-action input[type="submit"], #save-action input[type="submit"], a.submitdelete').click(function(){window.onbeforeunload=null})},u:function(){autodescription.g=
+!0},H:function(){return confirm(autodescriptionL10n.confirmReset)},m:function(a){var b=autodescriptionL10n.titleAdditions.length,d=jQuery("#tsf-title-placeholder");if(0===b)return a=jQuery(a.target),a.css("text-indent","initial"),d.empty();var b=!1,c=jQuery("#tsf-home-title-location input:checked").val(),f=autodescriptionL10n.isRTL;if("undefined"!==typeof c&&0!==c.length)"1"===f?"right"===c&&(b=!0):"left"===c&&(b=!0);else{var c=autodescriptionL10n.titleLocation,e=autodescription.i;"1"===autodescriptionL10n.isHome?
+"1"===e&&("1"===f?"right"===c&&(b=!0):"left"===c&&(b=!0)):"1"===f?"left"===c&&(b=!0):"right"===c&&(b=!0)}c=jQuery("#tsf-title-tagline-toggle :input");if("undefined"!==typeof c&&0<c.length&&!c.is(":checked"))a=jQuery(a.target),a.css("text-indent","initial"),d.css("display","none");else{a=jQuery(a.target);var h=a.val(),k=jQuery("#tsf-title-offset"),g,l=(a.outerHeight(!0)-a.height())/2,n=(a.outerWidth()-a.width())/2,c=(a.outerWidth(!0)-a.width())/2;g=jQuery("#autodescription-site-settings\\[homepage_title_tagline\\]").val();
+var e="left",m=autodescription.s("title");"1"===f&&(e="right");"undefined"!==typeof g&&0===g.length&&(g=autodescriptionL10n.blogDescription);b?(f=m+" "+autodescriptionL10n.titleAdditions,"undefined"!==typeof g&&0<g.length&&(f=m+" "+g),a.css("text-indent","initial")):(f=autodescriptionL10n.titleAdditions+" "+m,"undefined"!==typeof g&&0<g.length&&(f=g+" "+m));k.text(h);k.css({fontFamily:a.css("fontFamily"),fontWeight:a.css("fontWeight"),letterSpacing:a.css("letterSpacing"),fontSize:a.css("fontSize")});
+g=k.width();g=a.width()-n-g;0>g&&(g=0);d.css({display:a.css("display"),lineHeight:a.css("lineHeight"),paddingTop:l+"px",paddingBottom:l+"px",fontFamily:a.css("fontFamily"),fontWeight:a.css("fontWeight"),fontSize:a.css("fontSize"),letterSpacing:a.css("letterSpacing"),maxWidth:g+"px"});"undefined"===typeof h||1>h.length?(b||a.css("text-indent","initial"),d.empty()):(d.text(f),a.outerWidth()>c&&(b?d.css(e,n+c+k.width()+"px"):(b=n+d.width(),0>b&&(b=0),d.css(e,c+"px"),a.css("text-indent",b+"px"))))}},
+R:function(){var a=autodescription.b();a.focus();if(a.setSelectionRange){var b=2*a.val().length;a.setSelectionRange(b,b)}else a.val(a.val()).focus()},M:function(){var a=autodescription.b();"undefined"!==typeof a.val()&&(0<a.val().length?a.trigger("input",autodescription.m):a.trigger("input",autodescription.h))},ga:function(){autodescription.l().trigger("input",autodescription.D)},ha:function(){autodescription.b().trigger("input",autodescription.h)},O:function(){autodescription.g=!1},L:function(a){var b=
+jQuery(a.target);b.parents(".tsf-notice").slideUp(200,function(){b.remove()})},U:function(a){jQuery(a).toggleClass("tsf-loading")},C:function(a,b){var d="tsf-success",c=2500;b||(d="tsf-error",c=5E3);jQuery(a).removeClass("tsf-loading").addClass(d).fadeOut(c)},v:function(a){jQuery(a).stop().empty().attr("class","tsf-ajax").css("opacity","1").removeAttr("style")},I:function(){autodescription.a+=1;3<autodescription.a&&(autodescription.a=0);autodescription.j();var a=0;autodescription.v(".tsf-counter .tsf-ajax");
+autodescription.U(".tsf-counter .tsf-ajax");jQuery.ajax({method:"POST",url:ajaxurl,ja:"json",data:{action:"the_seo_framework_update_counter",nonce:autodescription.N,val:autodescription.a},async:!0,success:function(b){b=jQuery.parseJSON(b);"success"===b.type&&(a=1);autodescription.J(".tsf-counter .tsf-ajax",a)}})},J:function(a,b){switch(b){case 0:autodescription.C(a,!1);break;case 1:autodescription.C(a,!0);break;default:autodescription.v(a)}},j:function(){var a=autodescription.a,b=autodescription.g;
+1==a?(autodescription.c="tsf-counter-one",autodescription.a=1):2==a?(autodescription.c="tsf-counter-two",autodescription.a=2):3==a?(autodescription.c="tsf-counter-three",autodescription.a=3):(autodescription.c="tsf-counter-zero",autodescription.a=0);autodescription.ia();autodescription.g=b},ia:function(){autodescription.ha();autodescription.ga()},f:function(a){return autodescriptionL10n[a]},s:function(a){a="title"===a?autodescription.B:autodescription.K;"pipe"===a||"|"===a?a="|":"dash"===a||"-"===
+a?a="-":123>a.charCodeAt(0)&&(a=jQuery("<div/>").html("&"+a+";").text());return a},ready:function(a){a("div.updated, div.error, div.notice-warning").insertAfter("div.tsf-top-wrap");a(document.body).ready(autodescription.j);a(document.body).ready(autodescription.M);a(document.body).ready(autodescription.ba);a(document.body).ready(autodescription.statusBarHover);a(document.body).on("click touchstart MSPointerDown",autodescription.P);autodescription.G();a(document.body).ready(autodescription.O);autodescription.l().on("input",
+autodescription.D);autodescription.b().on("input",autodescription.h);a("#tsf-title-separator input").on("click",autodescription.S);a("#tsf-description-separator input").on("click",autodescription.T);a(".autodescription-js-confirm-reset").on("click.autodescription.autodescription_confirm_reset",autodescription.H);a(".tsf-tab").on("click",autodescription.Y);a("#tsf-title-tagline-toggle :input").on("click",autodescription.Z);a("#tsf-title-location input").on("click",autodescription.ca);a("#title-prefixes-toggle :input").on("click",
+autodescription.da);a("#tsf-description-onblogname-toggle :input").on("click",autodescription.aa);a("#tsf-description-additions-toggle :input").on("click",autodescription.F);a("#autodescription-site-settings\\[homepage_title\\]").on("input",autodescription.ea);a("#tsf-home-title-location :input, #tsf-title-tagline-toggle :input, #tsf-title-separator input").on("click",autodescription.A);a("#autodescription-site-settings\\[homepage_title_tagline\\]").on("input",autodescription.w);a("#homepage-tab-general").on("change",
+autodescription.A);a("#autodescription-site-settings\\[title_rem_additions\\]").on("click",autodescription.fa);autodescription.b().on("input",autodescription.m);a("#tsf-title-placeholder").on("click",autodescription.R);a(".tsf-dismiss").on("click",autodescription.L);a(".tsf-counter").on("click",autodescription.I)}};jQuery(autodescription.ready);
Index: load.class.php
===================================================================
--- load.class.php	(revision 1475679)
+++ load.class.php	(working copy)
@@ -16,6 +16,28 @@
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+defined( 'ABSPATH' ) or die;
+
+add_action( 'admin_init', 'the_seo_framework_upgrade', 5 );
+/**
+ * Determines whether the plugin needs an option upgrade.
+ *
+ * @action admin_init
+ * @priority 5
+ *
+ * @since 2.7.0
+ */
+function the_seo_framework_upgrade() {
+
+	if ( false === the_seo_framework_active() )
+		return;
+
+	if ( get_option( 'the_seo_framework_upgraded_db_version' ) >= THE_SEO_FRAMEWORK_DB_VERSION )
+		return;
+
+	require_once( THE_SEO_FRAMEWORK_DIR_PATH_FUNCT . 'upgrade.php' );
+}
+
 add_action( 'plugins_loaded', 'the_seo_framework_init', 5 );
 /**
  * Load The_SEO_Framework_Load class
@@ -29,6 +51,7 @@
  * @since 2.2.5
  */
 function the_seo_framework_init() {
+
 	//* Cache the class. Do not run everything more than once.
 	static $the_seo_framework = null;
 
@@ -40,19 +63,14 @@
 }
 
 /**
- * Allow this plugin to load through filter
+ * Determines whether this plugin should load.
  *
- * Applies the_seo_framework_load filters.
- *
- * @return bool allow loading of plugin
- *
- * @since 2.1.0
+ * @since 2.3.7
  * @staticvar bool $loaded
+ * Applies filters 'the_seo_framework_load' : bool
  *
- * New function name.
- * @since 2.3.7
- *
  * @action plugins_loaded
+ * @return bool Whether to allow loading of plugin.
  */
 function the_seo_framework_load() {
 
@@ -65,17 +83,14 @@
 }
 
 /**
- * Load plugin files
+ * Load plugin files.
  * @uses THE_SEO_FRAMEWORK_DIR_PATH_FUNCT
  * @uses THE_SEO_FRAMEWORK_DIR_PATH_CLASS
  *
- * @benchmarked require_once (file inclusion) takes less than 0.0001s.
- *
  * @since 2.1.6
  */
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_FUNCT . 'compat.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_FUNCT . 'optionsapi.php' );
-//require_once( THE_SEO_FRAMEWORK_DIR_PATH_FUNCT . 'benchmark.php' );
 
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'core.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'debug.class.php' );
@@ -82,13 +97,11 @@
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'compat.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'query.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'init.class.php' );
-require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'admininit.class.php' );
+require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'admin-init.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'render.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'detect.class.php' );
-
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'postdata.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'termdata.class.php' );
-
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'generate.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'generate-description.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'generate-title.class.php' );
@@ -95,7 +108,6 @@
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'generate-url.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'generate-image.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'generate-ldjson.class.php' );
-
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'search.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'doingitright.class.php' );
 require_once( THE_SEO_FRAMEWORK_DIR_PATH_CLASS . 'inpost.class.php' );
@@ -131,6 +143,23 @@
 	public $script_debug = false;
 
 	/**
+	 * Unserializing instances of this class is forbidden.
+	 */
+	private function __wakeup() { }
+
+	/**
+	 * Cloning of this class is forbidden.
+	 */
+	private function __clone() { }
+
+	/**
+	 * Handle unapproachable invoked methods.
+	 */
+	public function __call( $name, $arguments ) {
+		parent::__call( $name, $arguments );
+	}
+
+	/**
 	 * Constructor, setup debug vars and then load parent constructor.
 	 */
 	public function __construct() {
@@ -203,7 +232,7 @@
 		if ( is_object( $class ) && is_string( $method ) ) {
 			$class = get_class( $class );
 
-			if ( $class === get_class( $this ) ) {
+			if ( get_class( $this ) === $class ) {
 				if ( method_exists( $this, $method ) ) {
 					if ( empty( $args ) ) {
 						// In-Object calling.
@@ -213,7 +242,7 @@
 						$output = call_user_func_array( array( $this, $method ), $args );
 					}
 				} else {
-					$this->_doing_it_wrong( (string) $class . '::' . (string) $method, __( "Class or Method not found.", 'autodescription' ), $version );
+					$this->_doing_it_wrong( $class . '::' . $method, __( 'Class or Method not found.', 'autodescription' ), $version );
 				}
 			} else {
 				if ( method_exists( $class, $method ) ) {
@@ -223,10 +252,10 @@
 						$output = call_user_func_array( array( $class, $method ), $args );
 					}
 				} else {
-					$this->_doing_it_wrong( (string) $class . '::' . (string) $method, __( "Class or Method not found.", 'autodescription' ), $version );
+					$this->_doing_it_wrong( $class . '::' . $method, __( 'Class or Method not found.', 'autodescription' ), $version );
 				}
 			}
-		} else if ( is_string( $class ) && is_string( $method ) ) {
+		} elseif ( is_string( $class ) && is_string( $method ) ) {
 			//* This could be combined with the one above.
 			if ( method_exists( $class, $method ) ) {
 				if ( empty( $args ) ) {
@@ -235,9 +264,9 @@
 					$output = call_user_func_array( array( $class, $method ), $args );
 				}
 			} else {
-				$this->_doing_it_wrong( (string) $class . '::' . (string) $method, __( "Class or Method not found.", 'autodescription' ), $version );
+				$this->_doing_it_wrong( $class . '::' . $method, __( 'Class or Method not found.', 'autodescription' ), $version );
 			}
-		} else if ( is_string( $class ) ) {
+		} elseif ( is_string( $class ) ) {
 			//* Class is function.
 			$func = $class;
 
@@ -247,10 +276,9 @@
 				$output = call_user_func_array( $func, $args );
 			}
 		} else {
-			$this->_doing_it_wrong( __CLASS__ . '::' . __FUNCTION__, __( "Function needs to be called as a string.", 'autodescription' ), $version );
+			$this->_doing_it_wrong( __METHOD__, __( 'Function needs to be called as a string.', 'autodescription' ), $version );
 		}
 
 		return $output;
 	}
-
 }
